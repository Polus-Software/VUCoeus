/** Copyright (c) Massachusetts Institute of Technology
 * 77 Massachusetts Avenue, Cambridge, MA 02139-4307
 * All rights reserved.
 */

package edu.mit.coeus.award.gui;

import edu.mit.coeus.award.AwardConstants;
import edu.mit.coeus.award.AwardLabelConstants;
import edu.mit.coeus.award.bean.AwardContactDetailsBean;
import edu.mit.coeus.award.controller.AwardContactsController;
import edu.mit.coeus.gui.CoeusDlgWindow;
import edu.mit.coeus.gui.CoeusFontFactory;
import edu.mit.coeus.gui.CoeusMessageResources;
import edu.mit.coeus.search.gui.CoeusSearch;
import edu.mit.coeus.utils.CoeusGuiConstants;
import edu.mit.coeus.utils.CoeusOptionPane;
import edu.mit.coeus.utils.CoeusVector;
import edu.mit.coeus.utils.ComboBoxBean;
import edu.mit.coeus.utils.KeyConstants;
import edu.mit.coeus.utils.ScreenFocusTraversalPolicy;
import edu.mit.coeus.utils.Utils;
import edu.mit.coeus.utils.query.And;
import edu.mit.coeus.utils.query.Equals;
import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;

/*
 * AwardDetailSyncForm.java
 *
 * Created on May 06, 2009, 02:38 PM
 * @author keerthyjayaraj
 */
public class AwardContactsSyncForm extends javax.swing.JPanel implements ActionListener {
    
    private char syncType;
    private CoeusDlgWindow dlgSyncContacts;
    private AwardContactsController parent;
    private AwardContactDetailsBean selectedBean = null;
    private int selectedRow = -1;
    private HashMap hmRolodex = null;
    private CoeusMessageResources coeusMessageResources = null;
    private HashMap syncTarget = null;
    private static final String MSGKEY_ENTER_ROLODEX    = "awardContacts_exceptionCode.1210";
    private static final String MSGKEY_DUPLICATE_CONTACT = "awardContacts_exceptionCode.1207";
    
    /** Creates new form AwardContactsSyncForm */
    
    public AwardContactsSyncForm(char mode, int selRow, AwardContactsController parent) {
        this.syncType = mode;
        selectedRow = (syncType == AwardConstants.MODIFY_SYNC)? selRow : -1;
        coeusMessageResources = CoeusMessageResources.getInstance();
        this.parent = parent;
        initComponents();
        registerComponents();
    }
    
    /**
     * Is used to register the form components
     */
    private void registerComponents() {
        cmbContactType.setModel(new DefaultComboBoxModel(parent.getContactTypes()));
        dlgSyncContacts = new CoeusDlgWindow(CoeusGuiConstants.getMDIForm(), true);
        //Set Focus Traversal Policy
        java.awt.Component[] components = { btnCancel,rbtnActive,rbtnAll,
                                        chkFabE,chkCS,cmbContactType,btnRolodex,btnOK};
        ScreenFocusTraversalPolicy traversePolicy = new ScreenFocusTraversalPolicy( components );
        setFocusTraversalPolicy(traversePolicy);
        setFocusCycleRoot(true);
        
        dlgSyncContacts.addComponentListener(
                new ComponentAdapter(){
            public void componentShown(ComponentEvent e){
                btnCancel.requestFocusInWindow();
            }
        });
        
        //Add listeners to all the buttons
        btnOK.addActionListener(this);
        btnCancel.addActionListener(this);
        btnRolodex.addActionListener(this);
    }
    
    
    
    /**
     * Is used to display the form
     */
    public HashMap display() {
        
        if(syncType == AwardConstants.ADD_SYNC){
            dlgSyncContacts.setTitle(AwardLabelConstants.ADD_SYNC);
        }else if(syncType == AwardConstants.MODIFY_SYNC){
            dlgSyncContacts.setTitle(AwardLabelConstants.MODIFY_SYNC);
            CoeusVector cvContactInfo = parent.getContactInfo();
            if(cvContactInfo!=null && cvContactInfo.size()>selectedRow){
                this.selectedBean = (AwardContactDetailsBean)parent.getContactInfo().get(selectedRow);
            }
            cmbContactType.setSelectedItem(parent.getContactType());
            txtRolodex.setText(String.valueOf(parent.getRolodexName()));
        }
        dlgSyncContacts.getContentPane().add(this);
        dlgSyncContacts.setSize(430, 280);
        dlgSyncContacts.setResizable(false);
        dlgSyncContacts.setLocation(CoeusDlgWindow.CENTER);
        dlgSyncContacts.setVisible(true);
        return syncTarget;
    }
    
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        btnGrpSyncMode = new javax.swing.ButtonGroup();
        btnOK = new edu.mit.coeus.utils.CoeusButton();
        btnCancel = new edu.mit.coeus.utils.CoeusButton();
        pnlAwardTypes = new javax.swing.JPanel();
        rbtnActive = new javax.swing.JRadioButton();
        rbtnAll = new javax.swing.JRadioButton();
        chkFabE = new javax.swing.JCheckBox();
        chkCS = new javax.swing.JCheckBox();
        pnlContact = new javax.swing.JPanel();
        lblContactType = new javax.swing.JLabel();
        lblRolodex = new javax.swing.JLabel();
        btnRolodex = new javax.swing.JButton();
        txtRolodex = new edu.mit.coeus.utils.CoeusTextField();
        cmbContactType = new edu.mit.coeus.utils.CoeusComboBox();

        setLayout(new java.awt.GridBagLayout());

        btnOK.setMnemonic('O');
        btnOK.setText("OK");
        btnOK.setFont(CoeusFontFactory.getLabelFont());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(8, 5, 3, 5);
        add(btnOK, gridBagConstraints);

        btnCancel.setMnemonic('C');
        btnCancel.setText("Cancel");
        btnCancel.setFont(CoeusFontFactory.getLabelFont());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 5);
        add(btnCancel, gridBagConstraints);

        pnlAwardTypes.setLayout(new java.awt.GridLayout(4, 1, 2, 5));

        pnlAwardTypes.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), coeusMessageResources.parseLabelKey("awardSyncDetails.3051"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, CoeusFontFactory.getLabelFont()));
        pnlAwardTypes.setMaximumSize(new java.awt.Dimension(320, 130));
        pnlAwardTypes.setMinimumSize(new java.awt.Dimension(320, 130));
        pnlAwardTypes.setPreferredSize(new java.awt.Dimension(320, 130));
        btnGrpSyncMode.add(rbtnActive);
        rbtnActive.setFont(CoeusFontFactory.getNormalFont());
        rbtnActive.setSelected(true);
        rbtnActive.setText(coeusMessageResources.parseLabelKey("awardSyncDetails.3053"));
        rbtnActive.setIconTextGap(8);
        pnlAwardTypes.add(rbtnActive);

        btnGrpSyncMode.add(rbtnAll);
        rbtnAll.setFont(CoeusFontFactory.getNormalFont());
        rbtnAll.setText(coeusMessageResources.parseLabelKey("awardSyncDetails.3052"));
        rbtnAll.setIconTextGap(8);
        pnlAwardTypes.add(rbtnAll);

        chkFabE.setFont(CoeusFontFactory.getNormalFont());
        chkFabE.setText(coeusMessageResources.parseLabelKey("awardSyncDetails.3056"));
        chkFabE.setIconTextGap(8);
        pnlAwardTypes.add(chkFabE);

        chkCS.setFont(CoeusFontFactory.getNormalFont());
        chkCS.setText(coeusMessageResources.parseLabelKey("awardSyncDetails.3057"));
        chkCS.setIconTextGap(8);
        pnlAwardTypes.add(chkCS);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(pnlAwardTypes, gridBagConstraints);

        pnlContact.setLayout(new java.awt.GridBagLayout());

        pnlContact.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contact", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, CoeusFontFactory.getLabelFont()));
        pnlContact.setMinimumSize(new java.awt.Dimension(320, 90));
        pnlContact.setPreferredSize(new java.awt.Dimension(320, 90));
        lblContactType.setFont(CoeusFontFactory.getLabelFont());
        lblContactType.setText("Contact Type:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        pnlContact.add(lblContactType, gridBagConstraints);

        lblRolodex.setFont(CoeusFontFactory.getLabelFont());
        lblRolodex.setText("Name/Organization:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        pnlContact.add(lblRolodex, gridBagConstraints);

        btnRolodex.setFont(CoeusFontFactory.getLabelFont());
        btnRolodex.setIcon(new ImageIcon(getClass().getClassLoader().getResource(CoeusGuiConstants.SEARCH_ICON)));
        btnRolodex.setPreferredSize(new java.awt.Dimension(20, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        pnlContact.add(btnRolodex, gridBagConstraints);

        txtRolodex.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        pnlContact.add(txtRolodex, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        pnlContact.add(cmbContactType, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(pnlContact, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents
    /**
     * Is used to do the necessary action whenever a specific action is performed
     * @param ActionEvent
     */
    public void actionPerformed(ActionEvent ae) {
        Object source =ae.getSource();
        try {
            dlgSyncContacts.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            if (source.equals(btnCancel)) {
                
                dlgSyncContacts.setVisible(false);
            }else if (source.equals(btnOK)) {
                
                performOKAction();
            }else if (source.equals(btnRolodex)) {
                
                showRolodex();
            }
        } finally {
            dlgSyncContacts.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        }
    }
    
    private void performOKAction(){
        
        if(validateBeforeUpdate()){
            syncTarget = new HashMap();
            if(rbtnActive.isSelected()){
                syncTarget.put(KeyConstants.SYNC_TARGET,AwardConstants.SYNC_ACTIVE_CHILDREN);
            }else if(rbtnAll.isSelected()){
                syncTarget.put(KeyConstants.SYNC_TARGET,AwardConstants.SYNC_ALL_CHILDREN);
            }
            String includeFABE = (chkFabE.isSelected())?"Y":"N";
            String includeCS   = (chkCS.isSelected())?"Y":"N";
            syncTarget.put(KeyConstants.SYNC_FABE_ACCOUNTS,includeFABE);
            syncTarget.put(KeyConstants.SYNC_CS_ACCOUNTS,includeCS);
            //COEUSDEV 210,211,215,217 - Award Syncing Issues
            if(syncType == AwardConstants.ADD_SYNC && hmRolodex!=null){
                Vector vecRolodex = new Vector();
                vecRolodex.add(hmRolodex);
                parent.addRolodex(vecRolodex,true);
                parent.saveFormData();
                parent.setContactType(cmbContactType.getSelectedItem().toString(),true);
                
            }else if(syncType == AwardConstants.MODIFY_SYNC){
                parent.setContactType(cmbContactType.getSelectedItem().toString(),true);
                if(hmRolodex!=null){
                    parent.modifyRolodex(hmRolodex,true);
                }
                parent.saveFormData();
            }
//            if(!cmbContactType.getSelectedItem().equals(parent.getContactType())){
            
//                 parent.saveFormData();
//            }
            //COEUSDEV 210,211,215,217 - End
            dlgSyncContacts.setVisible(false);
        }
    }
    
    
    private void showRolodex() {
        CoeusSearch rolodexSearch = null;
        hmRolodex     = null;
        
        try{
            rolodexSearch = new CoeusSearch( CoeusGuiConstants.getMDIForm(),
                    CoeusGuiConstants.ROLODEX_SEARCH,1) ;
            rolodexSearch.showSearchWindow();
            hmRolodex = rolodexSearch.getSelectedRow();
            //set the rolodex name in the text Field
            String rolodexName;
            String firstName = Utils.convertNull(hmRolodex.get("FIRST_NAME")).trim();
            if ( firstName.length() > 0) {
                StringBuffer sbName = new StringBuffer();
                sbName.append(Utils.convertNull(hmRolodex.get("LAST_NAME")).trim());
                sbName.append(" ");
                sbName.append(Utils.convertNull(hmRolodex.get("SUFFIX")).trim());
                sbName.append(", ");
                sbName.append(Utils.convertNull(hmRolodex.get("PREFIX")).trim());
                sbName.append(" ");
                sbName.append(firstName);
                sbName.append(" ");
                sbName.append(Utils.convertNull(hmRolodex.get("MIDDLE_NAME")).trim());
                rolodexName = sbName.toString();
            } else {
                rolodexName = Utils.convertNull(hmRolodex.get("ORGANIZATION")).trim();
            }
            txtRolodex.setText(rolodexName);
        }catch( Exception err ){
            err.printStackTrace();
        }
        
    }
    
    private boolean validateBeforeUpdate(){
        boolean success = false;
        if(CoeusGuiConstants.EMPTY_STRING.equals(txtRolodex.getText().trim())){
            CoeusOptionPane.showInfoDialog(coeusMessageResources.parseMessageKey(MSGKEY_ENTER_ROLODEX));
            return success;
        }else{
            CoeusVector cvContactsData = parent.getContactInfo();
            if(cvContactsData!= null && cvContactsData.size() > 0){
                String rolodexId = null;
                if(hmRolodex!=null){
                    rolodexId = String.valueOf(hmRolodex.get("ROLODEX_ID"));
                }else if (syncType == 'M'){
                    rolodexId = String.valueOf(selectedBean.getRolodexId());
                    cvContactsData.remove(selectedRow);
                }
                String contactCode = ((ComboBoxBean)cmbContactType.getSelectedItem()).getCode();
                Equals contactType = new Equals("contactTypeCode",new Integer(contactCode));
                Equals roloID = new Equals("rolodexId", new Integer(rolodexId));
                And AwContact = new And(contactType , roloID);
                CoeusVector cvFilterd = cvContactsData.filter(AwContact);
                
                if(cvFilterd!= null && cvFilterd.size() > 0) {
                    
                    CoeusOptionPane.showInfoDialog(coeusMessageResources.parseMessageKey(MSGKEY_DUPLICATE_CONTACT));
                    return success;
                }
            }
        }
        success = true;
        return success;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public edu.mit.coeus.utils.CoeusButton btnCancel;
    public javax.swing.ButtonGroup btnGrpSyncMode;
    public edu.mit.coeus.utils.CoeusButton btnOK;
    public javax.swing.JButton btnRolodex;
    public javax.swing.JCheckBox chkCS;
    public javax.swing.JCheckBox chkFabE;
    public edu.mit.coeus.utils.CoeusComboBox cmbContactType;
    public javax.swing.JLabel lblContactType;
    public javax.swing.JLabel lblRolodex;
    public javax.swing.JPanel pnlAwardTypes;
    public javax.swing.JPanel pnlContact;
    public javax.swing.JRadioButton rbtnActive;
    public javax.swing.JRadioButton rbtnAll;
    public edu.mit.coeus.utils.CoeusTextField txtRolodex;
    // End of variables declaration//GEN-END:variables
    
}
