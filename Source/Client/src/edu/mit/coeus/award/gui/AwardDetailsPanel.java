/** Copyright (c) Massachusetts Institute of Technology
 * 77 Massachusetts Avenue, Cambridge, MA 02139-4307
 * All rights reserved.
 */

package edu.mit.coeus.award.gui;

import edu.mit.coeus.utils.*;
import edu.mit.coeus.award.bean.AwardAmountInfoBean;
import edu.mit.coeus.gui.CoeusFontFactory;
import edu.mit.coeus.exception.CoeusClientException;
import edu.mit.coeus.brokers.*;

/**
 * AwardDetailsPanel.java
 * Created on March 16, 2004, 12:40 PM
 * @author  Vyjayanthi
 */
public class AwardDetailsPanel extends javax.swing.JComponent {
    
    private static final char GET_AWARD_SUMMARY = 'B';
    private static final String REQUIRED_DATEFORMAT = "dd-MMM-yyyy";
    private static final String EMPTY_STRING = "";
    private DateUtils dateUtils;
    private static final String CONNECTION_STRING = CoeusGuiConstants.CONNECTION_URL +
        "/AwardMaintenanceServlet";
        
    /** Creates new form AwardDetailsPanel */
    public AwardDetailsPanel() {
        initComponents();
        dateUtils = new DateUtils();
    }
    
    /** Creates new form AwardDetailsPanel
     * @param mitAwardNumber the award number for which the details are to be retrieved
     */    
    public AwardDetailsPanel(String mitAwardNumber) {
        this();
        setFormData(mitAwardNumber);
    }
    
    /** Method to set the form data
     * @param mitAwardNumber takes the mit award number to set data
     */
    public void setFormData(String mitAwardNumber){
        try{
            AwardAmountInfoBean awardAmountInfoBean = getFormData(mitAwardNumber);
            if( awardAmountInfoBean == null ) return ;
            if( awardAmountInfoBean.getFinalExpirationDate() == null ){
                txtFinalExpDate.setText(EMPTY_STRING);
            }else{
                txtFinalExpDate.setText( dateUtils.formatDate(
                    awardAmountInfoBean.getFinalExpirationDate().toString(), REQUIRED_DATEFORMAT) );
            }
            if( awardAmountInfoBean.getObligationExpirationDate() == null ){
                txtObligExpDate.setText(EMPTY_STRING);
            }else{
                txtObligExpDate.setText( dateUtils.formatDate(
                    awardAmountInfoBean.getObligationExpirationDate().toString(), REQUIRED_DATEFORMAT) );
            }
            if( awardAmountInfoBean.getCurrentFundEffectiveDate() == null ){
                txtEffDate.setText(EMPTY_STRING);
            }else{
                txtEffDate.setText( dateUtils.formatDate(
                    awardAmountInfoBean.getCurrentFundEffectiveDate().toString(), REQUIRED_DATEFORMAT) );
            }
            txtAnticipatedAmt.setValue(awardAmountInfoBean.getAnticipatedTotalAmount());
            txtObligatedAmt.setValue(awardAmountInfoBean.getAmountObligatedToDate());
            txtArTitle.setText(awardAmountInfoBean.getTitle());
            txtArTitle.setCaretPosition(0);
        }catch (CoeusClientException coeusClientException){
            coeusClientException.printStackTrace();
        }
    }
    
    /** Getter for property awardAmountInfoBean.
     * @return Value of property awardAmountInfoBean
     * @throws CoeusClientException
     */
    private AwardAmountInfoBean getFormData(String mitAwardNumber) throws CoeusClientException{
        AwardAmountInfoBean awardBean;
        RequesterBean requester = new RequesterBean();
        requester.setFunctionType(GET_AWARD_SUMMARY);
        requester.setDataObject( mitAwardNumber );
        AppletServletCommunicator comm = new AppletServletCommunicator(CONNECTION_STRING, requester);
        comm.send();
        ResponderBean response = comm.getResponse();
        if(response.isSuccessfulResponse()){
            awardBean = (AwardAmountInfoBean)response.getDataObject();
            return awardBean;
        }else {
            throw new CoeusClientException(response.getMessage());
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        lblFinalExpDate = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        lblObligExpDate = new javax.swing.JLabel();
        lblEffDate = new javax.swing.JLabel();
        lblAnticipatedAmt = new javax.swing.JLabel();
        lblObligatedAmt = new javax.swing.JLabel();
        txtFinalExpDate = new javax.swing.JTextField();
        txtObligExpDate = new javax.swing.JTextField();
        txtEffDate = new javax.swing.JTextField();
        txtAnticipatedAmt = new edu.mit.coeus.utils.DollarCurrencyTextField();
        txtObligatedAmt = new edu.mit.coeus.utils.DollarCurrencyTextField();
        scrPnTitle = new javax.swing.JScrollPane();
        txtArTitle = new javax.swing.JTextArea();

        setLayout(new java.awt.GridBagLayout());

        setBorder(new javax.swing.border.EtchedBorder());
        lblFinalExpDate.setFont(CoeusFontFactory.getLabelFont());
        lblFinalExpDate.setText("Final Exp Date: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(lblFinalExpDate, gridBagConstraints);

        lblTitle.setFont(CoeusFontFactory.getLabelFont());
        lblTitle.setText("Title: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        add(lblTitle, gridBagConstraints);

        lblObligExpDate.setFont(CoeusFontFactory.getLabelFont());
        lblObligExpDate.setText("Oblig Exp Date: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(lblObligExpDate, gridBagConstraints);

        lblEffDate.setFont(CoeusFontFactory.getLabelFont());
        lblEffDate.setText("Eff Date: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(lblEffDate, gridBagConstraints);

        lblAnticipatedAmt.setFont(CoeusFontFactory.getLabelFont());
        lblAnticipatedAmt.setText("Anticipated Amt: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(lblAnticipatedAmt, gridBagConstraints);

        lblObligatedAmt.setFont(CoeusFontFactory.getLabelFont());
        lblObligatedAmt.setText("Obligated Amt: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(lblObligatedAmt, gridBagConstraints);

        txtFinalExpDate.setEditable(false);
        txtFinalExpDate.setFont(CoeusFontFactory.getNormalFont());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        add(txtFinalExpDate, gridBagConstraints);

        txtObligExpDate.setEditable(false);
        txtObligExpDate.setFont(CoeusFontFactory.getNormalFont());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(txtObligExpDate, gridBagConstraints);

        txtEffDate.setEditable(false);
        txtEffDate.setFont(CoeusFontFactory.getNormalFont());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(txtEffDate, gridBagConstraints);

        txtAnticipatedAmt.setEditable(false);
        txtAnticipatedAmt.setFont(CoeusFontFactory.getNormalFont());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        add(txtAnticipatedAmt, gridBagConstraints);

        txtObligatedAmt.setEditable(false);
        txtObligatedAmt.setFont(CoeusFontFactory.getNormalFont());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(txtObligatedAmt, gridBagConstraints);

        scrPnTitle.setHorizontalScrollBarPolicy(javax.swing.JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        scrPnTitle.setMinimumSize(new java.awt.Dimension(100, 35));
        scrPnTitle.setPreferredSize(new java.awt.Dimension(100, 35));
        txtArTitle.setBackground((java.awt.Color) javax.swing.UIManager.getDefaults().get("Panel.background"));
        txtArTitle.setEditable(false);
        txtArTitle.setFont(CoeusFontFactory.getNormalFont());
        txtArTitle.setLineWrap(true);
        txtArTitle.setWrapStyleWord(true);
        txtArTitle.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtArTitle.setEnabled(false);
        scrPnTitle.setViewportView(txtArTitle);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(scrPnTitle, gridBagConstraints);

    }//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel lblAnticipatedAmt;
    public javax.swing.JLabel lblEffDate;
    public javax.swing.JLabel lblFinalExpDate;
    public javax.swing.JLabel lblObligExpDate;
    public javax.swing.JLabel lblObligatedAmt;
    public javax.swing.JLabel lblTitle;
    public javax.swing.JScrollPane scrPnTitle;
    public edu.mit.coeus.utils.DollarCurrencyTextField txtAnticipatedAmt;
    public javax.swing.JTextArea txtArTitle;
    public javax.swing.JTextField txtEffDate;
    public javax.swing.JTextField txtFinalExpDate;
    public javax.swing.JTextField txtObligExpDate;
    public edu.mit.coeus.utils.DollarCurrencyTextField txtObligatedAmt;
    // End of variables declaration//GEN-END:variables
    
}
