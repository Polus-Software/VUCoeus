/** Copyright (c) Massachusetts Institute of Technology
 * 77 Massachusetts Avenue, Cambridge, MA 02139-4307
 * All rights reserved.
 */

package edu.mit.coeus.propdev.gui;

import java.util.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.border.*;

import edu.mit.coeus.gui.CoeusFontFactory;
import edu.mit.coeus.propdev.bean.NotepadBean;
import edu.mit.coeus.utils.*;

/** Component used in the ProposalNotepadForm
 * ProposalNotepad.java
 * @author  Vyjayanthi
 * Created on December 24, 2003, 1:33 PM
 */
public class ProposalNotepad extends javax.swing.JPanel
implements ActionListener, TypeConstants, MouseListener, FocusListener{
    
    private static final String EMPTY_STRING = "";
    private static final java.awt.Color PANEL_BACKGROUND = 
        (java.awt.Color) javax.swing.UIManager.getDefaults().get("Panel.background");
    
    /** Holds an instance of the current <code>NotepadBean</code> */
    public NotepadBean notepadBean;
    
    /** Set if restricted view is visible, false otherwise */
    private boolean restrictedViewVisible;
    
    /** Holds an instance of the selected comments */
    public static String selectedComments;
    
    /*to hold the comments ,added for the Bug Fix:1647 step:1 start*/
    public static String comments;
    /*step:1 end*/
    
    /** Creates new form ProposalNotepad */
    public ProposalNotepad(){
        initComponents();
    }
    
    /** Creates new form ProposalNotepad 
     * @param notepadBean to set the panel data */
    public ProposalNotepad(NotepadBean notepadBean) {
        this();
        this.notepadBean = notepadBean;
        setPanelData();
    }
    
    /** Method to set the panel data */
    private void setPanelData(){
//        lblByValue.setText(notepadBean.getUserName());
        /* UserID to UserName Enhancement -Start
         * Added new property getUpdateUserName to get username
         */
        lblByValue.setText(notepadBean.getUpdateUserName());
        // UserID to UserName Enhancement -End
        lblOnValue.setText(CoeusDateFormat.format(notepadBean.getUpdateTimestamp().toString() ));
        chkRestrictedView.setSelected(notepadBean.isRestrictedView());
        chkRestrictedView.addActionListener(this);
        txtArComments.setText(notepadBean.getComments());
        txtArComments.setCaretPosition(0);
        txtArComments.addMouseListener(this);
        txtArComments.addFocusListener(this);
        if( notepadBean.getProposalAwardNumber().equals(EMPTY_STRING)){
            txtArComments.setEditable(true);
            txtArComments.setBackground(Color.WHITE);
            txtArComments.setCaretPosition(0);
        }else{
            txtArComments.setEditable(false);
            txtArComments.setBackground(PANEL_BACKGROUND);
            txtArComments.setForeground(Color.BLACK);
        }
    }

    /** Return this child panel to the main panel
     * @return the current instance
     */
    public JPanel getChildPanel(){
        if( isRestrictedViewVisible() ){
            lblRestrictedView.setVisible(true);
            chkRestrictedView.setVisible(true);
        }else{
            lblRestrictedView.setVisible(false);
            chkRestrictedView.setVisible(false);
        }
        return this;
    }
    
    /** This method triggers all actions based on the event occured
     * @param actionEvent takes the actionEvent */
    public void actionPerformed(ActionEvent actionEvent) {
        if( actionEvent.getSource().equals(chkRestrictedView) ){
            notepadBean.setRestrictedView(chkRestrictedView.isSelected());
            if(notepadBean.getAcType() == null){
                notepadBean.setAcType(UPDATE_RECORD);
            }
        }
    }
        
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        lblBy = new javax.swing.JLabel();
        lblByValue = new javax.swing.JLabel();
        lblOn = new javax.swing.JLabel();
        lblOnValue = new javax.swing.JLabel();
        lblRestrictedView = new javax.swing.JLabel();
        scrPnComments = new javax.swing.JScrollPane();
        txtArComments = new javax.swing.JTextArea();
        chkRestrictedView = new javax.swing.JCheckBox();

        setLayout(new java.awt.GridBagLayout());

        lblBy.setFont(CoeusFontFactory.getLabelFont());
        lblBy.setText("By: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 2, 0);
        add(lblBy, gridBagConstraints);

        lblByValue.setFont(CoeusFontFactory.getNormalFont());
        lblByValue.setMinimumSize(new java.awt.Dimension(175, 16));
        lblByValue.setPreferredSize(new java.awt.Dimension(175, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 2, 0);
        add(lblByValue, gridBagConstraints);

        lblOn.setFont(CoeusFontFactory.getLabelFont());
        lblOn.setText("On: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 2, 0);
        add(lblOn, gridBagConstraints);

        lblOnValue.setFont(CoeusFontFactory.getNormalFont());
        lblOnValue.setMinimumSize(new java.awt.Dimension(175, 16));
        lblOnValue.setPreferredSize(new java.awt.Dimension(175, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 2, 0);
        add(lblOnValue, gridBagConstraints);

        lblRestrictedView.setFont(CoeusFontFactory.getLabelFont());
        lblRestrictedView.setText("Restricted View: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 2, 0);
        add(lblRestrictedView, gridBagConstraints);

        scrPnComments.setMinimumSize(new java.awt.Dimension(525, 100));
        scrPnComments.setPreferredSize(new java.awt.Dimension(525, 100));
        txtArComments.setBackground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));
        txtArComments.setEditable(false);
        txtArComments.setFont(CoeusFontFactory.getNormalFont());
        txtArComments.setLineWrap(true);
        txtArComments.setWrapStyleWord(true);
        txtArComments.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        scrPnComments.setViewportView(txtArComments);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
        add(scrPnComments, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);
        add(chkRestrictedView, gridBagConstraints);

    }//GEN-END:initComponents

    /** Getter for property restrictedViewVisible.
     * @return Value of property restrictedViewVisible.
     *
     */
    public boolean isRestrictedViewVisible() {
        return restrictedViewVisible;
    }    
    
    /** Setter for property restrictedViewVisible.
     * @param restrictedViewVisible New value of property restrictedViewVisible.
     *
     */
    public void setRestrictedViewVisible(boolean restrictedViewVisible) {
        this.restrictedViewVisible = restrictedViewVisible;
    }
    
    public void mouseClicked(MouseEvent mouseEvent) {
        selectedComments = notepadBean.getComments();
    }
    
    public void mouseEntered(MouseEvent mouseEvent) {
    }
    
    public void mouseExited(MouseEvent mouseEvent) {
    }
    
    public void mousePressed(MouseEvent mouseEvent) {
    }
    
    public void mouseReleased(MouseEvent mouseEvent) {
    }
    
    public void focusGained(FocusEvent focusEvent) {
        //Sets the vertical scrollbar to indicate the selection
        scrPnComments.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
    }
    
    public void focusLost(FocusEvent focusEvent) {
        //Removes the vertical scrollbar
        scrPnComments.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_NEVER);
        /*Added for the Bug Fix:1647, to pop the comments in the notification window step:2 start*/
        comments = txtArComments.getText();
        /*step2 end*/
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JCheckBox chkRestrictedView;
    public javax.swing.JLabel lblBy;
    public javax.swing.JLabel lblByValue;
    public javax.swing.JLabel lblOn;
    public javax.swing.JLabel lblOnValue;
    public javax.swing.JLabel lblRestrictedView;
    public javax.swing.JScrollPane scrPnComments;
    public javax.swing.JTextArea txtArComments;
    // End of variables declaration//GEN-END:variables
    
}
