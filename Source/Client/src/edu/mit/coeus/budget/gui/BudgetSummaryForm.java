/*
 * BudgetSummaryForm.java
 *
 * Created on September 25, 2003, 8:48 PM
 */

package edu.mit.coeus.budget.gui;

import javax.swing.JPanel;
import javax.swing.JScrollPane;

import edu.mit.coeus.gui.CoeusFontFactory;
// JM 6-29-2015 added for help
import edu.vanderbilt.coeus.gui.CoeusHelpGidget;
// JM END

/**
 *
 * @author  chandrashekara
 */
public class BudgetSummaryForm extends javax.swing.JComponent {

	/* JM 11-4-2011 variable to set combobox and textbox length; */
	/* changed references throughout initComponents */
	private static int BOXLENGTH = 230;
    
    /** Creates new form BudgetSummar yForm */
    public BudgetSummaryForm() {
          initComponents();
         
   }
    public javax.swing.JTable getTableInstance() {
        return tblBudgetSummary;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlBudgetSummary = new javax.swing.JPanel();
        lblStartDate = new javax.swing.JLabel();
        lblVersion = new javax.swing.JLabel();
        lblEndDate = new javax.swing.JLabel();
        lblFinal = new javax.swing.JLabel();
        chkFinal = new javax.swing.JCheckBox();
        lblResidualFunds = new javax.swing.JLabel();
        lblTotalCostLimit = new javax.swing.JLabel();
        lblOHRateType = new javax.swing.JLabel();
        lblTotalCost = new javax.swing.JLabel();
        lblDirectCost = new javax.swing.JLabel();
        lblIndirectCost = new javax.swing.JLabel();
        lblUnderRecovery = new javax.swing.JLabel();
        lblCostSharing = new javax.swing.JLabel();
        lblBudgetStatus = new javax.swing.JLabel();
        lblComments = new javax.swing.JLabel();
        txtResidualFunds = new edu.mit.coeus.utils.DollarCurrencyTextField();
        txtTotalCost = new edu.mit.coeus.utils.DollarCurrencyTextField();
        txtTotalCostLimit = new edu.mit.coeus.utils.DollarCurrencyTextField();
        txtDirectCost = new edu.mit.coeus.utils.DollarCurrencyTextField();
        txtIndirectCost = new edu.mit.coeus.utils.DollarCurrencyTextField();
        txtUnderRecovery = new edu.mit.coeus.utils.DollarCurrencyTextField();
        txtCostSharing = new edu.mit.coeus.utils.DollarCurrencyTextField();
        cmbOHRateType = new edu.mit.coeus.utils.CoeusComboBox();
        txtVersion = new edu.mit.coeus.utils.CoeusTextField();
        txtStartDate = new edu.mit.coeus.utils.CoeusTextField();
        txtEndDate = new edu.mit.coeus.utils.CoeusTextField();
        cmbBudgetStatus = new javax.swing.JComboBox();
        jcrPnComments = new javax.swing.JScrollPane();
        txtArComments = new javax.swing.JTextArea();
        lblURRateType = new javax.swing.JLabel();
        cmbURRateType = new edu.mit.coeus.utils.CoeusComboBox();
        chkBudgetModular = new javax.swing.JCheckBox();
        lblBudgetModular = new edu.mit.coeus.utils.CoeusLabel();
        pnlPropHierarchyIcon = new javax.swing.JPanel();
        lblPropHierIcon = new edu.mit.coeus.utils.CoeusLabel();
        lblPropHieParentIcon = new edu.mit.coeus.utils.CoeusLabel();
        lblPropHierarchy = new edu.mit.coeus.utils.CoeusLabel();
        lblOnOffCampusFlag = new edu.mit.coeus.utils.CoeusLabel();
        cmbOnOffFlag = new javax.swing.JComboBox();
        txtTotalDirectCostLimit = new edu.mit.coeus.utils.DollarCurrencyTextField();
        lblTotalDirectCostLimit = new javax.swing.JLabel();
        lblSubmitCostSharing = new javax.swing.JLabel();
        chkSubmitCostSharing = new javax.swing.JCheckBox();
        pnlPeriodDetails = new javax.swing.JPanel();
        jcrPnPeriods = new javax.swing.JScrollPane();
        tblBudgetSummary = new javax.swing.JTable(){
            public void changeSelection(int row, int column, boolean toggle, boolean extend){
                super.changeSelection(row, column, toggle, extend);
                javax.swing.SwingUtilities.invokeLater( new Runnable() {
                    public void run() {
                        getTableInstance().dispatchEvent(new java.awt.event.KeyEvent(
                            getTableInstance(),java.awt.event.KeyEvent.KEY_PRESSED,0,0,java.awt.event.KeyEvent.VK_F2,
                            java.awt.event.KeyEvent.CHAR_UNDEFINED) );
                }
            });
        }
    };

    setLayout(new java.awt.GridBagLayout());

    setMinimumSize(new java.awt.Dimension(680, 700)); // JM 7-1-2015 was 680,490
    setPreferredSize(new java.awt.Dimension(880, 750)); // JM 7-1-2015 was 880,590
    pnlBudgetSummary.setLayout(new java.awt.GridBagLayout());

    pnlBudgetSummary.setMinimumSize(new java.awt.Dimension(875, 250));
    pnlBudgetSummary.setPreferredSize(new java.awt.Dimension(878, 250));
    lblStartDate.setFont(CoeusFontFactory.getLabelFont());
    lblStartDate.setText("Start Date:");
    lblStartDate.setToolTipText("");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
    pnlBudgetSummary.add(lblStartDate, gridBagConstraints);

    lblVersion.setFont(CoeusFontFactory.getLabelFont());
    lblVersion.setText("Version:");
    lblVersion.setToolTipText("");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 2);
    pnlBudgetSummary.add(lblVersion, gridBagConstraints);

    lblEndDate.setFont(CoeusFontFactory.getLabelFont());
    lblEndDate.setText("End Date:");
    lblEndDate.setToolTipText("");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 6;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
    pnlBudgetSummary.add(lblEndDate, gridBagConstraints);

    lblFinal.setFont(CoeusFontFactory.getLabelFont());
    lblFinal.setText("Final:");
    lblFinal.setToolTipText("");
    lblFinal.setMaximumSize(new java.awt.Dimension(60, 16));
    lblFinal.setMinimumSize(new java.awt.Dimension(30, 16));
    lblFinal.setPreferredSize(new java.awt.Dimension(33, 16));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
    pnlBudgetSummary.add(lblFinal, gridBagConstraints);

    chkFinal.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    pnlBudgetSummary.add(chkFinal, gridBagConstraints);

    lblResidualFunds.setFont(CoeusFontFactory.getLabelFont());
    lblResidualFunds.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    lblResidualFunds.setText("Residual Funds:");
    lblResidualFunds.setMaximumSize(new java.awt.Dimension(130, 16));
    lblResidualFunds.setMinimumSize(new java.awt.Dimension(96, 16));
    lblResidualFunds.setPreferredSize(new java.awt.Dimension(96, 16));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(3, 6, 0, 2);
    pnlBudgetSummary.add(lblResidualFunds, gridBagConstraints);

    lblTotalCostLimit.setFont(CoeusFontFactory.getLabelFont());
    lblTotalCostLimit.setText("Total Cost Limit:");
    lblTotalCostLimit.setToolTipText("");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
    pnlBudgetSummary.add(lblTotalCostLimit, gridBagConstraints);

    lblOHRateType.setFont(CoeusFontFactory.getLabelFont());
    lblOHRateType.setText("OH Rate Type:");
    lblOHRateType.setToolTipText("");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 6;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
    pnlBudgetSummary.add(lblOHRateType, gridBagConstraints);

    lblTotalCost.setFont(CoeusFontFactory.getLabelFont());
    lblTotalCost.setText("Total Cost:");
    lblTotalCost.setToolTipText("");
    lblTotalCost.setMaximumSize(new java.awt.Dimension(100, 16));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(3, 6, 0, 2);
    pnlBudgetSummary.add(lblTotalCost, gridBagConstraints);

    lblDirectCost.setFont(CoeusFontFactory.getLabelFont());
    lblDirectCost.setText("Direct Cost:");
    lblDirectCost.setToolTipText("");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 6;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
    pnlBudgetSummary.add(lblDirectCost, gridBagConstraints);

    lblIndirectCost.setFont(CoeusFontFactory.getLabelFont());
    lblIndirectCost.setText("Indirect Cost:");
    lblIndirectCost.setToolTipText("");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
    pnlBudgetSummary.add(lblIndirectCost, gridBagConstraints);

    lblUnderRecovery.setFont(CoeusFontFactory.getLabelFont());
    lblUnderRecovery.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    lblUnderRecovery.setText("Underrecovery:");
    lblUnderRecovery.setToolTipText("");
    lblUnderRecovery.setMaximumSize(new java.awt.Dimension(100, 16));
    lblUnderRecovery.setMinimumSize(new java.awt.Dimension(96, 16));
    lblUnderRecovery.setPreferredSize(new java.awt.Dimension(96, 16));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 2);
    pnlBudgetSummary.add(lblUnderRecovery, gridBagConstraints);

    lblCostSharing.setFont(CoeusFontFactory.getLabelFont());
    lblCostSharing.setText("Cost Sharing:");
    lblCostSharing.setToolTipText("");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 6;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
    pnlBudgetSummary.add(lblCostSharing, gridBagConstraints);

    lblBudgetStatus.setFont(CoeusFontFactory.getLabelFont());
    lblBudgetStatus.setText("Budget Status:");
    lblBudgetStatus.setToolTipText("");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 6;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
    pnlBudgetSummary.add(lblBudgetStatus, gridBagConstraints);

    lblComments.setFont(CoeusFontFactory.getLabelFont());
    lblComments.setText("Comments:");
    lblComments.setToolTipText("");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
    gridBagConstraints.insets = new java.awt.Insets(10, 6, 0, 2);
    pnlBudgetSummary.add(lblComments, gridBagConstraints);

    txtResidualFunds.setMinimumSize(new java.awt.Dimension(120, 20));
    txtResidualFunds.setPreferredSize(new java.awt.Dimension(120, 20));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(3, 7, 0, 0);
    pnlBudgetSummary.add(txtResidualFunds, gridBagConstraints);

    txtTotalCost.setEditable(false);
    txtTotalCost.setMinimumSize(new java.awt.Dimension(120, 20));
    txtTotalCost.setPreferredSize(new java.awt.Dimension(120, 20));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(3, 7, 0, 0);
    pnlBudgetSummary.add(txtTotalCost, gridBagConstraints);

    txtTotalCostLimit.setToolTipText("");
    txtTotalCostLimit.setMinimumSize(new java.awt.Dimension(120, 20));
    txtTotalCostLimit.setPreferredSize(new java.awt.Dimension(120, 20));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 2);
    pnlBudgetSummary.add(txtTotalCostLimit, gridBagConstraints);

    txtDirectCost.setEditable(false);
    txtDirectCost.setMinimumSize(new java.awt.Dimension(120, 20));
    txtDirectCost.setPreferredSize(new java.awt.Dimension(120, 20));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 7;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
    pnlBudgetSummary.add(txtDirectCost, gridBagConstraints);

    txtIndirectCost.setEditable(false);
    txtIndirectCost.setMinimumSize(new java.awt.Dimension(120, 20));
    txtIndirectCost.setPreferredSize(new java.awt.Dimension(120, 20));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(3, 7, 0, 0);
    pnlBudgetSummary.add(txtIndirectCost, gridBagConstraints);

    txtUnderRecovery.setEditable(false);
    txtUnderRecovery.setMinimumSize(new java.awt.Dimension(120, 20));
    txtUnderRecovery.setPreferredSize(new java.awt.Dimension(120, 20));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 2);
    pnlBudgetSummary.add(txtUnderRecovery, gridBagConstraints);

    txtCostSharing.setEditable(false);
    txtCostSharing.setMinimumSize(new java.awt.Dimension(120, 20));
    txtCostSharing.setPreferredSize(new java.awt.Dimension(120, 20));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 7;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
    pnlBudgetSummary.add(txtCostSharing, gridBagConstraints);

    cmbOHRateType.setMinimumSize(new java.awt.Dimension(BOXLENGTH, 20)); // JM
    cmbOHRateType.setPreferredSize(new java.awt.Dimension(BOXLENGTH, 20)); //JM
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 7;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
    pnlBudgetSummary.add(cmbOHRateType, gridBagConstraints);

    txtVersion.setEditable(false);
    txtVersion.setMinimumSize(new java.awt.Dimension(70, 20));
    txtVersion.setPreferredSize(new java.awt.Dimension(60, 20));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
    pnlBudgetSummary.add(txtVersion, gridBagConstraints);

    txtStartDate.setMinimumSize(new java.awt.Dimension(120, 20));
    txtStartDate.setPreferredSize(new java.awt.Dimension(120, 22));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 2);
    pnlBudgetSummary.add(txtStartDate, gridBagConstraints);

    txtEndDate.setMinimumSize(new java.awt.Dimension(120, 22));
    txtEndDate.setPreferredSize(new java.awt.Dimension(120, 22));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 7;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(3, 4, 0, 80);
    pnlBudgetSummary.add(txtEndDate, gridBagConstraints);

    cmbBudgetStatus.setFont(CoeusFontFactory.getNormalFont());
    cmbBudgetStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Complete", "Incomplete", "(None)" }));
    cmbBudgetStatus.setToolTipText("");
    cmbBudgetStatus.setMinimumSize(new java.awt.Dimension(120, 22));
    cmbBudgetStatus.setPreferredSize(new java.awt.Dimension(120, 22));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 7;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST; // JM
    gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 77);
    pnlBudgetSummary.add(cmbBudgetStatus, gridBagConstraints);

    jcrPnComments.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    jcrPnComments.setMinimumSize(new java.awt.Dimension(347, 100));
    jcrPnComments.setPreferredSize(new java.awt.Dimension(347, 100));
    txtArComments.setFont(CoeusFontFactory.getNormalFont());
    txtArComments.setLineWrap(true);
    txtArComments.setToolTipText("");
    txtArComments.setWrapStyleWord(true);
    jcrPnComments.setViewportView(txtArComments);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.gridwidth = 5;
    gridBagConstraints.gridheight = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
    pnlBudgetSummary.add(jcrPnComments, gridBagConstraints);

    lblURRateType.setFont(CoeusFontFactory.getLabelFont());
    lblURRateType.setText("UR Rate Type:");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 6;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
    pnlBudgetSummary.add(lblURRateType, gridBagConstraints);

    cmbURRateType.setFont(CoeusFontFactory.getNormalFont());
    cmbURRateType.setMinimumSize(new java.awt.Dimension(BOXLENGTH, 20)); // JM
    cmbURRateType.setPreferredSize(new java.awt.Dimension(BOXLENGTH, 20)); // JM
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 7;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
    pnlBudgetSummary.add(cmbURRateType, gridBagConstraints);

    chkBudgetModular.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 7;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(3, 1, 0, 0);
    pnlBudgetSummary.add(chkBudgetModular, gridBagConstraints);

    lblBudgetModular.setText("Modular Budget:");
    lblBudgetModular.setFont(CoeusFontFactory.getLabelFont());
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 6;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
    pnlBudgetSummary.add(lblBudgetModular, gridBagConstraints);

    pnlPropHierarchyIcon.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 5));

    pnlPropHierarchyIcon.add(lblPropHierIcon);

    pnlPropHierarchyIcon.add(lblPropHieParentIcon);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 7;
    gridBagConstraints.gridy = 9;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
    pnlBudgetSummary.add(pnlPropHierarchyIcon, gridBagConstraints);

    lblPropHierarchy.setText("Proposal Hierarchy:");
    lblPropHierarchy.setFont(CoeusFontFactory.getLabelFont());
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 6;
    gridBagConstraints.gridy = 9;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
    gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
    pnlBudgetSummary.add(lblPropHierarchy, gridBagConstraints);

    lblOnOffCampusFlag.setText("On/Off Campus: ");
    lblOnOffCampusFlag.setFont(CoeusFontFactory.getLabelFont());
    lblOnOffCampusFlag.setMaximumSize(new java.awt.Dimension(120, 14));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 6;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
    pnlBudgetSummary.add(lblOnOffCampusFlag, gridBagConstraints);

    cmbOnOffFlag.setFont(CoeusFontFactory.getNormalFont());
    cmbOnOffFlag.setMaximumRowCount(15);
    cmbOnOffFlag.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Default", "On", "Off" }));
    cmbOnOffFlag.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    cmbOnOffFlag.setMaximumSize(new java.awt.Dimension(120, 20));
    cmbOnOffFlag.setMinimumSize(new java.awt.Dimension(120, 20));
    cmbOnOffFlag.setPreferredSize(new java.awt.Dimension(120, 20));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 7;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
    pnlBudgetSummary.add(cmbOnOffFlag, gridBagConstraints);

    txtTotalDirectCostLimit.setToolTipText("");
    txtTotalDirectCostLimit.setMinimumSize(new java.awt.Dimension(120, 20));
    txtTotalDirectCostLimit.setPreferredSize(new java.awt.Dimension(120, 20));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 2);
    pnlBudgetSummary.add(txtTotalDirectCostLimit, gridBagConstraints);

    lblTotalDirectCostLimit.setFont(CoeusFontFactory.getLabelFont());
    lblTotalDirectCostLimit.setText("Total Direct Cost Limit:");
    lblTotalDirectCostLimit.setToolTipText("");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
    pnlBudgetSummary.add(lblTotalDirectCostLimit, gridBagConstraints);

    lblSubmitCostSharing.setFont(CoeusFontFactory.getLabelFont());
    lblSubmitCostSharing.setText("Submit Cost Sharing:");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 6;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
    gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 0);
    pnlBudgetSummary.add(lblSubmitCostSharing, gridBagConstraints);

    chkSubmitCostSharing.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
    chkSubmitCostSharing.setMargin(new java.awt.Insets(0, 0, 0, 0));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 7;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(4, 5, 0, 0);
    pnlBudgetSummary.add(chkSubmitCostSharing, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    add(pnlBudgetSummary, gridBagConstraints);

    pnlPeriodDetails.setLayout(new java.awt.GridBagLayout());

    pnlPeriodDetails.setMinimumSize(new java.awt.Dimension(875, 250));
    pnlPeriodDetails.setPreferredSize(new java.awt.Dimension(875, 250)); // JM 7-1-2015 changed from 878
    jcrPnPeriods.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    jcrPnPeriods.setMinimumSize(new java.awt.Dimension(875, 250));
    jcrPnPeriods.setPreferredSize(new java.awt.Dimension(875, 250)); // JM 7-1-2015 changed from 878
    tblBudgetSummary.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
    tblBudgetSummary.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            "", "", "", "", "", "", "", ""
        }
    ));
    tblBudgetSummary.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            tblBudgetSummaryMouseClicked(evt);
        }
    });

    jcrPnPeriods.setViewportView(tblBudgetSummary);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
    pnlPeriodDetails.add(jcrPnPeriods, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    add(pnlPeriodDetails, gridBagConstraints);
    
    // JM 6-29-2015 panel for page usage directions
    CoeusHelpGidget gidgetUsage = new CoeusHelpGidget("budgetRates_helpCode.1000");
    JScrollPane scrPnUsage = new JScrollPane(gidgetUsage.createHelpScrollArea());
    scrPnUsage.setMaximumSize(new java.awt.Dimension(850, 200));
    scrPnUsage.setMinimumSize(new java.awt.Dimension(850, 200));
    scrPnUsage.setPreferredSize(new java.awt.Dimension(850, 200));

    JPanel pnlUsage = gidgetUsage.createHelpPanel();
    //pnlUsage.setMaximumSize(new java.awt.Dimension(870, 470));
    pnlUsage.setMinimumSize(new java.awt.Dimension(870, 470));
    pnlUsage.setPreferredSize(new java.awt.Dimension(870, 470));
    pnlUsage.add(scrPnUsage, java.awt.BorderLayout.CENTER);
     
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    //gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
    //gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(10, 6, 2, 2); 
    add(pnlUsage, gridBagConstraints);
    // JM END

    }// </editor-fold>//GEN-END:initComponents

    private void tblBudgetSummaryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBudgetSummaryMouseClicked
        // Add your handling code here:
        javax.swing.SwingUtilities.invokeLater( new Runnable() {
                    public void run() {
                        getTableInstance().dispatchEvent(new java.awt.event.KeyEvent(
                            getTableInstance(),java.awt.event.KeyEvent.KEY_PRESSED,0,0,java.awt.event.KeyEvent.VK_F2,
                            java.awt.event.KeyEvent.CHAR_UNDEFINED) );
                    }
                });
    }//GEN-LAST:event_tblBudgetSummaryMouseClicked
     
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JCheckBox chkBudgetModular;
    public javax.swing.JCheckBox chkFinal;
    public javax.swing.JCheckBox chkSubmitCostSharing;
    public javax.swing.JComboBox cmbBudgetStatus;
    public edu.mit.coeus.utils.CoeusComboBox cmbOHRateType;
    public javax.swing.JComboBox cmbOnOffFlag;
    public edu.mit.coeus.utils.CoeusComboBox cmbURRateType;
    public javax.swing.JScrollPane jcrPnComments;
    public javax.swing.JScrollPane jcrPnPeriods;
    public edu.mit.coeus.utils.CoeusLabel lblBudgetModular;
    public javax.swing.JLabel lblBudgetStatus;
    public javax.swing.JLabel lblComments;
    public javax.swing.JLabel lblCostSharing;
    public javax.swing.JLabel lblDirectCost;
    public javax.swing.JLabel lblEndDate;
    public javax.swing.JLabel lblFinal;
    public javax.swing.JLabel lblIndirectCost;
    public javax.swing.JLabel lblOHRateType;
    public edu.mit.coeus.utils.CoeusLabel lblOnOffCampusFlag;
    public edu.mit.coeus.utils.CoeusLabel lblPropHieParentIcon;
    public edu.mit.coeus.utils.CoeusLabel lblPropHierIcon;
    public edu.mit.coeus.utils.CoeusLabel lblPropHierarchy;
    public javax.swing.JLabel lblResidualFunds;
    public javax.swing.JLabel lblStartDate;
    private javax.swing.JLabel lblSubmitCostSharing;
    public javax.swing.JLabel lblTotalCost;
    public javax.swing.JLabel lblTotalCostLimit;
    public javax.swing.JLabel lblTotalDirectCostLimit;
    public javax.swing.JLabel lblURRateType;
    public javax.swing.JLabel lblUnderRecovery;
    public javax.swing.JLabel lblVersion;
    public javax.swing.JPanel pnlBudgetSummary;
    public javax.swing.JPanel pnlPeriodDetails;
    public javax.swing.JPanel pnlPropHierarchyIcon;
    public javax.swing.JTable tblBudgetSummary;
    public javax.swing.JTextArea txtArComments;
    public edu.mit.coeus.utils.DollarCurrencyTextField txtCostSharing;
    public edu.mit.coeus.utils.DollarCurrencyTextField txtDirectCost;
    public edu.mit.coeus.utils.CoeusTextField txtEndDate;
    public edu.mit.coeus.utils.DollarCurrencyTextField txtIndirectCost;
    public edu.mit.coeus.utils.DollarCurrencyTextField txtResidualFunds;
    public edu.mit.coeus.utils.CoeusTextField txtStartDate;
    public edu.mit.coeus.utils.DollarCurrencyTextField txtTotalCost;
    public edu.mit.coeus.utils.DollarCurrencyTextField txtTotalCostLimit;
    public edu.mit.coeus.utils.DollarCurrencyTextField txtTotalDirectCostLimit;
    public edu.mit.coeus.utils.DollarCurrencyTextField txtUnderRecovery;
    public edu.mit.coeus.utils.CoeusTextField txtVersion;
    // End of variables declaration//GEN-END:variables
 
} 
