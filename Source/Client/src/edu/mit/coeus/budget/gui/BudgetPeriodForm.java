/*
 * BudgetPeriodForm.java
 *
 * Created on October 7, 2003, 11:02 AM
 */

package edu.mit.coeus.budget.gui;

/**
 *
 * @author  sharathk
 */

import javax.swing.*;

import edu.mit.coeus.gui.CoeusFontFactory;
import edu.mit.coeus.utils.CoeusTextField;

public class BudgetPeriodForm extends javax.swing.JComponent {
    
    /** Creates new form BudgetPeriodForm */
    public BudgetPeriodForm() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        scrPnBudgetPeriods = new javax.swing.JScrollPane();
        pnlBudgetPeriod = new javax.swing.JPanel();
        pnlPeriodDetail = new javax.swing.JPanel();
        lblStartDate = new javax.swing.JLabel();
        lblEndDate = new javax.swing.JLabel();
        lblCostLimit = new javax.swing.JLabel();
        lblTotalCost = new javax.swing.JLabel();
        lblDirectCost = new javax.swing.JLabel();
        lblIndirectCost = new javax.swing.JLabel();
        lblUnderrecovery = new javax.swing.JLabel();
        lblCostSharing = new javax.swing.JLabel();
        txtStartDate = new javax.swing.JTextField();
        txtEndDate = new javax.swing.JTextField();
        txtCostSharing = new edu.mit.coeus.utils.DollarCurrencyTextField();
        txtTotalCost = new edu.mit.coeus.utils.DollarCurrencyTextField();
        txtDirectCost = new edu.mit.coeus.utils.DollarCurrencyTextField();
        txtIndirectCost = new edu.mit.coeus.utils.DollarCurrencyTextField();
        txtCostLimit = new edu.mit.coeus.utils.DollarCurrencyTextField();
        txtUnderrecovery = new edu.mit.coeus.utils.DollarCurrencyTextField();
        txtDirectCostLimit = new edu.mit.coeus.utils.DollarCurrencyTextField();
        lblDirectCostLimit = new javax.swing.JLabel();
        lblPeriodMonths = new javax.swing.JLabel();
        txtPeriodMonths = new edu.mit.coeus.utils.CoeusTextField();
        scrPnPeriodLineItem = new javax.swing.JScrollPane();
        tblPeriodLineItem = new javax.swing.JTable(){
            public void changeSelection(int row, int column, boolean toggle, boolean extend){
                super.changeSelection(row, column, toggle, extend);
                javax.swing.SwingUtilities.invokeLater( new Runnable() {
                    public void run() {
                        tblPeriodLineItem.dispatchEvent(new java.awt.event.KeyEvent(
                            tblPeriodLineItem,java.awt.event.KeyEvent.KEY_PRESSED,0,0,java.awt.event.KeyEvent.VK_F2,
                            java.awt.event.KeyEvent.CHAR_UNDEFINED) );
                }
            });
        }
    };
    scrPnlJustify = new javax.swing.JScrollPane();
    tblJustify = new javax.swing.JTable();
    pnlLineItemCalculatedAmounts = new edu.mit.coeus.budget.utils.LineItemCalculatedAmountsTable();

    setLayout(new java.awt.BorderLayout());

    pnlBudgetPeriod.setLayout(new java.awt.GridBagLayout());

    pnlPeriodDetail.setLayout(new java.awt.GridBagLayout());

    pnlPeriodDetail.setMinimumSize(new java.awt.Dimension(950, 100));
    pnlPeriodDetail.setPreferredSize(new java.awt.Dimension(950, 100));
    lblStartDate.setFont(CoeusFontFactory.getLabelFont());
    lblStartDate.setText("Start Date: ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    pnlPeriodDetail.add(lblStartDate, gridBagConstraints);

    lblEndDate.setFont(CoeusFontFactory.getLabelFont());
    lblEndDate.setText("End Date: ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    pnlPeriodDetail.add(lblEndDate, gridBagConstraints);

    lblCostLimit.setFont(CoeusFontFactory.getLabelFont());
    lblCostLimit.setText("Cost Limit: ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    pnlPeriodDetail.add(lblCostLimit, gridBagConstraints);

    lblTotalCost.setFont(CoeusFontFactory.getLabelFont());
    lblTotalCost.setText("Total Cost: ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    pnlPeriodDetail.add(lblTotalCost, gridBagConstraints);

    lblDirectCost.setFont(CoeusFontFactory.getLabelFont());
    lblDirectCost.setText("Direct Cost: ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    pnlPeriodDetail.add(lblDirectCost, gridBagConstraints);

    lblIndirectCost.setFont(CoeusFontFactory.getLabelFont());
    lblIndirectCost.setText("Indirect Cost: ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    pnlPeriodDetail.add(lblIndirectCost, gridBagConstraints);

    lblUnderrecovery.setFont(CoeusFontFactory.getLabelFont());
    lblUnderrecovery.setText("Underrecovery: ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    pnlPeriodDetail.add(lblUnderrecovery, gridBagConstraints);

    lblCostSharing.setFont(CoeusFontFactory.getLabelFont());
    lblCostSharing.setText("Cost Sharing: ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    pnlPeriodDetail.add(lblCostSharing, gridBagConstraints);

    txtStartDate.setDisabledTextColor(new java.awt.Color(0, 0, 0));
    txtStartDate.setMinimumSize(new java.awt.Dimension(125, 22));
    txtStartDate.setPreferredSize(new java.awt.Dimension(150, 22));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);
    pnlPeriodDetail.add(txtStartDate, gridBagConstraints);

    txtEndDate.setDisabledTextColor(new java.awt.Color(0, 0, 0));
    txtEndDate.setMinimumSize(new java.awt.Dimension(125, 22));
    txtEndDate.setPreferredSize(new java.awt.Dimension(150, 22));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);
    pnlPeriodDetail.add(txtEndDate, gridBagConstraints);

    txtCostSharing.setMinimumSize(new java.awt.Dimension(125, 22));
    txtCostSharing.setPreferredSize(new java.awt.Dimension(150, 22));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 2;
    pnlPeriodDetail.add(txtCostSharing, gridBagConstraints);

    txtTotalCost.setMinimumSize(new java.awt.Dimension(125, 22));
    txtTotalCost.setPreferredSize(new java.awt.Dimension(150, 22));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);
    pnlPeriodDetail.add(txtTotalCost, gridBagConstraints);

    txtDirectCost.setMinimumSize(new java.awt.Dimension(125, 22));
    txtDirectCost.setPreferredSize(new java.awt.Dimension(150, 22));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);
    pnlPeriodDetail.add(txtDirectCost, gridBagConstraints);

    txtIndirectCost.setMinimumSize(new java.awt.Dimension(125, 22));
    txtIndirectCost.setPreferredSize(new java.awt.Dimension(150, 22));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);
    pnlPeriodDetail.add(txtIndirectCost, gridBagConstraints);

    txtCostLimit.setMinimumSize(new java.awt.Dimension(125, 22));
    txtCostLimit.setPreferredSize(new java.awt.Dimension(150, 22));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);
    pnlPeriodDetail.add(txtCostLimit, gridBagConstraints);

    txtUnderrecovery.setisNegativeAllowed(true);
    txtUnderrecovery.setMinimumSize(new java.awt.Dimension(125, 22));
    txtUnderrecovery.setPreferredSize(new java.awt.Dimension(150, 22));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    pnlPeriodDetail.add(txtUnderrecovery, gridBagConstraints);

    txtDirectCostLimit.setMinimumSize(new java.awt.Dimension(125, 22));
    txtDirectCostLimit.setPreferredSize(new java.awt.Dimension(150, 22));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);
    pnlPeriodDetail.add(txtDirectCostLimit, gridBagConstraints);

    lblDirectCostLimit.setFont(CoeusFontFactory.getLabelFont());
    lblDirectCostLimit.setText("Direct Cost Limit: ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 4;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
    pnlPeriodDetail.add(lblDirectCostLimit, gridBagConstraints);

    lblPeriodMonths.setFont(CoeusFontFactory.getLabelFont());
    lblPeriodMonths.setText("No. of Months:");
    lblPeriodMonths.setMaximumSize(new java.awt.Dimension(125, 14));
    lblPeriodMonths.setMinimumSize(new java.awt.Dimension(85, 24));
    lblPeriodMonths.setPreferredSize(new java.awt.Dimension(85, 24));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 6;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
    pnlPeriodDetail.add(lblPeriodMonths, gridBagConstraints);

    txtPeriodMonths.setEditable(false);
    txtPeriodMonths.setMinimumSize(new java.awt.Dimension(70, 20));
    txtPeriodMonths.setPreferredSize(new java.awt.Dimension(50, 20));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 7;
    gridBagConstraints.gridy = 0;
    pnlPeriodDetail.add(txtPeriodMonths, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);
    pnlBudgetPeriod.add(pnlPeriodDetail, gridBagConstraints);

    scrPnPeriodLineItem.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    scrPnPeriodLineItem.setMinimumSize(new java.awt.Dimension(960, 200));
    scrPnPeriodLineItem.setPreferredSize(new java.awt.Dimension(960, 300));
    scrPnPeriodLineItem.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusGained(java.awt.event.FocusEvent evt) {
            scrPnPeriodLineItemFocusGained(evt);
        }
    });

    tblPeriodLineItem.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
        }
    ));
    tblPeriodLineItem.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
    tblPeriodLineItem.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            tblPeriodLineItemMouseClicked(evt);
        }
    });

    scrPnPeriodLineItem.setViewportView(tblPeriodLineItem);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 0.1;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
    pnlBudgetPeriod.add(scrPnPeriodLineItem, gridBagConstraints);

    scrPnlJustify.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
    scrPnlJustify.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
    scrPnlJustify.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
    scrPnlJustify.setMinimumSize(new java.awt.Dimension(25, 200));
    scrPnlJustify.setPreferredSize(new java.awt.Dimension(25, 300));
    tblJustify.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
        }
    ));
    scrPnlJustify.setViewportView(tblJustify);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 0.9;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
    pnlBudgetPeriod.add(scrPnlJustify, gridBagConstraints);

    pnlLineItemCalculatedAmounts.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    pnlLineItemCalculatedAmounts.setMinimumSize(new java.awt.Dimension(950, 150));
    pnlLineItemCalculatedAmounts.setPreferredSize(new java.awt.Dimension(950, 150));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
    pnlBudgetPeriod.add(pnlLineItemCalculatedAmounts, gridBagConstraints);

    scrPnBudgetPeriods.setViewportView(pnlBudgetPeriod);

    add(scrPnBudgetPeriods, java.awt.BorderLayout.CENTER);

    }// </editor-fold>//GEN-END:initComponents

    private void scrPnPeriodLineItemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_scrPnPeriodLineItemFocusGained
        if(tblPeriodLineItem.getRowCount() > 0){
              String costElement = (String)tblPeriodLineItem.getValueAt(0, 1);
              if(costElement.trim().equals("")){
                  tblPeriodLineItem.setRowSelectionInterval(0,0);
                  tblPeriodLineItem.setColumnSelectionInterval(1,1);
                  tblPeriodLineItem.editCellAt(0, 1);
                  if(tblPeriodLineItem.getEditorComponent() != null){
                      tblPeriodLineItem.getEditorComponent().requestFocusInWindow();
                  }
                  
              }else{
                  tblPeriodLineItem.setRowSelectionInterval(0,0);
                  tblPeriodLineItem.setColumnSelectionInterval(3,3);
                  tblPeriodLineItem.editCellAt(0, 3);
                  if(tblPeriodLineItem.getEditorComponent() != null){
                      tblPeriodLineItem.getEditorComponent().requestFocusInWindow();
                  }
              }
           }
    }//GEN-LAST:event_scrPnPeriodLineItemFocusGained
    
    private void tblPeriodLineItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPeriodLineItemMouseClicked
        // Add your handling code here:
        javax.swing.SwingUtilities.invokeLater( new Runnable() {
            public void run() {
                tblPeriodLineItem.dispatchEvent(new java.awt.event.KeyEvent(
                tblPeriodLineItem,java.awt.event.KeyEvent.KEY_PRESSED,0,0,java.awt.event.KeyEvent.VK_F2,
                java.awt.event.KeyEvent.CHAR_UNDEFINED) );
            }
        });
    }//GEN-LAST:event_tblPeriodLineItemMouseClicked
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel lblCostLimit;
    public javax.swing.JLabel lblCostSharing;
    public javax.swing.JLabel lblDirectCost;
    public javax.swing.JLabel lblDirectCostLimit;
    public javax.swing.JLabel lblEndDate;
    public javax.swing.JLabel lblIndirectCost;
    public javax.swing.JLabel lblPeriodMonths;
    public javax.swing.JLabel lblStartDate;
    public javax.swing.JLabel lblTotalCost;
    public javax.swing.JLabel lblUnderrecovery;
    public javax.swing.JPanel pnlBudgetPeriod;
    public edu.mit.coeus.budget.utils.LineItemCalculatedAmountsTable pnlLineItemCalculatedAmounts;
    public javax.swing.JPanel pnlPeriodDetail;
    public javax.swing.JScrollPane scrPnBudgetPeriods;
    public javax.swing.JScrollPane scrPnPeriodLineItem;
    public javax.swing.JScrollPane scrPnlJustify;
    public javax.swing.JTable tblJustify;
    public javax.swing.JTable tblPeriodLineItem;
    public edu.mit.coeus.utils.DollarCurrencyTextField txtCostLimit;
    public edu.mit.coeus.utils.DollarCurrencyTextField txtCostSharing;
    public edu.mit.coeus.utils.DollarCurrencyTextField txtDirectCost;
    public edu.mit.coeus.utils.DollarCurrencyTextField txtDirectCostLimit;
    public javax.swing.JTextField txtEndDate;
    public edu.mit.coeus.utils.DollarCurrencyTextField txtIndirectCost;
    public edu.mit.coeus.utils.CoeusTextField txtPeriodMonths;
    public javax.swing.JTextField txtStartDate;
    public edu.mit.coeus.utils.DollarCurrencyTextField txtTotalCost;
    public edu.mit.coeus.utils.DollarCurrencyTextField txtUnderrecovery;
    // End of variables declaration//GEN-END:variables
    
    
    //For Testing Purpose Only
    public static void main(String s[]) {
        JFrame jf = new JFrame();
        edu.mit.coeus.budget.bean.BudgetInfoBean bib = new edu.mit.coeus.budget.bean.BudgetInfoBean();
        jf.getContentPane().add(new edu.mit.coeus.budget.controller.BudgetPeriodController(bib).getControlledUI());
        jf.setSize(600,400);
        jf.setVisible(true);
    }
    
}
