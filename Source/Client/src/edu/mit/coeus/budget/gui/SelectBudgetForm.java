/** Copyright (c) Massachusetts Institute of Technology
 * 77 Massachusetts Avenue, Cambridge, MA 02139-4307
 * All rights reserved.
 */

package edu.mit.coeus.budget.gui;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

import javax.swing.event.*;
import javax.swing.border.*;
import javax.swing.table.*;

import edu.mit.coeus.gui.CoeusFontFactory;
import edu.mit.coeus.gui.CoeusDlgWindow;

/** SelectBudgetForm.java
 * @author  chandrashekara
 * Created on September 5, 2003, 4:02 PM
 */

public class SelectBudgetForm extends javax.swing.JComponent{
    public CoeusDlgWindow dlgSelectBudgetForm;
    boolean modal;
    private Frame parent;

    public String proposalId;
    
    private static final int WIDTH = 500;
    private static final int HEIGHT = 440;
    
    /** Creates new form SelectBudgetForm
     * @param parent takes the frame
     * @param modal true if form is modal, false otherwise
     */
    public SelectBudgetForm( Frame parent, boolean modal) {
        this.parent = parent;
        this.modal = modal;
        initComponents();
        postInitComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form. */
    public void postInitComponents(){    
        dlgSelectBudgetForm = new CoeusDlgWindow(parent,modal);
        dlgSelectBudgetForm.setDefaultCloseOperation(CoeusDlgWindow.DO_NOTHING_ON_CLOSE);
        dlgSelectBudgetForm.getContentPane().add(this);
        //dlgSelectBudgetForm.pack();
        dlgSelectBudgetForm.setResizable(false);
        dlgSelectBudgetForm.setTitle("Select Budget");
        dlgSelectBudgetForm.setFont(CoeusFontFactory.getLabelFont());
        dlgSelectBudgetForm.setSize(WIDTH,HEIGHT);
        
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension dlgSize = dlgSelectBudgetForm.getSize();
        dlgSelectBudgetForm.setLocation(screenSize.width/2 - (dlgSize.width/2),
        screenSize.height/2 - (dlgSize.height/2));

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        lblProposalNo = new javax.swing.JLabel();
        lblSponsor = new javax.swing.JLabel();
        scrPnBudgetVersion = new javax.swing.JScrollPane();
        tblBudgetVersion = new javax.swing.JTable();
        pnlCost = new javax.swing.JPanel();
        lblDirectCost = new javax.swing.JLabel();
        lblIndirectCost = new javax.swing.JLabel();
        lblCostSharing = new javax.swing.JLabel();
        lblUnderRecovery = new javax.swing.JLabel();
        lblResidualFunds = new javax.swing.JLabel();
        lblOH = new javax.swing.JLabel();
        lblComments = new javax.swing.JLabel();
        lblLastUpdate = new javax.swing.JLabel();
        lblUpdatedUser = new javax.swing.JLabel();
        txtLastUpdated = new javax.swing.JTextField();
        txtUpdatedUser = new javax.swing.JTextField();
        txtDirectCost = new edu.mit.coeus.utils.DollarCurrencyTextField();
        txtIndirectCost = new edu.mit.coeus.utils.DollarCurrencyTextField();
        txtCostSharing = new edu.mit.coeus.utils.DollarCurrencyTextField();
        txtUnderRecovery = new edu.mit.coeus.utils.DollarCurrencyTextField();
        txtResidualFunds = new edu.mit.coeus.utils.DollarCurrencyTextField();
        txtOHRateType = new javax.swing.JTextField();
        scrPnComments = new javax.swing.JScrollPane();
        txtArComments = new javax.swing.JTextArea();
        lblProposalValue = new javax.swing.JLabel();
        lblSponsorValue = new javax.swing.JLabel();
        pnlStatusVersion = new javax.swing.JPanel();
        lblBudgetStatus = new javax.swing.JLabel();
        cmbStatus = new javax.swing.JComboBox();
        lblFinalVersion = new javax.swing.JLabel();
        lblFinalVerValue = new javax.swing.JLabel();
        pnlButtons = new javax.swing.JPanel();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnModify = new javax.swing.JButton();
        btnDisplay = new javax.swing.JButton();
        btnCopy = new javax.swing.JButton();
        sptrSelectBudget = new javax.swing.JSeparator();

        setLayout(new java.awt.GridBagLayout());

        setBorder(new javax.swing.border.CompoundBorder());
        setMinimumSize(new java.awt.Dimension(480, 415));
        setPreferredSize(new java.awt.Dimension(480, 415));
        lblProposalNo.setFont(CoeusFontFactory.getLabelFont());
        lblProposalNo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblProposalNo.setText("Proposal Number: ");
        lblProposalNo.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        add(lblProposalNo, gridBagConstraints);

        lblSponsor.setFont(CoeusFontFactory.getLabelFont());
        lblSponsor.setText("Sponsor: ");
        lblSponsor.setToolTipText("");
        lblSponsor.setMaximumSize(new java.awt.Dimension(100, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weighty = 1.0;
        add(lblSponsor, gridBagConstraints);

        scrPnBudgetVersion.setBorder(new javax.swing.border.EtchedBorder());
        scrPnBudgetVersion.setMinimumSize(new java.awt.Dimension(310, 150));
        scrPnBudgetVersion.setPreferredSize(new java.awt.Dimension(310, 150));
        tblBudgetVersion.setBackground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));
        tblBudgetVersion.setFont(CoeusFontFactory.getNormalFont());
        tblBudgetVersion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "HandIcon", "Version", "Start Date", "End Date", "Total Cost", "Final"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBudgetVersion.setRowHeight(22);
        tblBudgetVersion.setSelectionBackground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));
        tblBudgetVersion.setShowHorizontalLines(false);
        tblBudgetVersion.setShowVerticalLines(false);
        scrPnBudgetVersion.setViewportView(tblBudgetVersion);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        add(scrPnBudgetVersion, gridBagConstraints);

        pnlCost.setLayout(new java.awt.GridBagLayout());

        pnlCost.setBorder(new javax.swing.border.EtchedBorder());
        pnlCost.setMinimumSize(new java.awt.Dimension(390, 175));
        pnlCost.setPreferredSize(new java.awt.Dimension(390, 175));
        lblDirectCost.setFont(CoeusFontFactory.getLabelFont());
        lblDirectCost.setText("Direct Cost: ");
        lblDirectCost.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        pnlCost.add(lblDirectCost, gridBagConstraints);

        lblIndirectCost.setFont(CoeusFontFactory.getLabelFont());
        lblIndirectCost.setText("Indirect Cost: ");
        lblIndirectCost.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        pnlCost.add(lblIndirectCost, gridBagConstraints);

        lblCostSharing.setFont(CoeusFontFactory.getLabelFont());
        lblCostSharing.setText("Cost Sharing: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        pnlCost.add(lblCostSharing, gridBagConstraints);

        lblUnderRecovery.setFont(CoeusFontFactory.getLabelFont());
        lblUnderRecovery.setText("Underrecovery: ");
        lblUnderRecovery.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        pnlCost.add(lblUnderRecovery, gridBagConstraints);

        lblResidualFunds.setFont(CoeusFontFactory.getLabelFont());
        lblResidualFunds.setText("Residual Funds: ");
        lblResidualFunds.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        pnlCost.add(lblResidualFunds, gridBagConstraints);

        lblOH.setFont(CoeusFontFactory.getLabelFont());
        lblOH.setText(" OH Rate Type: ");
        lblOH.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        pnlCost.add(lblOH, gridBagConstraints);

        lblComments.setFont(CoeusFontFactory.getLabelFont());
        lblComments.setText("Comments: ");
        lblComments.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        pnlCost.add(lblComments, gridBagConstraints);

        lblLastUpdate.setFont(CoeusFontFactory.getLabelFont());
        lblLastUpdate.setText("Last Updated: ");
        lblLastUpdate.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weighty = 1.0;
        pnlCost.add(lblLastUpdate, gridBagConstraints);

        lblUpdatedUser.setFont(CoeusFontFactory.getLabelFont());
        lblUpdatedUser.setText("Updated User: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        pnlCost.add(lblUpdatedUser, gridBagConstraints);

        txtLastUpdated.setEditable(false);
        txtLastUpdated.setFont(CoeusFontFactory.getNormalFont());
        txtLastUpdated.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtLastUpdated.setToolTipText("");
        txtLastUpdated.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtLastUpdated.setMinimumSize(new java.awt.Dimension(140, 20));
        txtLastUpdated.setPreferredSize(new java.awt.Dimension(140, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        pnlCost.add(txtLastUpdated, gridBagConstraints);

        txtUpdatedUser.setEditable(false);
        txtUpdatedUser.setFont(CoeusFontFactory.getNormalFont());
        txtUpdatedUser.setToolTipText("");
        txtUpdatedUser.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtUpdatedUser.setMinimumSize(new java.awt.Dimension(120, 20));
        txtUpdatedUser.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        pnlCost.add(txtUpdatedUser, gridBagConstraints);

        txtDirectCost.setBackground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));
        txtDirectCost.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtDirectCost.setEditable(false);
        txtDirectCost.setMinimumSize(new java.awt.Dimension(120, 20));
        txtDirectCost.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 5);
        pnlCost.add(txtDirectCost, gridBagConstraints);

        txtIndirectCost.setBackground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));
        txtIndirectCost.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtIndirectCost.setEditable(false);
        txtIndirectCost.setMinimumSize(new java.awt.Dimension(120, 20));
        txtIndirectCost.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 5);
        pnlCost.add(txtIndirectCost, gridBagConstraints);

        txtCostSharing.setBackground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));
        txtCostSharing.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtCostSharing.setEditable(false);
        txtCostSharing.setMinimumSize(new java.awt.Dimension(120, 20));
        txtCostSharing.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 5);
        pnlCost.add(txtCostSharing, gridBagConstraints);

        txtUnderRecovery.setBackground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));
        txtUnderRecovery.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtUnderRecovery.setEditable(false);
        txtUnderRecovery.setMinimumSize(new java.awt.Dimension(120, 20));
        txtUnderRecovery.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 5);
        pnlCost.add(txtUnderRecovery, gridBagConstraints);

        txtResidualFunds.setBackground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));
        txtResidualFunds.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtResidualFunds.setEditable(false);
        txtResidualFunds.setMinimumSize(new java.awt.Dimension(120, 20));
        txtResidualFunds.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 5);
        pnlCost.add(txtResidualFunds, gridBagConstraints);

        txtOHRateType.setBackground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));
        txtOHRateType.setEditable(false);
        txtOHRateType.setFont(CoeusFontFactory.getNormalFont());
        txtOHRateType.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtOHRateType.setMinimumSize(new java.awt.Dimension(120, 20));
        txtOHRateType.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 5);
        pnlCost.add(txtOHRateType, gridBagConstraints);

        scrPnComments.setHorizontalScrollBarPolicy(javax.swing.JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        scrPnComments.setMinimumSize(new java.awt.Dimension(280, 60));
        scrPnComments.setPreferredSize(new java.awt.Dimension(280, 70));
        txtArComments.setBackground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));
        txtArComments.setEditable(false);
        txtArComments.setFont(CoeusFontFactory.getNormalFont());
        txtArComments.setLineWrap(true);
        txtArComments.setToolTipText("");
        txtArComments.setWrapStyleWord(true);
        txtArComments.setBorder(null);
        scrPnComments.setViewportView(txtArComments);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 5);
        pnlCost.add(scrPnComments, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(pnlCost, gridBagConstraints);

        lblProposalValue.setFont(CoeusFontFactory.getNormalFont());
        lblProposalValue.setText("xxxxxxxx");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(lblProposalValue, gridBagConstraints);

        lblSponsorValue.setFont(CoeusFontFactory.getNormalFont());
        lblSponsorValue.setMaximumSize(new java.awt.Dimension(90, 16));
        lblSponsorValue.setMinimumSize(new java.awt.Dimension(90, 17));
        lblSponsorValue.setPreferredSize(new java.awt.Dimension(90, 17));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(lblSponsorValue, gridBagConstraints);

        pnlStatusVersion.setLayout(new java.awt.GridBagLayout());

        pnlStatusVersion.setBorder(new javax.swing.border.EtchedBorder());
        pnlStatusVersion.setMinimumSize(new java.awt.Dimension(328, 25));
        pnlStatusVersion.setPreferredSize(new java.awt.Dimension(328, 25));
        lblBudgetStatus.setFont(CoeusFontFactory.getLabelFont());
        lblBudgetStatus.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblBudgetStatus.setText("Budget Status:");
        lblBudgetStatus.setToolTipText("");
        lblBudgetStatus.setMaximumSize(new java.awt.Dimension(98, 16));
        lblBudgetStatus.setMinimumSize(new java.awt.Dimension(98, 16));
        lblBudgetStatus.setPreferredSize(new java.awt.Dimension(85, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        pnlStatusVersion.add(lblBudgetStatus, gridBagConstraints);

        cmbStatus.setFont(CoeusFontFactory.getNormalFont());
        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Incomplete", "Complete", "(None)" }));
        cmbStatus.setMinimumSize(new java.awt.Dimension(100, 20));
        cmbStatus.setPreferredSize(new java.awt.Dimension(100, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        pnlStatusVersion.add(cmbStatus, gridBagConstraints);

        lblFinalVersion.setFont(CoeusFontFactory.getLabelFont());
        lblFinalVersion.setText("Final Version:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        pnlStatusVersion.add(lblFinalVersion, gridBagConstraints);

        lblFinalVerValue.setFont(CoeusFontFactory.getNormalFont());
        lblFinalVerValue.setMaximumSize(new java.awt.Dimension(40, 16));
        lblFinalVerValue.setMinimumSize(new java.awt.Dimension(40, 16));
        lblFinalVerValue.setPreferredSize(new java.awt.Dimension(40, 16));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 2, 2);
        pnlStatusVersion.add(lblFinalVerValue, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 5);
        add(pnlStatusVersion, gridBagConstraints);

        pnlButtons.setLayout(new java.awt.GridBagLayout());

        btnOk.setFont(CoeusFontFactory.getLabelFont());
        btnOk.setMnemonic('O');
        btnOk.setText("OK");
        btnOk.setToolTipText("");
        btnOk.setMaximumSize(new java.awt.Dimension(75, 26));
        btnOk.setMinimumSize(new java.awt.Dimension(75, 26));
        btnOk.setPreferredSize(new java.awt.Dimension(75, 26));
        btnOk.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        pnlButtons.add(btnOk, gridBagConstraints);

        btnCancel.setFont(CoeusFontFactory.getLabelFont());
        btnCancel.setMnemonic('C');
        btnCancel.setText("Cancel");
        btnCancel.setToolTipText("");
        btnCancel.setMaximumSize(new java.awt.Dimension(75, 26));
        btnCancel.setMinimumSize(new java.awt.Dimension(75, 26));
        btnCancel.setPreferredSize(new java.awt.Dimension(75, 26));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        pnlButtons.add(btnCancel, gridBagConstraints);

        btnNew.setFont(CoeusFontFactory.getLabelFont());
        btnNew.setMnemonic('N');
        btnNew.setText("New");
        btnNew.setToolTipText("");
        btnNew.setMaximumSize(new java.awt.Dimension(75, 26));
        btnNew.setMinimumSize(new java.awt.Dimension(75, 26));
        btnNew.setPreferredSize(new java.awt.Dimension(75, 26));
        btnNew.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 3, 0, 0);
        pnlButtons.add(btnNew, gridBagConstraints);

        btnModify.setFont(CoeusFontFactory.getLabelFont());
        btnModify.setMnemonic('M');
        btnModify.setText("Modify");
        btnModify.setToolTipText("");
        btnModify.setMaximumSize(new java.awt.Dimension(75, 26));
        btnModify.setMinimumSize(new java.awt.Dimension(75, 26));
        btnModify.setPreferredSize(new java.awt.Dimension(75, 26));
        btnModify.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        pnlButtons.add(btnModify, gridBagConstraints);

        btnDisplay.setFont(CoeusFontFactory.getLabelFont());
        btnDisplay.setMnemonic('D');
        btnDisplay.setText("Display");
        btnDisplay.setToolTipText("");
        btnDisplay.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        pnlButtons.add(btnDisplay, gridBagConstraints);

        btnCopy.setFont(CoeusFontFactory.getLabelFont());
        btnCopy.setMnemonic('p');
        btnCopy.setText("Copy");
        btnCopy.setToolTipText("");
        btnCopy.setMaximumSize(new java.awt.Dimension(75, 26));
        btnCopy.setMinimumSize(new java.awt.Dimension(75, 26));
        btnCopy.setPreferredSize(new java.awt.Dimension(75, 26));
        btnCopy.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        pnlButtons.add(btnCopy, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        add(pnlButtons, gridBagConstraints);

        sptrSelectBudget.setBackground(java.awt.Color.black);
        sptrSelectBudget.setForeground(java.awt.Color.black);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 43;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        add(sptrSelectBudget, gridBagConstraints);

    }//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnCancel;
    public javax.swing.JButton btnCopy;
    public javax.swing.JButton btnDisplay;
    public javax.swing.JButton btnModify;
    public javax.swing.JButton btnNew;
    public javax.swing.JButton btnOk;
    public javax.swing.JComboBox cmbStatus;
    public javax.swing.JLabel lblBudgetStatus;
    public javax.swing.JLabel lblComments;
    public javax.swing.JLabel lblCostSharing;
    public javax.swing.JLabel lblDirectCost;
    public javax.swing.JLabel lblFinalVerValue;
    public javax.swing.JLabel lblFinalVersion;
    public javax.swing.JLabel lblIndirectCost;
    public javax.swing.JLabel lblLastUpdate;
    public javax.swing.JLabel lblOH;
    public javax.swing.JLabel lblProposalNo;
    public javax.swing.JLabel lblProposalValue;
    public javax.swing.JLabel lblResidualFunds;
    public javax.swing.JLabel lblSponsor;
    public javax.swing.JLabel lblSponsorValue;
    public javax.swing.JLabel lblUnderRecovery;
    public javax.swing.JLabel lblUpdatedUser;
    public javax.swing.JPanel pnlButtons;
    public javax.swing.JPanel pnlCost;
    public javax.swing.JPanel pnlStatusVersion;
    public javax.swing.JScrollPane scrPnBudgetVersion;
    public javax.swing.JScrollPane scrPnComments;
    public javax.swing.JSeparator sptrSelectBudget;
    public javax.swing.JTable tblBudgetVersion;
    public javax.swing.JTextArea txtArComments;
    public edu.mit.coeus.utils.DollarCurrencyTextField txtCostSharing;
    public edu.mit.coeus.utils.DollarCurrencyTextField txtDirectCost;
    public edu.mit.coeus.utils.DollarCurrencyTextField txtIndirectCost;
    public javax.swing.JTextField txtLastUpdated;
    public javax.swing.JTextField txtOHRateType;
    public edu.mit.coeus.utils.DollarCurrencyTextField txtResidualFunds;
    public edu.mit.coeus.utils.DollarCurrencyTextField txtUnderRecovery;
    public javax.swing.JTextField txtUpdatedUser;
    // End of variables declaration//GEN-END:variables

}
