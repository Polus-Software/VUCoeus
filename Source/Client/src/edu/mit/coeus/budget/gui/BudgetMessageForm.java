/*
 * BudgetMessageForm.java
 *
 * Created on November 5, 2003, 6:34 PM
 */

package edu.mit.coeus.budget.gui;

import edu.mit.coeus.gui.CoeusFontFactory;

import java.util.*;
import javax.swing.table.*;
import javax.swing.*;
import java.awt.event.*;

import edu.mit.coeus.gui.CoeusDlgWindow;
import edu.mit.coeus.utils.CoeusGuiConstants;

/**
 *
 * @author  chandrashekara
 */
public class BudgetMessageForm extends javax.swing.JComponent {
    MessageTableModel  messageTableModel;
    MessageRenderer messageRenderer;
    private Vector vecDisplay;
    CoeusDlgWindow dlgMessage;
    
    /** Creates new form BudgetMessageForm */
    public BudgetMessageForm() {
        initComponents();
        btnOk.requestFocusInWindow();
        postInitComponents();
    }
    
    private void postInitComponents(){
        messageTableModel = new MessageTableModel();
        messageRenderer = new MessageRenderer();
        tblMessage.setModel(messageTableModel);
        tblMessage.setFont(CoeusFontFactory.getNormalFont());
        tblMessage.setTableHeader(null);
        tblMessage.setDefaultRenderer(String.class, messageRenderer);
        dlgMessage = new CoeusDlgWindow(CoeusGuiConstants.getMDIForm());
        dlgMessage.getContentPane().add(this);
        dlgMessage.setModal(true);
        dlgMessage.setResizable(false);
        dlgMessage.setSize(653,265);
        dlgMessage.setLocation(CoeusDlgWindow.CENTER);
        dlgMessage.setTitle("Rates not Available");
        dlgMessage.setFont(CoeusFontFactory.getLabelFont());
        //dlgMessage.setDefaultCloseOperation(CoeusDlgWindow.HIDE_ON_CLOSE);
        dlgMessage.addWindowListener(new WindowAdapter() {
            public void windowActivated(WindowEvent we) {
                btnOk.requestFocusInWindow();
            }
            public void windowClosing(WindowEvent we){
                dlgMessage.dispose();
            }
        });
        dlgMessage.addEscapeKeyListener(
        new AbstractAction("escPressed"){
            public void actionPerformed(ActionEvent ae){
                    dlgMessage.dispose();
            }
        });
    }
    
    public void setFormData(Vector data) {
        messageTableModel.setDataVector(data);
        messageTableModel.fireTableDataChanged();
        //This loop is to set the widths for the table according to description.
             for(int index=0;index < data.size(); index++){
                tblMessage.setRowMargin(2);
                tblMessage.setRowHeight(index, 32);
            }
    }
   
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jcrPnMessage = new javax.swing.JScrollPane();
        tblMessage = new javax.swing.JTable();
        btnOk = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        setMinimumSize(new java.awt.Dimension(400, 250));
        setPreferredSize(new java.awt.Dimension(400, 250));
        jcrPnMessage.setBorder(null);
        jcrPnMessage.setMinimumSize(new java.awt.Dimension(620, 200));
        jcrPnMessage.setPreferredSize(new java.awt.Dimension(620, 200));
        tblMessage.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jcrPnMessage.setViewportView(tblMessage);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(jcrPnMessage, gridBagConstraints);

        btnOk.setFont(CoeusFontFactory.getLabelFont());
        btnOk.setMnemonic('O');
        btnOk.setText("OK");
        btnOk.setToolTipText("");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        add(btnOk, gridBagConstraints);

    }//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
                // Add your handling code here:
        dlgMessage.dispose();
    }//GEN-LAST:event_btnOkActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnOk;
    public javax.swing.JScrollPane jcrPnMessage;
    public javax.swing.JTable tblMessage;
    // End of variables declaration//GEN-END:variables
     public void display(){
            dlgMessage.setVisible(true);
        }
     
     /** An Inner class to hold the table data
      */
    private class MessageTableModel extends DefaultTableModel{
        private String colnames[] = {"Message"};
        
        private Class colClass[] = {String.class};
        
        boolean[] canEdit = new boolean [] {
            
            false
        };
        
        private Vector data;
        MessageTableModel(){
        }
        
         public boolean isCellEditable(int row, int col){
             return false;
         }
          public Class getColumnClass(int columnIndex) {
            return colClass [columnIndex];
        }
        
        public int getColumnCount() {
            return colnames.length;
        }
        
        public String getColumnName(int column) {
            return colnames[column];
        }
        
        public void setDataVector(Vector data) {
            this.data = data;
        }
        public int getRowCount() {
            if(data == null) return 0;
            return data.size();
        }
         public Object getValueAt(int row, int column) {
             return data.get(row);
             
         }
         public void setValueAt(Object value, int row, int column) {
             
         }
         
    }
    /** An inner class renderer used for the table rows as a textarea component, to hold the data
     *according to the specified size
     */
    private class MessageRenderer extends DefaultTableCellRenderer implements TableCellRenderer{
        JTextArea txtArMessage;
        JScrollPane jcrPnMessage;
        MessageRenderer(){
            txtArMessage = new JTextArea();
            jcrPnMessage = new JScrollPane();
            txtArMessage.setBackground((java.awt.Color) javax.swing.UIManager.getDefaults().get("Panel.background"));            
            txtArMessage.setLineWrap(true);
            txtArMessage.setEditable(false);
            txtArMessage.setWrapStyleWord(true);
            txtArMessage.setFont(CoeusFontFactory.getNormalFont());
        }
        public java.awt.Component getTableCellRendererComponent(javax.swing.JTable table,
        Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            txtArMessage.setText(value.toString());
            return txtArMessage;
        }
    }
}
