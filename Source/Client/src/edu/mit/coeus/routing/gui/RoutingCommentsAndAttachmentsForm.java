/*
 * RoutingCommentsAndAttachmentsForm.java
 *
 * Created on May 13, 2011, 11:36 AM
 *
 * Copyright (c) Massachusetts Institute of Technology
 * 77 Massachusetts Avenue, Cambridge, MA 02139-4307
 * All rights reserved.
 */

/* PMD check performed, and commented unused imports and variables on 02-JUNE-2011
 * by Manjunatha
 */

package edu.mit.coeus.routing.gui;

import edu.mit.coeus.gui.CoeusFontFactory;
import edu.mit.coeus.routing.bean.RoutingAttachmentBean;
import edu.mit.coeus.routing.bean.RoutingDetailsBean;
import edu.mit.coeus.utils.CoeusGuiConstants;
import edu.mit.coeus.utils.CoeusVector;
import javax.swing.ImageIcon;
import javax.swing.JPanel;


/**
 *
 * @author  manjunathabn
 */

public class RoutingCommentsAndAttachmentsForm extends javax.swing.JPanel {
    
    private RoutingDetailsBean routingDetailsBean ;
    private String approvalFlags [][] = {
        {"W","Waiting for Approval"},
        {"A","Approved"},
        {"R","Rejected"},
        {"P","Passed"},
        {"L","Passed by other"},
        {"O","Approved by other"},
        {"B","Bypassed"},
        {"J","Rejected by other"},
        {"D", "Delegated"},
        {"T", "To be submitted"},
        {"C","Recalled"}, // ADded for COEUSQA-3734 : recall Comments not being saved in history        
        {"E","Recalled by other"} // Added for COEUSQA-3734 : recall comments not being saved in history details screen


    };
    private static final String EMPTY_STRING = "";
    private static CoeusVector vecAttachments;
    private static final String NO_COMMENTS_ATTACHMENTS = "No Comments and Attachments";
    
    
    /** Creates new form RoutingCommentsAndAttachmentsForm */
    public RoutingCommentsAndAttachmentsForm() {
        initComponents();
    }
    
    /** Creates new form RoutingCommentsAndAttachmentsForm
     */
    public RoutingCommentsAndAttachmentsForm( RoutingDetailsBean routingDetailsBean, CoeusVector vecAttachments) {
        this();
        this.routingDetailsBean = routingDetailsBean;
        this.vecAttachments = vecAttachments;
        setFormData();
    }
    
    /** Creates new form RoutingCommentsAndAttachmentsForm
     */
    public RoutingCommentsAndAttachmentsForm(String emptyString) {
        this();
        setFormDataForEmptyData();
    }
    
    /** Sets the form data
     */
    private void setFormData(){
        if( routingDetailsBean == null ) return ;
        if(routingDetailsBean.getApprovalStatus()!=null && routingDetailsBean.getApprovalStatus().equalsIgnoreCase("B"))
        {
            if( routingDetailsBean.getUpdateUser() != null ){
             lblUserName.setText(routingDetailsBean.getUpdateUserName()+" ("+ routingDetailsBean.getUpdateUser()+")");
        }}
        else{
            if( routingDetailsBean.getUserName() != null ){
            lblUserName.setText(routingDetailsBean.getUserName()+" ("+ routingDetailsBean.getUserId()+")");
        }

        }
        if( routingDetailsBean.getApprovalStatus() != null ){
            String approvalStatus = getApprovalStatusDescription(routingDetailsBean.getApprovalStatus());
            lblActionStatus.setText(approvalStatus );
        }
        
        if( vecAttachments != null && vecAttachments.size() > 0){
            btnIcon.setVisible(true);
            btnIcon.setEnabled(true);
            routingDetailsBean.setAttachments(vecAttachments);
            btnIcon.setIcon(new ImageIcon(getClass().getClassLoader().getResource(CoeusGuiConstants.ENABLED_ATTACHMENT_ICON)));
        } else {
            btnIcon.setEnabled(false);
        }
    }
    
    /** Sets the form data
     *
     */
    private void setFormDataForEmptyData(){
        lblUserName.setText(NO_COMMENTS_ATTACHMENTS);
        btnIcon.setEnabled(false);
    }
    
    /** Sets the Approval Statuc text for the approval 
     *  status
     */
    private String getApprovalStatusDescription(String approvalStatusCode) {
        
        if(approvalStatusCode != null) {
            for(int index=0;index<approvalFlags.length;index++) {
                if(approvalFlags[index][0].equals(approvalStatusCode)) {
                    return approvalFlags[index][1];
                }
            }
        }
        return EMPTY_STRING;
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblUserName = new javax.swing.JLabel();
        lblActionStatus = new javax.swing.JLabel();
        btnIcon = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        setMinimumSize(new java.awt.Dimension(800, 16));
        setPreferredSize(new java.awt.Dimension(800, 16));
        lblUserName.setFont(CoeusFontFactory.getLabelFont());
        lblUserName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblUserName.setFocusTraversalPolicyProvider(true);
        lblUserName.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        lblUserName.setPreferredSize(new java.awt.Dimension(280, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        add(lblUserName, gridBagConstraints);

        lblActionStatus.setFont(CoeusFontFactory.getLabelFont());
        lblActionStatus.setPreferredSize(new java.awt.Dimension(210, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 115);
        add(lblActionStatus, gridBagConstraints);

        btnIcon.setContentAreaFilled(false);
        btnIcon.setMinimumSize(new java.awt.Dimension(33, 16));
        btnIcon.setPreferredSize(new java.awt.Dimension(20, 16));
        btnIcon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIconActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(btnIcon, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents
    
    private void btnIconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIconActionPerformed
        // TODO add your handling code here:
        RoutingAttachmentForm attachmentForm = new RoutingAttachmentForm(routingDetailsBean.getAttachments().size());
        attachmentForm.setData( routingDetailsBean.getUserName(), routingDetailsBean.getUserId(),getApprovalStatusDescription(routingDetailsBean.getApprovalStatus()), routingDetailsBean.getAttachments());
        attachmentForm.display();
    }//GEN-LAST:event_btnIconActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIcon;
    private javax.swing.JLabel lblActionStatus;
    private javax.swing.JLabel lblUserName;
    // End of variables declaration//GEN-END:variables
    
    
    
    /** Return this child panel to the main panel
     * @return the current instance
     */
    public JPanel getChildPanel(){
        return this;
    }
    
    
}
