/*
 * ShowListForm.java
 *
 * Created on January 24, 2005, 5:05 PM
 */

package edu.mit.coeus.centraladmin.gui;

import edu.mit.coeus.centraladmin.bean.MassChangeDataBean;
import edu.mit.coeus.gui.CoeusAppletMDIForm;
import edu.mit.coeus.gui.CoeusDlgWindow;
import edu.mit.coeus.gui.CoeusFontFactory;
import edu.mit.coeus.utils.CoeusGuiConstants;
import edu.mit.coeus.utils.CoeusVector;
import java.awt.Color;
import java.awt.Dimension;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JTable;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;



/**
 *
 * @author  nadhgj
 */
public class ShowListReplaceForm extends javax.swing.JComponent {
    
    private String headerText;
    
    private String footterText;
    
    private CoeusVector vecListData,vecData;
    
    private MassChangeModel massChangeModel;
    
    private MassChangeDataBean massChangeDataBean;
    
    private static final int MODULE_NUMBER = 0;
    
    private static final int USER_DIF_COLUMN = 1;
    
    private static final String EMPTY_STRING="";
    
    private String moduleName;
    private String  colNames[] ;
    
    /** Creates new form ShowListForm */
    public ShowListReplaceForm(CoeusVector vecListData, String headerText, String footterText, String[] colNames) {
        this.vecListData = vecListData;
        this.colNames = colNames;
        this.headerText = headerText;
        this.footterText = footterText;
        this.moduleName = moduleName;
        initComponents();
        scrpnList.getViewport().setBackground(java.awt.Color.white);
        //scrpnList.setBackground(Color.WHITE);
        postInitComponents();
        setColumnData();
        setFormData(vecListData);
    }
    
    private void postInitComponents() {
        massChangeModel = new MassChangeModel();
        tblList.setModel(massChangeModel);
        lblHeader.setText(headerText);
        lblFooter.setText(footterText);
        tblList.setRowSelectionAllowed(false);
        tblList.setOpaque(true);
        scrpnList.setOpaque(false);
    }
    
   /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        lblHeader = new javax.swing.JLabel();
        lblFooter = new javax.swing.JLabel();
        scrpnList = new javax.swing.JScrollPane();
        tblList = new javax.swing.JTable();

        setLayout(new java.awt.GridBagLayout());

        lblHeader.setFont(CoeusFontFactory.getLabelFont());
        lblHeader.setText("jLabel1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(lblHeader, gridBagConstraints);

        lblFooter.setFont(CoeusFontFactory.getLabelFont()
        );
        lblFooter.setText("jLabel1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(lblFooter, gridBagConstraints);

        scrpnList.setBackground(new java.awt.Color(255, 255, 255));
        scrpnList.setBorder(new javax.swing.border.EtchedBorder());
        scrpnList.setMinimumSize(new java.awt.Dimension(550, 250));
        scrpnList.setPreferredSize(new java.awt.Dimension(550, 250));
        scrpnList.setAutoscrolls(true);
        tblList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblList.setOpaque(false);
        scrpnList.setViewportView(tblList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 0, 0);
        add(scrpnList, gridBagConstraints);

    }//GEN-END:initComponents
    
    
    public void setFormData(Object data) {
        vecData = (CoeusVector)data;
//        lblHeader.setText(replacePerson+" will be replaced by "+withNewPerson+" in the following awards.");
        lblFooter.setText(((CoeusVector)data).size()+footterText);
        massChangeModel.setData(vecData);
        massChangeModel.fireTableDataChanged();
    }
    
    private void setColumnData() {
       tblList.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
       tblList.setRowHeight(22);
       tblList.setOpaque(false);
       tblList.setShowGrid(false);
       
       JTableHeader tableheader =  tblList.getTableHeader();
       tableheader.setBackground(Color.WHITE);
       tableheader.setReorderingAllowed(false);
       tableheader.setFont(CoeusFontFactory.getLabelFont());
       TableColumn column = tblList.getColumnModel().getColumn(0);
       column.setMinWidth(155);
       column.setPreferredWidth(155);
       column.setResizable(true);
       
       column = tblList.getColumnModel().getColumn(1);
       column.setMinWidth(373);
       column.setPreferredWidth(373);
       column.setResizable(true);
       
       
//       Dimension size = tblList.getPreferredScrollableViewportSize();
//        tblList.setPreferredScrollableViewportSize(new Dimension(Math.min(getPreferredSize().width, size.width), size.height));

    }
    
    class MassChangeModel extends AbstractTableModel {
        Class colClass[] = {String.class,String.class};
        
        public int getColumnCount() {
            return colNames.length;
        }
        
        public Class getColumnClass(int col){
            return colClass[col];
        }
        
        public int getRowCount() {
//            if(vecData != null && vecData.size()>0) return vecData.size();
//            return 0;
            if(vecData== null){
                return 0;
            }else{
                return vecData.size();
            }
        }
        
        /**
         *This method is to get the value with respect to the row and column
         *@param int row
         *@param int col
         *@return Object
         */
        public Object getValueAt(int rowIndex, int columnIndex) {
            massChangeDataBean = (MassChangeDataBean)vecData.get(rowIndex);
            switch(columnIndex) {
                case MODULE_NUMBER:
                    return massChangeDataBean.getIdentificationNo();
                case USER_DIF_COLUMN:
                    return massChangeDataBean.getFieldData();
            }
            return EMPTY_STRING;
        }
        
        /**
         *This method will specifies the data for the table model. Depending upon the value
         *passed, it will hold the Award or Institute Proposal Detail vestor
         *@param CoeusVector cvData
         *@return void
         */
        public void setData(CoeusVector vecData){
            vecData = vecData;
        }
        
        /**
         *This method is to check whether the specified cell is editable or not
         *@param int row
         *@param int col
         *@return boolean
         */
        public boolean isCellEditable(int row, int col) {
          return false;
        }
    
        /**
         *This method is to get the column name
         *@param int column
         *@return String
         */
        public String getColumnName(int column) {
            return colNames[column];
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel lblFooter;
    public javax.swing.JLabel lblHeader;
    public javax.swing.JScrollPane scrpnList;
    public javax.swing.JTable tblList;
    // End of variables declaration//GEN-END:variables
    
}
