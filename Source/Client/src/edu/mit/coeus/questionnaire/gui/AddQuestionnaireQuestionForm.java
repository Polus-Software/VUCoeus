/*
 * QuestionnaireDetailForm.java
 *
 * Created on September 19, 2006, 4:10 PM
 */

package edu.mit.coeus.questionnaire.gui;

import edu.mit.coeus.gui.CoeusAppletMDIForm;
import edu.mit.coeus.gui.CoeusDlgWindow;
import edu.mit.coeus.gui.CoeusFontFactory;
import edu.mit.coeus.utils.CoeusGuiConstants;
import edu.mit.coeus.utils.ComboBoxBean;
import java.awt.Dimension;
import java.awt.Toolkit;
import javax.swing.tree.DefaultMutableTreeNode;

import java.awt.*;
import java.util.Vector;
import javax.swing.*;
import javax.swing.tree.*;
/**
 *
 * @author  chandrashekara
 */
public class AddQuestionnaireQuestionForm extends javax.swing.JComponent {
    
    /** Creates new form QuestionnaireDetailForm */
    public AddQuestionnaireQuestionForm() {
        initComponents();
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        btnCondition = new javax.swing.ButtonGroup();
        pnlHeader = new javax.swing.JPanel();
        lblQuestionId = new javax.swing.JLabel();
        lblQuestion = new javax.swing.JLabel();
        txtQuestionId = new edu.mit.coeus.utils.CoeusTextField();
        scrPnDescription = new javax.swing.JScrollPane();
        txtArQuestion = new javax.swing.JTextArea();
        pnlConditional = new javax.swing.JPanel();
        rdBtnAlways = new javax.swing.JRadioButton();
        rdBtnCondition = new javax.swing.JRadioButton();
        pnlPreviousAndRule = new javax.swing.JPanel();
        chkPreviousSelect = new javax.swing.JCheckBox();
        txtConditionValue = new javax.swing.JTextField();
        lblPreviousQuestion = new javax.swing.JLabel();
        cmbCondition = new javax.swing.JComboBox();
        lblIs = new javax.swing.JLabel();
        pnlRulePanel = new javax.swing.JPanel();
        chkRuleSelect = new javax.swing.JCheckBox();
        lblSelectRule = new javax.swing.JLabel();
        txtRuleDesc = new javax.swing.JTextField();
        btnRuleDesc = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        pnlHeaderButtons = new javax.swing.JPanel();
        btnOK = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        setMinimumSize(new java.awt.Dimension(726, 420));
        setPreferredSize(new java.awt.Dimension(726, 420));
        pnlHeader.setLayout(new java.awt.GridBagLayout());

        pnlHeader.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        pnlHeader.setMinimumSize(new java.awt.Dimension(650, 490));
        pnlHeader.setPreferredSize(new java.awt.Dimension(650, 490));
        lblQuestionId.setFont(CoeusFontFactory.getLabelFont());
        lblQuestionId.setText("Question ID: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(7, 3, 0, 0);
        pnlHeader.add(lblQuestionId, gridBagConstraints);

        lblQuestion.setFont(CoeusFontFactory.getLabelFont());
        lblQuestion.setText("Question: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(7, 3, 0, 0);
        pnlHeader.add(lblQuestion, gridBagConstraints);

        txtQuestionId.setMinimumSize(new java.awt.Dimension(190, 20));
        txtQuestionId.setPreferredSize(new java.awt.Dimension(190, 20));
        txtQuestionId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuestionIdActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 3, 0, 0);
        pnlHeader.add(txtQuestionId, gridBagConstraints);

        scrPnDescription.setMinimumSize(new java.awt.Dimension(558, 180));
        scrPnDescription.setPreferredSize(new java.awt.Dimension(558, 180));
        txtArQuestion.setEnabled(false);
        scrPnDescription.setViewportView(txtArQuestion);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 3, 0, 3);
        pnlHeader.add(scrPnDescription, gridBagConstraints);

        pnlConditional.setLayout(new java.awt.GridBagLayout());

        pnlConditional.setMinimumSize(new java.awt.Dimension(645, 200));
        pnlConditional.setPreferredSize(new java.awt.Dimension(645, 200));
        rdBtnAlways.setFont(CoeusFontFactory.getLabelFont());
        rdBtnAlways.setText("Always ask this Question");
        rdBtnAlways.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdBtnAlways.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdBtnAlways.setMaximumSize(new java.awt.Dimension(200, 15));
        rdBtnAlways.setMinimumSize(new java.awt.Dimension(200, 15));
        rdBtnAlways.setPreferredSize(new java.awt.Dimension(200, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        pnlConditional.add(rdBtnAlways, gridBagConstraints);

        rdBtnCondition.setFont(CoeusFontFactory.getLabelFont());
        rdBtnCondition.setText("Ask this Question when the following condition validate true");
        rdBtnCondition.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        rdBtnCondition.setMargin(new java.awt.Insets(0, 0, 0, 0));
        rdBtnCondition.setMaximumSize(new java.awt.Dimension(400, 15));
        rdBtnCondition.setMinimumSize(new java.awt.Dimension(400, 15));
        rdBtnCondition.setPreferredSize(new java.awt.Dimension(400, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 3, 0, 0);
        pnlConditional.add(rdBtnCondition, gridBagConstraints);

        pnlPreviousAndRule.setLayout(new java.awt.GridBagLayout());

        chkPreviousSelect.setText("Ask this Question when the answer to");
        chkPreviousSelect.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chkPreviousSelect.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 3, 0, 0);
        pnlPreviousAndRule.add(chkPreviousSelect, gridBagConstraints);

        txtConditionValue.setMinimumSize(new java.awt.Dimension(170, 20));
        txtConditionValue.setName("txtConditionValue");
        txtConditionValue.setPreferredSize(new java.awt.Dimension(170, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 3, 0, 0);
        pnlPreviousAndRule.add(txtConditionValue, gridBagConstraints);

        lblPreviousQuestion.setFont(CoeusFontFactory.getLabelFont());
        lblPreviousQuestion.setForeground(new java.awt.Color(0, 51, 255));
        lblPreviousQuestion.setText("<html><U>Previous Question</U></html>");
        lblPreviousQuestion.setMinimumSize(new java.awt.Dimension(105, 14));
        lblPreviousQuestion.setPreferredSize(new java.awt.Dimension(105, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 3, 0, 0);
        pnlPreviousAndRule.add(lblPreviousQuestion, gridBagConstraints);

        cmbCondition.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CONTAINS", "BEGINS WITH", "ENDS WITH", "EQUAL TO", "NOT EQUAL", "GREATER THAN", "LESS THAN", "GREATER THAN EQUAL", "LESS THAN EQUAL" }));
        cmbCondition.setMinimumSize(new java.awt.Dimension(120, 20));
        cmbCondition.setName("cmbCondition");
        cmbCondition.setPreferredSize(new java.awt.Dimension(120, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 3, 0, 0);
        pnlPreviousAndRule.add(cmbCondition, gridBagConstraints);

        lblIs.setFont(CoeusFontFactory.getLabelFont());
        lblIs.setText("is");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 3, 0, 0);
        pnlPreviousAndRule.add(lblIs, gridBagConstraints);

        pnlRulePanel.setLayout(new java.awt.GridBagLayout());

        chkRuleSelect.setText("Ask this question when the rule validate true");
        chkRuleSelect.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        chkRuleSelect.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 3, 0, 0);
        pnlRulePanel.add(chkRuleSelect, gridBagConstraints);

        lblSelectRule.setFont(CoeusFontFactory.getLabelFont());
        lblSelectRule.setForeground(new java.awt.Color(0, 51, 255));
        lblSelectRule.setText("<html><U>Select a Rule</U></html>");
        lblSelectRule.setMinimumSize(new java.awt.Dimension(80, 14));
        lblSelectRule.setPreferredSize(new java.awt.Dimension(80, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 3, 0, 0);
        pnlRulePanel.add(lblSelectRule, gridBagConstraints);

        txtRuleDesc.setEditable(false);
        txtRuleDesc.setMinimumSize(new java.awt.Dimension(170, 20));
        txtRuleDesc.setPreferredSize(new java.awt.Dimension(245, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 3, 0, 0);
        pnlRulePanel.add(txtRuleDesc, gridBagConstraints);

        btnRuleDesc.setIcon(new ImageIcon(getClass().getClassLoader().getResource(
            CoeusGuiConstants.JUSTIFIED)));
btnRuleDesc.setPreferredSize(new java.awt.Dimension(20, 9));
gridBagConstraints = new java.awt.GridBagConstraints();
gridBagConstraints.gridx = 4;
gridBagConstraints.gridy = 0;
gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
gridBagConstraints.insets = new java.awt.Insets(7, 3, 0, 27);
pnlRulePanel.add(btnRuleDesc, gridBagConstraints);

gridBagConstraints = new java.awt.GridBagConstraints();
gridBagConstraints.gridx = 0;
gridBagConstraints.gridy = 1;
gridBagConstraints.gridwidth = 5;
gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
pnlPreviousAndRule.add(pnlRulePanel, gridBagConstraints);

gridBagConstraints = new java.awt.GridBagConstraints();
gridBagConstraints.gridx = 0;
gridBagConstraints.gridy = 2;
gridBagConstraints.gridwidth = 5;
gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
gridBagConstraints.insets = new java.awt.Insets(3, 20, 3, 20);
pnlConditional.add(pnlPreviousAndRule, gridBagConstraints);

gridBagConstraints = new java.awt.GridBagConstraints();
gridBagConstraints.gridx = 0;
gridBagConstraints.gridy = 7;
gridBagConstraints.gridwidth = 4;
gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
gridBagConstraints.weightx = 1.0;
gridBagConstraints.weighty = 1.0;
gridBagConstraints.insets = new java.awt.Insets(7, 3, 0, 3);
pnlHeader.add(pnlConditional, gridBagConstraints);

btnSearch.setFont(CoeusFontFactory.getLabelFont());
btnSearch.setText("Search");
btnSearch.setMaximumSize(new java.awt.Dimension(90, 23));
btnSearch.setMinimumSize(new java.awt.Dimension(90, 23));
btnSearch.setPreferredSize(new java.awt.Dimension(90, 23));
gridBagConstraints = new java.awt.GridBagConstraints();
gridBagConstraints.gridx = 1;
gridBagConstraints.gridy = 2;
gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
gridBagConstraints.insets = new java.awt.Insets(6, 200, 0, 0);
pnlHeader.add(btnSearch, gridBagConstraints);

gridBagConstraints = new java.awt.GridBagConstraints();
gridBagConstraints.gridx = 0;
gridBagConstraints.gridy = 0;
gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
add(pnlHeader, gridBagConstraints);

pnlHeaderButtons.setLayout(new java.awt.GridBagLayout());

btnOK.setFont(CoeusFontFactory.getLabelFont());
btnOK.setMnemonic('O');
btnOK.setText("OK");
btnOK.setMargin(new java.awt.Insets(2, 4, 2, 4));
btnOK.setMaximumSize(new java.awt.Dimension(90, 23));
btnOK.setMinimumSize(new java.awt.Dimension(90, 23));
btnOK.setPreferredSize(new java.awt.Dimension(90, 23));
gridBagConstraints = new java.awt.GridBagConstraints();
gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
pnlHeaderButtons.add(btnOK, gridBagConstraints);

btnCancel.setFont(CoeusFontFactory.getLabelFont());
btnCancel.setMnemonic('C');
btnCancel.setText("Cancel");
btnCancel.setMaximumSize(new java.awt.Dimension(90, 23));
btnCancel.setMinimumSize(new java.awt.Dimension(90, 23));
btnCancel.setPreferredSize(new java.awt.Dimension(90, 23));
gridBagConstraints = new java.awt.GridBagConstraints();
gridBagConstraints.gridx = 0;
gridBagConstraints.gridy = 1;
gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
pnlHeaderButtons.add(btnCancel, gridBagConstraints);

gridBagConstraints = new java.awt.GridBagConstraints();
gridBagConstraints.gridx = 1;
gridBagConstraints.gridy = 0;
gridBagConstraints.gridwidth = 4;
gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
gridBagConstraints.weightx = 1.0;
gridBagConstraints.weighty = 1.0;
gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
add(pnlHeaderButtons, gridBagConstraints);

}// </editor-fold>//GEN-END:initComponents

    private void txtQuestionIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuestionIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuestionIdActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnCancel;
    public javax.swing.ButtonGroup btnCondition;
    public javax.swing.JButton btnOK;
    public javax.swing.JButton btnRuleDesc;
    public javax.swing.JButton btnSearch;
    public javax.swing.JCheckBox chkPreviousSelect;
    public javax.swing.JCheckBox chkRuleSelect;
    public javax.swing.JComboBox cmbCondition;
    public javax.swing.JLabel lblIs;
    public javax.swing.JLabel lblPreviousQuestion;
    public javax.swing.JLabel lblQuestion;
    public javax.swing.JLabel lblQuestionId;
    public javax.swing.JLabel lblSelectRule;
    public javax.swing.JPanel pnlConditional;
    public javax.swing.JPanel pnlHeader;
    public javax.swing.JPanel pnlHeaderButtons;
    public javax.swing.JPanel pnlPreviousAndRule;
    public javax.swing.JPanel pnlRulePanel;
    public javax.swing.JRadioButton rdBtnAlways;
    public javax.swing.JRadioButton rdBtnCondition;
    public javax.swing.JScrollPane scrPnDescription;
    public javax.swing.JTextArea txtArQuestion;
    public javax.swing.JTextField txtConditionValue;
    public edu.mit.coeus.utils.CoeusTextField txtQuestionId;
    public javax.swing.JTextField txtRuleDesc;
    // End of variables declaration//GEN-END:variables
    

   

}
