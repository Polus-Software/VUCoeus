/*
 * @(#)CoeusApplet.java 1.0 7/27/02
 *
 * Copyright (c) Massachusetts Institute of Technology
 * 77 Massachusetts Avenue, Cambridge, MA 02139-4307
 * All rights reserved.
 */

/*
 * UserRole.java
 *
 * Created on August 1, 2003, 2:51 PM
 */

package edu.mit.coeus.user.gui;


import edu.mit.coeus.utils.*;
import java.util.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

import edu.mit.coeus.gui.CoeusDlgWindow;
import edu.mit.coeus.gui.CoeusFontFactory;
import edu.mit.coeus.user.*;
import edu.mit.coeus.user.bean.UserRolesController;
import edu.mit.coeus.user.gui.UserRoleDetails;
import edu.mit.coeus.bean.*;
import edu.mit.coeus.exception.CoeusClientException;

/** To display User Roles for a selected user. 
 *
 * @author  chandrashekara
 */

public class UserRole extends javax.swing.JComponent {
    
    
    private JDialog dlgUserRole;
    private UserRolesController userRolesController;
    private UserRoleDetails userRoleDetails;
    
    Frame own;
    char functionType;
    boolean modal;
    String userId;
    Vector vecUserData=new Vector();
    
    private static final int WIDTH = 420;
    private static final int HEIGHT =360;
    
    
    /** Creates new form UserRole
     * @param userId user Id
     *@param userName
     *@param modal
     *@component
     */
    public UserRole(Frame own,String userId,String userName,boolean modal){
        this.functionType = 'D';
        initComponents();
        lblUnitName.setText("Roles for   " + userName);
        lblUnitName.setFont(CoeusFontFactory.getLabelFont());
        this.modal = modal;
        this.own = own;
        loadUserRoles(userId);
        postInitComponent();
        display();
    }
    
    /** Loads User Roles for the User Id from UserRolesController
     * @param userId user Id. */
    public void loadUserRoles(String userId) {
        try{
            
            Vector tempVecUserData = null;
            if(userRolesController == null) {
                userRolesController = new UserRolesController();
            }
            
            tempVecUserData = userRolesController.displayUserRolesInfo(userId);
            if (tempVecUserData != null && tempVecUserData.size() > 0) {
                vecUserData = (Vector) tempVecUserData.elementAt(0);;
            }
        } catch(CoeusClientException coeusClientException){
            log(coeusClientException);
        }catch(Exception ex){
            log("Error occurred while loading UserRoles -- " + ex.getMessage());
        }
  
    }
    
    /** This method is called from within the constructor to
     * initialize the form when all data is ready to be displayed.
     */
    
    public void postInitComponent(){
        
        preparePanel(vecUserData);
        scrpnUserRole.setViewportView(getMainPanel());
        dlgUserRole = new CoeusDlgWindow(own,modal);
        dlgUserRole.getContentPane().add(this);
       
        dlgUserRole.addWindowListener(new WindowAdapter(){
              public void windowActivated(WindowEvent evnt)
              {
                    btnOk.setRequestFocusEnabled(true);
                    btnOk.requestFocusInWindow();
               }
            });
    
        dlgUserRole.pack();
        dlgUserRole.setResizable(false);
        dlgUserRole.setTitle("User Roles");
        dlgUserRole.setSize(WIDTH,HEIGHT);
        
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension dlgSize = dlgUserRole.getSize();
        dlgUserRole.setLocation(screenSize.width/2 - (dlgSize.width/2),
        screenSize.height/2 - (dlgSize.height/2));
        dlgUserRole.addKeyListener(new KeyAdapter(){
            public void keyReleased(KeyEvent ke){
                if(ke.getKeyCode() == KeyEvent.VK_ESCAPE){
                    dlgUserRole.dispose();
                }
            }
        });
    }
    
    /*Display the RoleRights Form*/
    public void display() {
        dlgUserRole.show();
    }

    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        pnlDetails = new javax.swing.JPanel();
        lblUnitName = new javax.swing.JLabel();
        btnOk = new javax.swing.JButton();
        scrpnUserRole = new javax.swing.JScrollPane();

        setLayout(new java.awt.BorderLayout());

        setAlignmentX(0.0F);
        setMaximumSize(new java.awt.Dimension(300, 300));
        setMinimumSize(new java.awt.Dimension(300, 300));
        setPreferredSize(new java.awt.Dimension(360, 400));
        pnlDetails.setLayout(new java.awt.GridBagLayout());

        pnlDetails.setMaximumSize(new java.awt.Dimension(350, 310));
        pnlDetails.setMinimumSize(new java.awt.Dimension(350, 310));
        pnlDetails.setPreferredSize(new java.awt.Dimension(350, 310));
        lblUnitName.setFont(CoeusFontFactory.getLabelFont());
        lblUnitName.setText("Roles for");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        pnlDetails.add(lblUnitName, gridBagConstraints);

        btnOk.setFont(CoeusFontFactory.getLabelFont());
        btnOk.setMnemonic('O');
        btnOk.setText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        pnlDetails.add(btnOk, gridBagConstraints);

        scrpnUserRole.setMaximumSize(new java.awt.Dimension(350, 295));
        scrpnUserRole.setMinimumSize(new java.awt.Dimension(350, 295));
        scrpnUserRole.setPreferredSize(new java.awt.Dimension(350, 295));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        pnlDetails.add(scrpnUserRole, gridBagConstraints);

        add(pnlDetails, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents
    
    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        // Add your handling code here:
        dlgUserRole.dispose();
    }//GEN-LAST:event_btnOkActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane scrpnUserRole;
    private javax.swing.JLabel lblUnitName;
    private javax.swing.JPanel pnlDetails;
    private javax.swing.JButton btnOk;
    // End of variables declaration//GEN-END:variables
    
    /**
     *Panel Used to Display all the User Roles
     */
    public  JPanel pnlMainPanel = new JPanel();
    public JPanel getMainPanel() {
        
        return pnlMainPanel;
    }
    
    /*
     *Preparing the panel of roles. Adding child panel to main panel
     *@ param vector of user roles bean
     */
    public void  preparePanel(Vector vecRoleInfoBean) {
        
        pnlMainPanel.setLayout(new BoxLayout(pnlMainPanel, BoxLayout.Y_AXIS));
        UserRoleDetails userRoleDetails;
        Vector vecUnitRoleInfo = new Vector();
        int size = vecRoleInfoBean.size();
        for(int index=0;index<vecRoleInfoBean.size();++index){
            RoleInfoBean roleInfo = (RoleInfoBean)vecRoleInfoBean.elementAt(index);
            String tmpUnitNumber = roleInfo.getUnitNumber();
             vecUnitRoleInfo.addElement(roleInfo);
      
            String nextUnitNumber = (index==(size-1))?
            null:((RoleInfoBean)vecRoleInfoBean.elementAt(index+1)).getUnitNumber();
            if(tmpUnitNumber.trim().equals(nextUnitNumber)){
                continue;
            }
          
            userRoleDetails = new UserRoleDetails(vecUnitRoleInfo);
            pnlMainPanel.add(userRoleDetails.getChildPanel());
            vecUnitRoleInfo.removeAllElements();
        }
        if(!vecUnitRoleInfo.isEmpty()){
            userRoleDetails = new UserRoleDetails(vecUnitRoleInfo);
            pnlMainPanel.add(userRoleDetails.getChildPanel());
        }
    }
    
    /**
     * display alert message
     *
     * @param mesg the message to be displayed
     */
    public void log(String mesg) {
        
        CoeusOptionPane.showErrorDialog(mesg);
    }
    
    /**
     * display alert message
     *
     * @param mesg the message to be displayed
     */
    public void log(CoeusClientException coeusClientException) {
        
        CoeusOptionPane.showDialog(coeusClientException);
    }
    
}