//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.02.13 at 11:23:34 AM EST 
//


package gov.grants.apply.system.globallibrary_v2.impl;

public class AddressDataTypeImpl implements gov.grants.apply.system.globallibrary_v2.AddressDataType, com.sun.xml.bind.JAXBObject, gov.grants.apply.forms.attachments_v1.impl.runtime.UnmarshallableObject, gov.grants.apply.forms.attachments_v1.impl.runtime.XMLSerializable, gov.grants.apply.forms.attachments_v1.impl.runtime.ValidatableObject
{

    protected java.lang.String _Street2;
    protected java.lang.String _ZipPostalCode;
    protected java.lang.String _State;
    protected java.lang.String _Country;
    protected java.lang.String _City;
    protected java.lang.String _Street1;
    protected java.lang.String _Province;
    protected java.lang.String _County;
    public final static java.lang.Class version = (gov.grants.apply.system.globallibrary_v2.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (gov.grants.apply.system.globallibrary_v2.AddressDataType.class);
    }

    public java.lang.String getStreet2() {
        return _Street2;
    }

    public void setStreet2(java.lang.String value) {
        _Street2 = value;
    }

    public java.lang.String getZipPostalCode() {
        return _ZipPostalCode;
    }

    public void setZipPostalCode(java.lang.String value) {
        _ZipPostalCode = value;
    }

    public java.lang.String getState() {
        return _State;
    }

    public void setState(java.lang.String value) {
        _State = value;
    }

    public java.lang.String getCountry() {
        return _Country;
    }

    public void setCountry(java.lang.String value) {
        _Country = value;
    }

    public java.lang.String getCity() {
        return _City;
    }

    public void setCity(java.lang.String value) {
        _City = value;
    }

    public java.lang.String getStreet1() {
        return _Street1;
    }

    public void setStreet1(java.lang.String value) {
        _Street1 = value;
    }

    public java.lang.String getProvince() {
        return _Province;
    }

    public void setProvince(java.lang.String value) {
        _Province = value;
    }

    public java.lang.String getCounty() {
        return _County;
    }

    public void setCounty(java.lang.String value) {
        _County = value;
    }

    public gov.grants.apply.forms.attachments_v1.impl.runtime.UnmarshallingEventHandler createUnmarshaller(gov.grants.apply.forms.attachments_v1.impl.runtime.UnmarshallingContext context) {
        return new gov.grants.apply.system.globallibrary_v2.impl.AddressDataTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(gov.grants.apply.forms.attachments_v1.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://apply.grants.gov/system/GlobalLibrary-V2.0", "Street1");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _Street1), "Street1");
        } catch (java.lang.Exception e) {
            gov.grants.apply.forms.attachments_v1.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (_Street2 != null) {
            context.startElement("http://apply.grants.gov/system/GlobalLibrary-V2.0", "Street2");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Street2), "Street2");
            } catch (java.lang.Exception e) {
                gov.grants.apply.forms.attachments_v1.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        context.startElement("http://apply.grants.gov/system/GlobalLibrary-V2.0", "City");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _City), "City");
        } catch (java.lang.Exception e) {
            gov.grants.apply.forms.attachments_v1.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (_County!= null) {
            context.startElement("http://apply.grants.gov/system/GlobalLibrary-V2.0", "County");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _County), "County");
            } catch (java.lang.Exception e) {
                gov.grants.apply.forms.attachments_v1.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if ((_Province == null)&&(_State!= null)) {
            context.startElement("http://apply.grants.gov/system/GlobalLibrary-V2.0", "State");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _State), "State");
            } catch (java.lang.Exception e) {
                gov.grants.apply.forms.attachments_v1.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        } else {
            if ((_Province!= null)&&(_State == null)) {
                context.startElement("http://apply.grants.gov/system/GlobalLibrary-V2.0", "Province");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _Province), "Province");
                } catch (java.lang.Exception e) {
                    gov.grants.apply.forms.attachments_v1.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
        }
        if (_ZipPostalCode!= null) {
            context.startElement("http://apply.grants.gov/system/GlobalLibrary-V2.0", "ZipPostalCode");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _ZipPostalCode), "ZipPostalCode");
            } catch (java.lang.Exception e) {
                gov.grants.apply.forms.attachments_v1.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        context.startElement("http://apply.grants.gov/system/GlobalLibrary-V2.0", "Country");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _Country), "Country");
        } catch (java.lang.Exception e) {
            gov.grants.apply.forms.attachments_v1.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
    }

    public void serializeAttributes(gov.grants.apply.forms.attachments_v1.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(gov.grants.apply.forms.attachments_v1.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (gov.grants.apply.system.globallibrary_v2.AddressDataType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnam"
+"eClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gram"
+"mar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcon"
+"tentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006excep"
+"tq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\'com"
+".sun.msv.datatype.xsd.MaxLengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\tmaxLengthx"
+"r\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet"
+"\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lc"
+"om/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lco"
+"m/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNamet\u0000\u0012Ljava/lan"
+"g/String;xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u0019L\u0000\btypeNameq\u0000~\u0000\u0019L\u0000\nwhiteSpacet\u0000.Lcom/"
+"sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u00001http://apply.g"
+"rants.gov/system/GlobalLibrary-V2.0t\u0000\u000eStreetDataTypesr\u00005com."
+"sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"p\u0000\u0001sr\u0000\'com.sun.msv.datatype.xsd.MinLengthFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\t"
+"minLengthxq\u0000~\u0000\u0015q\u0000~\u0000\u001dq\u0000~\u0000\u001eq\u0000~\u0000!\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd"
+".StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.dataty"
+"pe.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype."
+"xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001at\u0000 http://www.w3.org/2001/X"
+"MLSchemat\u0000\u0006stringq\u0000~\u0000!\u0001q\u0000~\u0000\'t\u0000\tminLength\u0000\u0000\u0000\u0001q\u0000~\u0000\'t\u0000\tmaxLengt"
+"h\u0000\u0000\u00007sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000"
+"\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~\u0000\u0019xpq\u0000~\u0000\u001eq\u0000~\u0000\u001dsr\u0000\u001dcom.sun.m"
+"sv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.gramm"
+"ar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003"
+"sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0010ppsr\u0000\"com."
+"sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000%q\u0000~\u0000(t\u0000\u0005QName"
+"sr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000 q\u0000~\u0000-sq\u0000~\u0000.q\u0000~\u00009q\u0000~\u0000(sr\u0000#com.sun.msv.grammar.S"
+"impleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0019L\u0000\fnamespaceURIq\u0000~"
+"\u0000\u0019xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)ht"
+"tp://www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.gramm"
+"ar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u00004\u0001q\u0000~\u0000C"
+"sq\u0000~\u0000=t\u0000\u0007Street1q\u0000~\u0000\u001dsq\u0000~\u00000ppsq\u0000~\u0000\u000bq\u0000~\u00005p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0013sq\u0000~\u0000"
+"0ppsq\u0000~\u00002q\u0000~\u00005pq\u0000~\u00006q\u0000~\u0000?q\u0000~\u0000Csq\u0000~\u0000=t\u0000\u0007Street2q\u0000~\u0000\u001dq\u0000~\u0000Csq\u0000~"
+"\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0014q\u0000~\u0000\u001dt\u0000\fCityDataTypeq\u0000~\u0000!\u0000\u0001sq\u0000~\u0000\""
+"q\u0000~\u0000\u001dq\u0000~\u0000Rq\u0000~\u0000!\u0000\u0000q\u0000~\u0000\'q\u0000~\u0000\'q\u0000~\u0000*\u0000\u0000\u0000\u0001q\u0000~\u0000\'q\u0000~\u0000+\u0000\u0000\u0000#q\u0000~\u0000-sq\u0000~\u0000"
+".q\u0000~\u0000Rq\u0000~\u0000\u001dsq\u0000~\u00000ppsq\u0000~\u00002q\u0000~\u00005pq\u0000~\u00006q\u0000~\u0000?q\u0000~\u0000Csq\u0000~\u0000=t\u0000\u0004Cityq"
+"\u0000~\u0000\u001dsq\u0000~\u00000ppsq\u0000~\u0000\u000bq\u0000~\u00005p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0014q\u0000~\u0000\u001dt\u0000\u000eCount"
+"yDataTypeq\u0000~\u0000!\u0000\u0001sq\u0000~\u0000\"q\u0000~\u0000\u001dq\u0000~\u0000^q\u0000~\u0000!\u0000\u0000q\u0000~\u0000\'q\u0000~\u0000\'q\u0000~\u0000*\u0000\u0000\u0000\u0001q\u0000"
+"~\u0000\'q\u0000~\u0000+\u0000\u0000\u0000\u001eq\u0000~\u0000-sq\u0000~\u0000.q\u0000~\u0000^q\u0000~\u0000\u001dsq\u0000~\u00000ppsq\u0000~\u00002q\u0000~\u00005pq\u0000~\u00006q\u0000"
+"~\u0000?q\u0000~\u0000Csq\u0000~\u0000=t\u0000\u0006Countyq\u0000~\u0000\u001dq\u0000~\u0000Csq\u0000~\u00000ppsq\u0000~\u00000ppsq\u0000~\u0000\u000bq\u0000~\u00005"
+"p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0010ppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFa"
+"cet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xq\u0000~\u0000\u0015t\u00002http://app"
+"ly.grants.gov/system/UniversalCodes-V2.0t\u0000\u0011StateCodeDataType"
+"q\u0000~\u0000!\u0000\u0000q\u0000~\u0000\'q\u0000~\u0000\'t\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74"
+"\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0080?@\u0000\u0000\u0000\u0000\u0000Gt\u0000\u000bWY: Wyomingt\u0000\u000fWQ: Wake Islandt\u0000\u000fPR: Pu"
+"erto Ricot\u0000\u000eCA: Californiat\u0000\u0012JQ: Johnston Atollt\u0000\nKS: Kansas"
+"t\u0000\u001ePS: Trust Territory of Pacifict\u0000\u0014MH: Marshall Islandst\u0000\u000fC"
+"T: Connecticutt\u0000\fMD: Marylandt\u0000\tPW: Palaut\u0000+AE: APO/FPO Euro"
+"pe, Middle East, and Africat\u0000\u000eNM: New Mexicot\u0000\nOR: Oregont\u0000\f"
+"AR: Arkansast\u0000\u001eVI: Virgin Islands of the U.S.t\u0000\u0010KQ: Kingman "
+"Reeft\u0000\rTN: Tennesseet\u0000\u000eWA: Washingtont\u00004AP: APO/FPO Korea, J"
+"apan, Philippines, Other Pacifict\u0000\u000fMS: Mississippit\u0000\nAK: Ala"
+"skat\u0000\u000eNJ: New Jerseyt\u0000\"FM: Federated States of Micronesiat\u0000\f"
+"KY: Kentuckyt\u0000\tID: Idahot\u0000\bOH: Ohiot\u0000\rMN: Minnesotat\u0000\u0012NC: No"
+"rth Carolinat\u0000\nNV: Nevadat\u0000\bIA: Iowat\u0000\u0010RI: Rhode Islandt\u0000\u000bFL"
+": Floridat\u0000\u0010FQ: Baker Islandt\u0000\fMO: Missourit\u0000\nHI: Hawaiit\u0000\bU"
+"T: Utaht\u0000\fNE: Nebraskat\u0000\u0011WV: West Virginiat\u0000\tME: Mainet\u0000\u000bVT:"
+" Vermontt\u0000\u0012BQ: Navassa Islandt\u0000\u000bIN: Indianat\u0000\fIL: Illinoist\u0000"
+"\u0011HQ: Howard Islandt\u0000\rWI: Wisconsint\u0000\fDE: Delawaret\u0000\u000bAZ: Ariz"
+"onat\u0000\u0011LQ: Palmyra Atollt\u0000\u001cMP: Northern Mariana Islandst\u0000\u0010PA:"
+" Pennsylvaniat\u0000%AA: APO/FPO Central and South Americat\u0000\fNY: "
+"New Yorkt\u0000\u000bAL: Alabamat\u0000\fVA: Virginiat\u0000\tTX: Texast\u0000\u0010ND: Nort"
+"h Dakotat\u0000\u0012MQ: Midway Islandst\u0000\fOK: Oklahomat\u0000\u0011MA: Massachus"
+"ettst\u0000\u0011NH: New Hampshiret\u0000\bGU: Guamt\u0000\u0012SC: South Carolinat\u0000\u000bM"
+"T: Montanat\u0000\u0018DC: District of Columbiat\u0000\u000bGA: Georgiat\u0000\fMI: Mi"
+"chigant\u0000\u0010SD: South Dakotat\u0000\fCO: Coloradot\u0000\u0012AS: American Samo"
+"at\u0000\rLA: Louisianaxq\u0000~\u0000-sq\u0000~\u0000.q\u0000~\u0000nq\u0000~\u0000msq\u0000~\u00000ppsq\u0000~\u00002q\u0000~\u00005pq"
+"\u0000~\u00006q\u0000~\u0000?q\u0000~\u0000Csq\u0000~\u0000=t\u0000\u0005Stateq\u0000~\u0000\u001dq\u0000~\u0000Csq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000"
+"\u0010ppsq\u0000~\u0000\u0014q\u0000~\u0000\u001dt\u0000\u0010ProvinceDataTypeq\u0000~\u0000!\u0000\u0001sq\u0000~\u0000\"q\u0000~\u0000\u001dq\u0000~\u0000\u00c2q\u0000~\u0000"
+"!\u0000\u0000q\u0000~\u0000\'q\u0000~\u0000\'q\u0000~\u0000*\u0000\u0000\u0000\u0001q\u0000~\u0000\'q\u0000~\u0000+\u0000\u0000\u0000\u001eq\u0000~\u0000-sq\u0000~\u0000.q\u0000~\u0000\u00c2q\u0000~\u0000\u001dsq\u0000"
+"~\u00000ppsq\u0000~\u00002q\u0000~\u00005pq\u0000~\u00006q\u0000~\u0000?q\u0000~\u0000Csq\u0000~\u0000=t\u0000\bProvinceq\u0000~\u0000\u001dsq\u0000~\u00000"
+"ppsq\u0000~\u0000\u000bq\u0000~\u00005p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0014q\u0000~\u0000\u001dt\u0000\u0015ZipPostalCodeDa"
+"taTypeq\u0000~\u0000!\u0000\u0001sq\u0000~\u0000\"q\u0000~\u0000\u001dq\u0000~\u0000\u00ceq\u0000~\u0000!\u0000\u0000q\u0000~\u0000\'q\u0000~\u0000\'q\u0000~\u0000*\u0000\u0000\u0000\u0001q\u0000~\u0000\'"
+"q\u0000~\u0000+\u0000\u0000\u0000\u001eq\u0000~\u0000-sq\u0000~\u0000.q\u0000~\u0000\u00ceq\u0000~\u0000\u001dsq\u0000~\u00000ppsq\u0000~\u00002q\u0000~\u00005pq\u0000~\u00006q\u0000~\u0000?"
+"q\u0000~\u0000Csq\u0000~\u0000=t\u0000\rZipPostalCodeq\u0000~\u0000\u001dq\u0000~\u0000Csq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0010"
+"ppsq\u0000~\u0000jq\u0000~\u0000mt\u0000\u0013CountryCodeDataTypeq\u0000~\u0000!\u0000\u0000q\u0000~\u0000\'q\u0000~\u0000\'q\u0000~\u0000osq\u0000"
+"~\u0000pw\f\u0000\u0000\u0002\u0000?@\u0000\u0000\u0000\u0000\u0000\u00e8t\u0000\u0019ARE: UNITED ARAB EMIRATESt\u0000\tNIU: NIUEt\u0000\u0012"
+"FRO: FAROE ISLANDSt\u0000\nCHL: CHILEt\u0000\nNRU: NAURUt\u0000\u000bGUY: GUYANAt\u0000"
+"\fDEU: GERMANYt\u0000\fBOL: BOLIVIAt\u0000\rPAK: PAKISTANt\u0000\u000bMCO: MONACOt\u0000"
+"\u0018TTO: TRINIDAD AND TOBAGOt\u0000\fLSO: LESOTHOt\u0000\nQAT: QATARt\u0000\nABW:"
+" ARUBAt\u0000\rZWE: ZIMBABWEt\u0000\u0012GUF: FRENCH GUIANAt\u0000\fMYT: MAYOTTEt\u0000"
+"\u000fMDG: MADAGASCARt\u0000\fERI: ERITREAt\u0000 COG: CONGO, People\'s Repub"
+"lic oft\u0000\fVUT: VANUATUt\u0000\nTON: TONGAt\u0000\rSVN: SLOVENIAt\u0000\u000fCRI: CO"
+"STA RICAt\u0000\tMLI: MALIt\u0000\u000bCYP: CYPRUSt\u0000\u000bBRA: BRAZILt\u0000\u000bTWN: TAIW"
+"ANt\u0000\u000eGTM: GUATEMALAt\u0000\nNPL: NEPALt\u0000\fTKL: TOKELAUt\u0000\u000eLKA: SRI L"
+"ANKAt\u0000\u000bMEX: MEXICOt\u0000\u000eSWZ: SWAZILANDt\u0000\u0012NCL: NEW CALEDONIAt\u0000\fH"
+"UN: HUNGARYt\u0000\u000eVEN: VENEZUELAt\u0000\fBEL: BELGIUMt\u0000\fALB: ALBANIAt\u0000"
+"\u0010NZL: NEW ZEALANDt\u0000\rCOL: COLOMBIAt\u0000\u000bUGA: UGANDAt\u0000\u0011TKM: TURKM"
+"ENISTANt\u0000\nJPN: JAPANt\u0000\u0015PNG: PAPUA NEW GUINEAt\u0000\u000fAZE: AZERBAIJ"
+"ANt\u0000\u000bMWI: MALAWIt\u0000\rVNM: VIET NAMt\u0000\u0014SLB: SOLOMON ISLANDSt\u0000\fTU"
+"N: TUNISIAt\u0000\u001bBIH: BOSNIA AND HERZEGOWINAt\u00001SGS: SOUTH GEORGI"
+"A AND THE SOUTH SANDWICH ISLANDSt\u0000\nEGY: EGYPTt\u0000\u001dVGB: VIRGIN "
+"ISLANDS (BRITISH)t\u0000\fARM: ARMENIAt\u0000\nWSM: SAMOAt\u0000\u000eAUS: AUSTRAL"
+"IAt\u0000\u000bLVA: LATVIAt\u0000\u0011COK: COOK ISLANDSt\u0000\fBHR: BAHRAINt\u0000\u0019SYR: S"
+"YRIAN ARAB REPUBLICt\u0000\fJAM: JAMAICAt\u0000\u0017DOM: DOMINICAN REPUBLIC"
+"t\u0000!TZA: TANZANIA, UNITED REPUBLIC OFt\u0000\fAUT: AUSTRIAt\u0000\u0019FXX: F"
+"RANCE, METROPOLITANt\u0000\u000fSHN: ST. HELENAt\u0000\fBMU: BERMUDAt\u0000\fREU: "
+"REUNIONt\u0000\u0013CZE: CZECH REPUBLICt\u0000\fROU: ROMANIAt\u0000\u0012CIV: COTE D\'I"
+"VOIREt\u0000\u000fSYC: SEYCHELLESt\u0000\u000bISR: ISRAELt\u0000\fBHS: BAHAMASt\u0000\u000bSWE: "
+"SWEDENt\u0000 FLK: FALKLAND ISLANDS (MALVINAS)t\u0000\tTCD: CHADt\u0000\u0011BFA:"
+" BURKINA FASOt\u0000\u000fATA: ANTARCTICAt\u0000\fURY: URUGUAYt\u0000%LAO: LAO PE"
+"OPLE\'S DEMOCRATIC REPUBLICt\u0000\u000bBTN: BHUTANt\u0000\u000eARG: ARGENTINAt\u0000\r"
+"DMA: DOMINICAt\u0000#IOT: BRITISH INDIAN OCEAN TERRITORYt\u0000\u000bKWT: K"
+"UWAITt\u0000\u000eHKG: HONG KONGt\u0000\fNAM: NAMIBIAt\u0000\u0011SAU: SAUDI ARABIAt\u0000\u000b"
+"TUR: TURKEYt\u0000\u000bBLZ: BELIZEt\u0000\nSDN: SUDANt\u0000\u000fMOZ: MOZAMBIQUEt\u0000\u0010C"
+"HE: SWITZERLANDt\u0000.COD: CONGO, Democratic Republic of (was Za"
+"ire)t\u0000\rETH: ETHIOPIAt\u0000\u000bNOR: NORWAYt\u0000 ATF: FRENCH SOUTHERN TE"
+"RRITORIESt\u0000\u000fMTQ: MARTINIQUEt\u0000\u000fKGZ: KYRGYZSTANt\u0000\rBWA: BOTSWAN"
+"At\u0000\u000bZMB: ZAMBIAt\u0000\u001bLBY: LIBYAN ARAB JAMAHIRIYAt\u0000\nGAB: GABONt\u0000"
+"\u0013NFK: NORFOLK ISLANDt\u0000\u001cCCK: COCOS (KEELING) ISLANDSt\u0000\fSEN: S"
+"ENEGALt\u0000\u0013CYM: CAYMAN ISLANDSt\u0000\u000fCPV: CAPE VERDEt\u0000\fLBR: LIBERI"
+"At\u0000\u0010PHL: PHILIPPINESt\u0000\fLBN: LEBANONt\u0000\fBLR: BELARUSt\u0000\u0017KOR: KO"
+"REA, REPUBLIC OFt\u0000\u0011SLE: SIERRA LEONEt\u0000\u001dCAF: CENTRAL AFRICAN "
+"REPUBLICt\u0000\fIRL: IRELANDt\u0000\u001aKNA: SAINT KITTS AND NEVISt\u0000\fGEO: "
+"GEORGIAt\u0000\tTGO: TOGOt\u0000\u000fKAZ: KAZAKHSTANt\u0000\u0012USA: UNITED STATESt\u0000"
+"\u000bRWA: RWANDAt\u0000\rHND: HONDURASt\u0000/MKD: MACEDONIA, THE FORMER YU"
+"GOSLAV REPUBLIC OFt\u0000\fFIN: FINLANDt\u0000\u000fMRT: MAURITANIAt\u0000\u0015PYF: F"
+"RENCH POLYNESIAt\u0000$PSE: PALESTINIAN TERRITORY, Occupiedt\u0000\u000fYUG"
+": YUGOSLAVIAt\u0000\fNGA: NIGERIAt\u0000\u000fMSR: MONTSERRATt\u0000\nESP: SPAINt\u0000"
+"\u000bGRC: GREECEt\u0000\rMYS: MALAYSIAt\u0000\u0010LCA: SAINT LUCIAt\u0000\u0011ZAF: SOUTH"
+" AFRICAt\u0000\u0016BRN: BRUNEI DARUSSALAMt\u0000\nMLT: MALTAt\u0000\nCHN: CHINAt\u0000"
+"\nYEM: YEMENt\u0000\fSOM: SOMALIAt\u0000\nHTI: HAITIt\u0000\u000eMUS: MAURITIUSt\u0000\fM"
+"MR: MYANMARt\u0000\u0017RUS: RUSSIAN FEDERATIONt\u0000\u000fUZB: UZBEKISTANt\u0000\u0010AF"
+"G: AFGHANISTANt\u0000\rDJI: DJIBOUTIt\u0000#HRV: CROATIA (local name: H"
+"rvatska)t\u0000\u000eNIC: NICARAGUAt\u0000\u000bCAN: CANADAt\u0000\tPER: PERUt\u0000\fEST: E"
+"STONIAt\u0000\u000eGIB: GIBRALTARt\u0000\fDNK: DENMARKt\u0000\tFJI: FIJIt\u0000\u0018ATG: AN"
+"TIGUA AND BARBUDAt\u0000\u0013GBR: UNITED KINGDOMt\u0000\rSUR: SURINAMEt\u0000\rKI"
+"R: KIRIBATIt\u0000\tIRQ: IRAQt\u0000\fAND: ANDORRAt\u0000\fUKR: UKRAINEt\u0000%VCT:"
+" SAINT VINCENT AND THE GRENADINESt\u0000\nITA: ITALYt\u0000\fBDI: BURUND"
+"It\u0000\nMAC: MACAUt\u0000+PRK: KOREA, DEMOCRATIC PEOPLE\'S REPUBLIC OF"
+"t\u0000\u000fBGD: BANGLADESHt\u0000\u0012GNB: GUINEA-BISSAUt\u0000\nBEN: BENINt\u0000\rAIA: "
+"ANGUILLAt\u0000\rBGR: BULGARIAt\u0000\u001dTCA: TURKS AND CAICOS ISLANDSt\u0000\nG"
+"HA: GHANAt\u0000\fECU: ECUADORt\u0000\u0010NLD: NETHERLANDSt\u0000\rKHM: CAMBODIAt"
+"\u0000\u000bTUV: TUVALUt\u0000\rMDV: MALDIVESt\u0000\u000eGRL: GREENLANDt\u0000\u001cSPM: ST. PI"
+"ERRE AND MIQUELONt\u0000\fCOM: COMOROSt\u0000\fISL: ICELANDt\u0000\rPCN: PITCA"
+"IRNt\u0000\u000eIDN: INDONESIAt\u0000\u000bPOL: POLANDt\u0000\u0013ESH: WESTERN SAHARAt\u0000 H"
+"MD: HEARD AND MC DONALD ISLANDSt\u0000\u0012BVT: BOUVET ISLANDt\u0000\u000fGLP: "
+"GUADELOUPEt\u0000\u000fTJK: TAJIKISTANt\u0000\u000fSMR: SAN MARINOt\u0000\rPRT: PORTUG"
+"ALt\u0000\rTHA: THAILANDt\u0000\u001aSTP: SAO TOME AND PRINCIPEt\u0000\u000eLTU: LITHU"
+"ANIAt\u0000#SJM: SVALBARD AND JAN MAYEN ISLANDSt\u0000\u0010SLV: EL SALVADO"
+"Rt\u0000\tOMN: OMANt\u0000\rBRB: BARBADOSt\u0000\u001eWLF: WALLIS AND FUTUNA ISLAN"
+"DSt\u0000\"VAT: VATICAN CITY STATE (HOLY SEE)t\u0000\u0015CXR: CHRISTMAS ISL"
+"ANDt\u0000\nKEN: KENYAt\u0000\u0016GNQ: EQUATORIAL GUINEAt\u0000\u000bGMB: GAMBIAt\u0000\rMN"
+"G: MONGOLIAt\u0000\tCUB: CUBAt\u0000\u001fSVK: SLOVAKIA (Slovak Republic)t\u0000\u0019"
+"MDA: MOLDOVA, REPUBLIC OFt\u0000\u000bPAN: PANAMAt\u0000\u000bFRA: FRANCEt\u0000\fDZA:"
+" ALGERIAt\u0000\u000fTLS: EAST TIMORt\u0000\u000bAGO: ANGOLAt\u0000\u0019ANT: NETHERLANDS "
+"ANTILLESt\u0000\u0012LIE: LIECHTENSTEINt\u0000\fMAR: MOROCCOt\u0000\u000bGIN: GUINEAt\u0000"
+"\nNER: NIGERt\u0000\u000bJOR: JORDANt\u0000\rCMR: CAMEROONt\u0000\fGRD: GRENADAt\u0000\rP"
+"RY: PARAGUAYt\u0000\nIND: INDIAt\u0000\u000eSGP: SINGAPOREt\u0000)UMI: UNITED STA"
+"TES MINOR OUTLYING ISLANDSt\u0000\u001fIRN: IRAN (ISLAMIC REPUBLIC OF)"
+"t\u0000\u000fLUX: LUXEMBOURGxq\u0000~\u0000-sq\u0000~\u0000.q\u0000~\u0000\u00d9q\u0000~\u0000msq\u0000~\u00000ppsq\u0000~\u00002q\u0000~\u00005p"
+"q\u0000~\u00006q\u0000~\u0000?q\u0000~\u0000Csq\u0000~\u0000=t\u0000\u0007Countryq\u0000~\u0000\u001dsr\u0000\"com.sun.msv.grammar."
+"ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/"
+"ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expressi"
+"onPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006paren"
+"tt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u001b\u0001pq\u0000~\u0000hq\u0000~\u0000Oq\u0000"
+"~\u0000\u00c9q\u0000~\u0000eq\u0000~\u0000\bq\u0000~\u0000\u00d6q\u0000~\u0000fq\u0000~\u0000\u0005q\u0000~\u0000\u000fq\u0000~\u0000Iq\u0000~\u0000Yq\u0000~\u0000\u00cbq\u0000~\u0000\u0007q\u0000~\u0000\u0006q\u0000"
+"~\u0000\tq\u0000~\u00001q\u0000~\u0000Jq\u0000~\u0000Uq\u0000~\u0000aq\u0000~\u0000\u00baq\u0000~\u0000\u00c5q\u0000~\u0000\u00d1q\u0000~\u0001\u00c4q\u0000~\u0000Gq\u0000~\u0000\nq\u0000~\u0000[q\u0000"
+"~\u0000\u00bfx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends gov.grants.apply.forms.attachments_v1.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(gov.grants.apply.forms.attachments_v1.impl.runtime.UnmarshallingContext context) {
            super(context, "------------------------");
        }

        protected Unmarshaller(gov.grants.apply.forms.attachments_v1.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return gov.grants.apply.system.globallibrary_v2.impl.AddressDataTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        if (("City" == ___local)&&("http://apply.grants.gov/system/GlobalLibrary-V2.0" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        break;
                    case  21 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  15 :
                        if (("ZipPostalCode" == ___local)&&("http://apply.grants.gov/system/GlobalLibrary-V2.0" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  0 :
                        if (("Street1" == ___local)&&("http://apply.grants.gov/system/GlobalLibrary-V2.0" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        break;
                    case  3 :
                        if (("Street2" == ___local)&&("http://apply.grants.gov/system/GlobalLibrary-V2.0" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  18 :
                        if (("Country" == ___local)&&("http://apply.grants.gov/system/GlobalLibrary-V2.0" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        break;
                    case  9 :
                        if (("County" == ___local)&&("http://apply.grants.gov/system/GlobalLibrary-V2.0" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  12 :
                        if (("State" == ___local)&&("http://apply.grants.gov/system/GlobalLibrary-V2.0" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        if (("Province" == ___local)&&("http://apply.grants.gov/system/GlobalLibrary-V2.0" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 15;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  23 :
                        if (("Province" == ___local)&&("http://apply.grants.gov/system/GlobalLibrary-V2.0" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  21 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  2 :
                        if (("Street1" == ___local)&&("http://apply.grants.gov/system/GlobalLibrary-V2.0" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("City" == ___local)&&("http://apply.grants.gov/system/GlobalLibrary-V2.0" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  20 :
                        if (("Country" == ___local)&&("http://apply.grants.gov/system/GlobalLibrary-V2.0" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("Street2" == ___local)&&("http://apply.grants.gov/system/GlobalLibrary-V2.0" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  17 :
                        if (("ZipPostalCode" == ___local)&&("http://apply.grants.gov/system/GlobalLibrary-V2.0" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  11 :
                        if (("County" == ___local)&&("http://apply.grants.gov/system/GlobalLibrary-V2.0" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("State" == ___local)&&("http://apply.grants.gov/system/GlobalLibrary-V2.0" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  21 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  21 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  13 :
                            state = 14;
                            eatText1(value);
                            return ;
                        case  21 :
                            revertToParentFromText(value);
                            return ;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  16 :
                            state = 17;
                            eatText2(value);
                            return ;
                        case  1 :
                            state = 2;
                            eatText3(value);
                            return ;
                        case  7 :
                            state = 8;
                            eatText4(value);
                            return ;
                        case  22 :
                            state = 23;
                            eatText5(value);
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  4 :
                            state = 5;
                            eatText6(value);
                            return ;
                        case  19 :
                            state = 20;
                            eatText7(value);
                            return ;
                        case  10 :
                            state = 11;
                            eatText8(value);
                            return ;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  12 :
                            state = 15;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _State = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ZipPostalCode = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Street1 = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _City = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Province = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Street2 = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Country = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _County = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
