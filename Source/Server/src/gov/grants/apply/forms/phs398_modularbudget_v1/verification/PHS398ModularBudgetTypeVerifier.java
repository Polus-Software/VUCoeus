//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.02.13 at 11:23:34 AM EST 
//


package gov.grants.apply.forms.phs398_modularbudget_v1.verification;

public class PHS398ModularBudgetTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
{


    public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType master) {
        if (null == master.getFormVersion()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormVersion"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkFormVersion(parentLocator, handler, master, master.getFormVersion());
        }
        if (null!= master.getPeriods()) {
            // If left exists
            if (null == master.getPeriods()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkPeriods(parentLocator, handler, master, master.getPeriods());
            }
        }
        if (null!= master.getPeriods2()) {
            // If left exists
            if (null == master.getPeriods2()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkPeriods2(parentLocator, handler, master, master.getPeriods2());
            }
        }
        if (null!= master.getPeriods3()) {
            // If left exists
            if (null == master.getPeriods3()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkPeriods3(parentLocator, handler, master, master.getPeriods3());
            }
        }
        if (null!= master.getPeriods4()) {
            // If left exists
            if (null == master.getPeriods4()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkPeriods4(parentLocator, handler, master, master.getPeriods4());
            }
        }
        if (null!= master.getPeriods5()) {
            // If left exists
            if (null == master.getPeriods5()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkPeriods5(parentLocator, handler, master, master.getPeriods5());
            }
        }
        if (null == master.getCummulativeBudgetInfo()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CummulativeBudgetInfo"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkCummulativeBudgetInfo(parentLocator, handler, master, master.getCummulativeBudgetInfo());
        }
    }

    public void checkPeriods5(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType master, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type value) {
        if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type) {
            gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type) value);
            {
                // Check complex value
                gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods5TypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods5TypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Periods5"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Periods5"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkFormVersion(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (((null == realValue)? 0 :realValue.length())>= 1) {
                    // Value length is correct
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1);
                }
                if (((null == realValue)? 0 :realValue.length())<= 30) {
                    // Value length is correct
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 30);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormVersion"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormVersion"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkCummulativeBudgetInfo(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType master, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType value) {
        if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType) {
            gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType) value);
            {
                // Check complex value
                gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.CummulativeBudgetInfoTypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.CummulativeBudgetInfoTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CummulativeBudgetInfo"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CummulativeBudgetInfo"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkPeriods4(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType master, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type value) {
        if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type) {
            gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type) value);
            {
                // Check complex value
                gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods4TypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods4TypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Periods4"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Periods4"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkPeriods2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType master, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type value) {
        if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type) {
            gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type) value);
            {
                // Check complex value
                gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods2TypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods2TypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Periods2"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Periods2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkPeriods3(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType master, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type value) {
        if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type) {
            gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type) value);
            {
                // Check complex value
                gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods3TypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods3TypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Periods3"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Periods3"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkPeriods(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType master, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType value) {
        if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType) {
            gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType) value);
            {
                // Check complex value
                gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.PeriodsTypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.PeriodsTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Periods"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Periods"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
        check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType) object));
    }

    public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
        check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType) object));
    }

    public static class CummulativeBudgetInfoTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {


        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType master) {
            if (null == master.getEntirePeriodTotalCost()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "EntirePeriodTotalCost"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkEntirePeriodTotalCost(parentLocator, handler, master, master.getEntirePeriodTotalCost());
            }
            if (null!= master.getBudgetJustifications()) {
                // If left exists
                if (null == master.getBudgetJustifications()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkBudgetJustifications(parentLocator, handler, master, master.getBudgetJustifications());
                }
            }
        }

        public void checkEntirePeriodTotalCost(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType master, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.EntirePeriodTotalCostType value) {
            if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.EntirePeriodTotalCostType) {
                gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.EntirePeriodTotalCostType realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.EntirePeriodTotalCostType) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.CummulativeBudgetInfoTypeVerifier.EntirePeriodTotalCostTypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.CummulativeBudgetInfoTypeVerifier.EntirePeriodTotalCostTypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "EntirePeriodTotalCost"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "EntirePeriodTotalCost"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkBudgetJustifications(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType master, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType value) {
            if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType) {
                gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.CummulativeBudgetInfoTypeVerifier.BudgetJustificationsTypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.CummulativeBudgetInfoTypeVerifier.BudgetJustificationsTypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetJustifications"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetJustifications"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType) object));
        }

        public static class BudgetJustificationsTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {


            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType master) {
                if (null!= master.getPersonnelJustification()) {
                    // If left exists
                    if (null == master.getPersonnelJustification()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkPersonnelJustification(parentLocator, handler, master, master.getPersonnelJustification());
                    }
                }
                if (null!= master.getConsortiumJustification()) {
                    // If left exists
                    if (null == master.getConsortiumJustification()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkConsortiumJustification(parentLocator, handler, master, master.getConsortiumJustification());
                    }
                }
                if (null!= master.getAdditionalNarrativeJustification()) {
                    // If left exists
                    if (null == master.getAdditionalNarrativeJustification()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkAdditionalNarrativeJustification(parentLocator, handler, master, master.getAdditionalNarrativeJustification());
                    }
                }
            }

            public void checkPersonnelJustification(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType master, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType.PersonnelJustificationType value) {
                if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType.PersonnelJustificationType) {
                    gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType.PersonnelJustificationType realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType.PersonnelJustificationType) value);
                    {
                        // Check complex value
                        gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.CummulativeBudgetInfoTypeVerifier.BudgetJustificationsTypeVerifier.PersonnelJustificationTypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.CummulativeBudgetInfoTypeVerifier.BudgetJustificationsTypeVerifier.PersonnelJustificationTypeVerifier();
                        verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "PersonnelJustification"), handler, realValue);
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "PersonnelJustification"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkAdditionalNarrativeJustification(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType master, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType.AdditionalNarrativeJustificationType value) {
                if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType.AdditionalNarrativeJustificationType) {
                    gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType.AdditionalNarrativeJustificationType realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType.AdditionalNarrativeJustificationType) value);
                    {
                        // Check complex value
                        gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.CummulativeBudgetInfoTypeVerifier.BudgetJustificationsTypeVerifier.AdditionalNarrativeJustificationTypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.CummulativeBudgetInfoTypeVerifier.BudgetJustificationsTypeVerifier.AdditionalNarrativeJustificationTypeVerifier();
                        verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AdditionalNarrativeJustification"), handler, realValue);
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AdditionalNarrativeJustification"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkConsortiumJustification(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType master, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType.ConsortiumJustificationType value) {
                if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType.ConsortiumJustificationType) {
                    gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType.ConsortiumJustificationType realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType.ConsortiumJustificationType) value);
                    {
                        // Check complex value
                        gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.CummulativeBudgetInfoTypeVerifier.BudgetJustificationsTypeVerifier.ConsortiumJustificationTypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.CummulativeBudgetInfoTypeVerifier.BudgetJustificationsTypeVerifier.ConsortiumJustificationTypeVerifier();
                        verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ConsortiumJustification"), handler, realValue);
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ConsortiumJustification"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType) object));
            }

            public static class AdditionalNarrativeJustificationTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
            {


                public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType.AdditionalNarrativeJustificationType master) {
                    if (null == master.getAttFile()) {
                        // Report missing object
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AttFile"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                    } else {
                        // Check value
                        checkAttFile(parentLocator, handler, master, master.getAttFile());
                    }
                }

                public void checkAttFile(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType.AdditionalNarrativeJustificationType master, gov.grants.apply.system.attachments_v1.AttachedFileDataType value) {
                    if (value instanceof gov.grants.apply.system.attachments_v1.AttachedFileDataType) {
                        gov.grants.apply.system.attachments_v1.AttachedFileDataType realValue = ((gov.grants.apply.system.attachments_v1.AttachedFileDataType) value);
                        {
                            // Check complex value
                            gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier verifier = new gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier();
                            verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AttFile"), handler, realValue);
                        }
                    } else {
                        if (null == value) {
                        } else {
                            // Report wrong class
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AttFile"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                        }
                    }
                }

                public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                    check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType.AdditionalNarrativeJustificationType) object));
                }

                public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                    check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType.AdditionalNarrativeJustificationType) object));
                }

            }

            public static class ConsortiumJustificationTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
            {


                public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType.ConsortiumJustificationType master) {
                    if (null == master.getAttFile()) {
                        // Report missing object
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AttFile"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                    } else {
                        // Check value
                        checkAttFile(parentLocator, handler, master, master.getAttFile());
                    }
                }

                public void checkAttFile(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType.ConsortiumJustificationType master, gov.grants.apply.system.attachments_v1.AttachedFileDataType value) {
                    if (value instanceof gov.grants.apply.system.attachments_v1.AttachedFileDataType) {
                        gov.grants.apply.system.attachments_v1.AttachedFileDataType realValue = ((gov.grants.apply.system.attachments_v1.AttachedFileDataType) value);
                        {
                            // Check complex value
                            gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier verifier = new gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier();
                            verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AttFile"), handler, realValue);
                        }
                    } else {
                        if (null == value) {
                        } else {
                            // Report wrong class
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AttFile"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                        }
                    }
                }

                public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                    check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType.ConsortiumJustificationType) object));
                }

                public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                    check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType.ConsortiumJustificationType) object));
                }

            }

            public static class PersonnelJustificationTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
            {


                public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType.PersonnelJustificationType master) {
                    if (null == master.getAttFile()) {
                        // Report missing object
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AttFile"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                    } else {
                        // Check value
                        checkAttFile(parentLocator, handler, master, master.getAttFile());
                    }
                }

                public void checkAttFile(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType.PersonnelJustificationType master, gov.grants.apply.system.attachments_v1.AttachedFileDataType value) {
                    if (value instanceof gov.grants.apply.system.attachments_v1.AttachedFileDataType) {
                        gov.grants.apply.system.attachments_v1.AttachedFileDataType realValue = ((gov.grants.apply.system.attachments_v1.AttachedFileDataType) value);
                        {
                            // Check complex value
                            gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier verifier = new gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier();
                            verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AttFile"), handler, realValue);
                        }
                    } else {
                        if (null == value) {
                        } else {
                            // Report wrong class
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AttFile"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                        }
                    }
                }

                public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                    check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType.PersonnelJustificationType) object));
                }

                public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                    check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.BudgetJustificationsType.PersonnelJustificationType) object));
                }

            }

        }

        public static class EntirePeriodTotalCostTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {


            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.EntirePeriodTotalCostType master) {
                if (null == master.getCumulativeDirectCostLessConsortiumFandA()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeDirectCostLessConsortiumFandA"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check value
                    checkCumulativeDirectCostLessConsortiumFandA(parentLocator, handler, master, master.getCumulativeDirectCostLessConsortiumFandA());
                }
                if (null!= master.getCumulativeConsortiumFandA()) {
                    // If left exists
                    if (null == master.getCumulativeConsortiumFandA()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCumulativeConsortiumFandA(parentLocator, handler, master, master.getCumulativeConsortiumFandA());
                    }
                }
                if (null == master.getCumulativeTotalFundsRequestedDirectCosts()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedDirectCosts"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check value
                    checkCumulativeTotalFundsRequestedDirectCosts(parentLocator, handler, master, master.getCumulativeTotalFundsRequestedDirectCosts());
                }
                if (null!= master.getCumulativeTotalFundsRequestedIndirectCost()) {
                    // If left exists
                    if (null == master.getCumulativeTotalFundsRequestedIndirectCost()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCumulativeTotalFundsRequestedIndirectCost(parentLocator, handler, master, master.getCumulativeTotalFundsRequestedIndirectCost());
                    }
                }
                if (null == master.getCumulativeTotalFundsRequestedDirectIndirectCosts()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedDirectIndirectCosts"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check value
                    checkCumulativeTotalFundsRequestedDirectIndirectCosts(parentLocator, handler, master, master.getCumulativeTotalFundsRequestedDirectIndirectCosts());
                }
            }

            public void checkCumulativeTotalFundsRequestedDirectIndirectCosts(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.EntirePeriodTotalCostType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedDirectIndirectCosts"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedDirectIndirectCosts"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCumulativeTotalFundsRequestedDirectCosts(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.EntirePeriodTotalCostType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedDirectCosts"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedDirectCosts"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCumulativeTotalFundsRequestedIndirectCost(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.EntirePeriodTotalCostType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedIndirectCost"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedIndirectCost"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCumulativeConsortiumFandA(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.EntirePeriodTotalCostType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeConsortiumFandA"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeConsortiumFandA"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCumulativeDirectCostLessConsortiumFandA(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.EntirePeriodTotalCostType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeDirectCostLessConsortiumFandA"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeDirectCostLessConsortiumFandA"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.EntirePeriodTotalCostType) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.CummulativeBudgetInfoType.EntirePeriodTotalCostType) object));
            }

        }

    }

    public static class Periods2TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {


        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type master) {
            if (null!= master.getBudgetPeriodStartDate2()) {
                // If left exists
                if (null == master.getBudgetPeriodStartDate2()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkBudgetPeriodStartDate2(parentLocator, handler, master, master.getBudgetPeriodStartDate2());
                }
            }
            if (null!= master.getBudgetPeriodEndDate2()) {
                // If left exists
                if (null == master.getBudgetPeriodEndDate2()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkBudgetPeriodEndDate2(parentLocator, handler, master, master.getBudgetPeriodEndDate2());
                }
            }
            // No check for primitive values
            checkBudgetPeriod2(parentLocator, handler, master, new java.lang.Integer(master.getBudgetPeriod2()));
            if (null == master.getDirectCost2()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCost2"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkDirectCost2(parentLocator, handler, master, master.getDirectCost2());
            }
            if (null!= master.getIndirectCost2()) {
                // If left exists
                if (null == master.getIndirectCost2()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkIndirectCost2(parentLocator, handler, master, master.getIndirectCost2());
                }
            }
            if (null == master.getTotalFundsRequestedDirectIndirectCosts2()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectIndirectCosts2"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkTotalFundsRequestedDirectIndirectCosts2(parentLocator, handler, master, master.getTotalFundsRequestedDirectIndirectCosts2());
            }
        }

        public void checkDirectCost2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type master, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.DirectCost2Type value) {
            if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.DirectCost2Type) {
                gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.DirectCost2Type realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.DirectCost2Type) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods2TypeVerifier.DirectCost2TypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods2TypeVerifier.DirectCost2TypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCost2"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCost2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkTotalFundsRequestedDirectIndirectCosts2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type master, java.math.BigDecimal value) {
            if (value instanceof java.math.BigDecimal) {
                java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    // todo: Check lexical constraints. How???
                    // todo: Check lexical constraints. How???
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectIndirectCosts2"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectIndirectCosts2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkIndirectCost2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type master, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.IndirectCost2Type value) {
            if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.IndirectCost2Type) {
                gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.IndirectCost2Type realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.IndirectCost2Type) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods2TypeVerifier.IndirectCost2TypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods2TypeVerifier.IndirectCost2TypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCost2"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCost2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkBudgetPeriod2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type master, java.lang.Integer value) {
            if (value instanceof java.lang.Integer) {
                java.lang.Integer realValue = ((java.lang.Integer) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((java.lang.Comparable) realValue).compareTo(new java.lang.Integer(0))>= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.lang.Integer(0));
                    }
                    if (((java.lang.Comparable) realValue).compareTo(new java.lang.Integer(5))<= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.lang.Integer(5));
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriod2"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriod2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkBudgetPeriodStartDate2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type master, java.util.Calendar value) {
            if (value instanceof java.util.Calendar) {
                java.util.Calendar realValue = ((java.util.Calendar) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.DateType datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriodStartDate2"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriodStartDate2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkBudgetPeriodEndDate2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type master, java.util.Calendar value) {
            if (value instanceof java.util.Calendar) {
                java.util.Calendar realValue = ((java.util.Calendar) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.DateType datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriodEndDate2"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriodEndDate2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type) object));
        }

        public static class DirectCost2TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {


            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.DirectCost2Type master) {
                if (null == master.getDirectCostLessConsortiumFandA2()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCostLessConsortiumFandA2"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check value
                    checkDirectCostLessConsortiumFandA2(parentLocator, handler, master, master.getDirectCostLessConsortiumFandA2());
                }
                if (null!= master.getConsortiumFandA2()) {
                    // If left exists
                    if (null == master.getConsortiumFandA2()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkConsortiumFandA2(parentLocator, handler, master, master.getConsortiumFandA2());
                    }
                }
                if (null == master.getTotalFundsRequestedDirectCosts2()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectCosts2"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check value
                    checkTotalFundsRequestedDirectCosts2(parentLocator, handler, master, master.getTotalFundsRequestedDirectCosts2());
                }
            }

            public void checkTotalFundsRequestedDirectCosts2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.DirectCost2Type master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectCosts2"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectCosts2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkDirectCostLessConsortiumFandA2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.DirectCost2Type master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCostLessConsortiumFandA2"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCostLessConsortiumFandA2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkConsortiumFandA2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.DirectCost2Type master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ConsortiumFandA2"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ConsortiumFandA2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.DirectCost2Type) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.DirectCost2Type) object));
            }

        }

        public static class IndirectCost2TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {


            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.IndirectCost2Type master) {
                if (null == master.getIndirectCostItems2()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostItems2"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check count
                    if (master.getIndirectCostItems2().size()< 0) {
                        // Report minimum of occurences violated
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostItems2"), new de.fzi.dbs.verification.event.structure.TooFewElementsProblem(master.getIndirectCostItems2().size(), 0)));
                    }
                    if (master.getIndirectCostItems2().size()> 4) {
                        // Report maximum of occurences violated
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostItems2"), new de.fzi.dbs.verification.event.structure.TooManyElementsProblem(master.getIndirectCostItems2().size(), 4)));
                    }
                    // Check value
                    checkIndirectCostItems2(parentLocator, handler, master, master.getIndirectCostItems2());
                }
                if (null!= master.getCognizantFederalAgency2()) {
                    // If left exists
                    if (null == master.getCognizantFederalAgency2()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCognizantFederalAgency2(parentLocator, handler, master, master.getCognizantFederalAgency2());
                    }
                }
                if (null!= master.getIndirectCostAgreementDate2()) {
                    // If left exists
                    if (null == master.getIndirectCostAgreementDate2()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkIndirectCostAgreementDate2(parentLocator, handler, master, master.getIndirectCostAgreementDate2());
                    }
                }
                if (null!= master.getTotalFundsRequestedIndirectCost2()) {
                    // If left exists
                    if (null == master.getTotalFundsRequestedIndirectCost2()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkTotalFundsRequestedIndirectCost2(parentLocator, handler, master, master.getTotalFundsRequestedIndirectCost2());
                    }
                }
            }

            public void checkCognizantFederalAgency2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.IndirectCost2Type master, java.lang.String value) {
                if (value instanceof java.lang.String) {
                    java.lang.String realValue = ((java.lang.String) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (((null == realValue)? 0 :realValue.length())>= 0) {
                            // Value length is correct
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 0);
                        }
                        if (((null == realValue)? 0 :realValue.length())<= 180) {
                            // Value length is correct
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 180);
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CognizantFederalAgency2"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CognizantFederalAgency2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkTotalFundsRequestedIndirectCost2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.IndirectCost2Type master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedIndirectCost2"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedIndirectCost2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkIndirectCostItems2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.IndirectCost2Type master, java.util.List values) {
                for (int index = 0; (index<values.size()); index ++) {
                    java.lang.Object item = values.get(index);
                    checkIndirectCostItems2(parentLocator, handler, master, index, item);
                }
            }

            public void checkIndirectCostItems2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.IndirectCost2Type master, int index, java.lang.Object value) {
                if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.IndirectCost2Type.IndirectCostItems2Type) {
                    gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.IndirectCost2Type.IndirectCostItems2Type realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.IndirectCost2Type.IndirectCostItems2Type) value);
                    {
                        // Check complex value
                        gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods2TypeVerifier.IndirectCost2TypeVerifier.IndirectCostItems2TypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods2TypeVerifier.IndirectCost2TypeVerifier.IndirectCostItems2TypeVerifier();
                        verifier.check(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "IndirectCostItems2", index), handler, realValue);
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "IndirectCostItems2", index), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkIndirectCostAgreementDate2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.IndirectCost2Type master, java.util.Calendar value) {
                if (value instanceof java.util.Calendar) {
                    java.util.Calendar realValue = ((java.util.Calendar) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.DateType datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostAgreementDate2"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostAgreementDate2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.IndirectCost2Type) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.IndirectCost2Type) object));
            }

            public static class IndirectCostItems2TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
            {


                public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.IndirectCost2Type.IndirectCostItems2Type master) {
                    if (null!= master.getIndirectCostTypeDescription()) {
                        // If left exists
                        if (null == master.getIndirectCostTypeDescription()) {
                            // Optional field - nothing to report
                        } else {
                            // Check value
                            checkIndirectCostTypeDescription(parentLocator, handler, master, master.getIndirectCostTypeDescription());
                        }
                    }
                    if (null!= master.getIndirectCostRate()) {
                        // If left exists
                        if (null == master.getIndirectCostRate()) {
                            // Optional field - nothing to report
                        } else {
                            // Check value
                            checkIndirectCostRate(parentLocator, handler, master, master.getIndirectCostRate());
                        }
                    }
                    if (null!= master.getIndirectCostBase()) {
                        // If left exists
                        if (null == master.getIndirectCostBase()) {
                            // Optional field - nothing to report
                        } else {
                            // Check value
                            checkIndirectCostBase(parentLocator, handler, master, master.getIndirectCostBase());
                        }
                    }
                    if (null!= master.getIndirectCostFundsRequested()) {
                        // If left exists
                        if (null == master.getIndirectCostFundsRequested()) {
                            // Optional field - nothing to report
                        } else {
                            // Check value
                            checkIndirectCostFundsRequested(parentLocator, handler, master, master.getIndirectCostFundsRequested());
                        }
                    }
                }

                public void checkIndirectCostTypeDescription(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.IndirectCost2Type.IndirectCostItems2Type master, java.lang.String value) {
                    if (value instanceof java.lang.String) {
                        java.lang.String realValue = ((java.lang.String) value);
                        // Check primitive value
                        {
                            // Perform the check
                            // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                            de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                            if (((null == realValue)? 0 :realValue.length())>= 0) {
                                // Value length is correct
                            } else {
                                problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 0);
                            }
                            if (((null == realValue)? 0 :realValue.length())<= 64) {
                                // Value length is correct
                            } else {
                                problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 64);
                            }
                            if (null!= problem) {
                                // Handle event
                                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostTypeDescription"), problem));
                            }
                        }
                    } else {
                        if (null == value) {
                        } else {
                            // Report wrong class
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostTypeDescription"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                        }
                    }
                }

                public void checkIndirectCostRate(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.IndirectCost2Type.IndirectCostItems2Type master, java.math.BigDecimal value) {
                    if (value instanceof java.math.BigDecimal) {
                        java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                        // Check primitive value
                        {
                            // Perform the check
                            // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                            de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                            // todo: Check lexical constraints. How???
                            // todo: Check lexical constraints. How???
                            if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                                // Range is valid
                            } else {
                                problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                            }
                            if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("100"))<= 0) {
                                // Range is valid
                            } else {
                                problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("100"));
                            }
                            if (null!= problem) {
                                // Handle event
                                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostRate"), problem));
                            }
                        }
                    } else {
                        if (null == value) {
                        } else {
                            // Report wrong class
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostRate"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                        }
                    }
                }

                public void checkIndirectCostBase(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.IndirectCost2Type.IndirectCostItems2Type master, java.math.BigDecimal value) {
                    if (value instanceof java.math.BigDecimal) {
                        java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                        // Check primitive value
                        {
                            // Perform the check
                            // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                            de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                            // todo: Check lexical constraints. How???
                            // todo: Check lexical constraints. How???
                            if (null!= problem) {
                                // Handle event
                                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostBase"), problem));
                            }
                        }
                    } else {
                        if (null == value) {
                        } else {
                            // Report wrong class
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostBase"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                        }
                    }
                }

                public void checkIndirectCostFundsRequested(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.IndirectCost2Type.IndirectCostItems2Type master, java.math.BigDecimal value) {
                    if (value instanceof java.math.BigDecimal) {
                        java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                        // Check primitive value
                        {
                            // Perform the check
                            // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                            de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                            // todo: Check lexical constraints. How???
                            // todo: Check lexical constraints. How???
                            if (null!= problem) {
                                // Handle event
                                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostFundsRequested"), problem));
                            }
                        }
                    } else {
                        if (null == value) {
                        } else {
                            // Report wrong class
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostFundsRequested"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                        }
                    }
                }

                public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                    check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.IndirectCost2Type.IndirectCostItems2Type) object));
                }

                public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                    check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods2Type.IndirectCost2Type.IndirectCostItems2Type) object));
                }

            }

        }

    }

    public static class Periods3TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {


        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type master) {
            if (null!= master.getBudgetPeriodStartDate3()) {
                // If left exists
                if (null == master.getBudgetPeriodStartDate3()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkBudgetPeriodStartDate3(parentLocator, handler, master, master.getBudgetPeriodStartDate3());
                }
            }
            if (null!= master.getBudgetPeriodEndDate3()) {
                // If left exists
                if (null == master.getBudgetPeriodEndDate3()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkBudgetPeriodEndDate3(parentLocator, handler, master, master.getBudgetPeriodEndDate3());
                }
            }
            // No check for primitive values
            checkBudgetPeriod3(parentLocator, handler, master, new java.lang.Integer(master.getBudgetPeriod3()));
            if (null == master.getDirectCost3()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCost3"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkDirectCost3(parentLocator, handler, master, master.getDirectCost3());
            }
            if (null!= master.getIndirectCost3()) {
                // If left exists
                if (null == master.getIndirectCost3()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkIndirectCost3(parentLocator, handler, master, master.getIndirectCost3());
                }
            }
            if (null == master.getTotalFundsRequestedDirectIndirectCosts3()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectIndirectCosts3"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkTotalFundsRequestedDirectIndirectCosts3(parentLocator, handler, master, master.getTotalFundsRequestedDirectIndirectCosts3());
            }
        }

        public void checkTotalFundsRequestedDirectIndirectCosts3(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type master, java.math.BigDecimal value) {
            if (value instanceof java.math.BigDecimal) {
                java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    // todo: Check lexical constraints. How???
                    // todo: Check lexical constraints. How???
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectIndirectCosts3"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectIndirectCosts3"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkBudgetPeriod3(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type master, java.lang.Integer value) {
            if (value instanceof java.lang.Integer) {
                java.lang.Integer realValue = ((java.lang.Integer) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((java.lang.Comparable) realValue).compareTo(new java.lang.Integer(0))>= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.lang.Integer(0));
                    }
                    if (((java.lang.Comparable) realValue).compareTo(new java.lang.Integer(5))<= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.lang.Integer(5));
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriod3"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriod3"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkIndirectCost3(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type master, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.IndirectCost3Type value) {
            if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.IndirectCost3Type) {
                gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.IndirectCost3Type realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.IndirectCost3Type) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods3TypeVerifier.IndirectCost3TypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods3TypeVerifier.IndirectCost3TypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCost3"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCost3"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkBudgetPeriodEndDate3(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type master, java.util.Calendar value) {
            if (value instanceof java.util.Calendar) {
                java.util.Calendar realValue = ((java.util.Calendar) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.DateType datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriodEndDate3"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriodEndDate3"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkBudgetPeriodStartDate3(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type master, java.util.Calendar value) {
            if (value instanceof java.util.Calendar) {
                java.util.Calendar realValue = ((java.util.Calendar) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.DateType datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriodStartDate3"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriodStartDate3"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkDirectCost3(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type master, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.DirectCost3Type value) {
            if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.DirectCost3Type) {
                gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.DirectCost3Type realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.DirectCost3Type) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods3TypeVerifier.DirectCost3TypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods3TypeVerifier.DirectCost3TypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCost3"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCost3"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type) object));
        }

        public static class DirectCost3TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {


            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.DirectCost3Type master) {
                if (null == master.getDirectCostLessConsortiumFandA3()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCostLessConsortiumFandA3"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check value
                    checkDirectCostLessConsortiumFandA3(parentLocator, handler, master, master.getDirectCostLessConsortiumFandA3());
                }
                if (null!= master.getConsortiumFandA3()) {
                    // If left exists
                    if (null == master.getConsortiumFandA3()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkConsortiumFandA3(parentLocator, handler, master, master.getConsortiumFandA3());
                    }
                }
                if (null == master.getTotalFundsRequestedDirectCosts3()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectCosts3"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check value
                    checkTotalFundsRequestedDirectCosts3(parentLocator, handler, master, master.getTotalFundsRequestedDirectCosts3());
                }
            }

            public void checkTotalFundsRequestedDirectCosts3(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.DirectCost3Type master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectCosts3"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectCosts3"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkConsortiumFandA3(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.DirectCost3Type master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ConsortiumFandA3"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ConsortiumFandA3"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkDirectCostLessConsortiumFandA3(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.DirectCost3Type master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCostLessConsortiumFandA3"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCostLessConsortiumFandA3"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.DirectCost3Type) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.DirectCost3Type) object));
            }

        }

        public static class IndirectCost3TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {


            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.IndirectCost3Type master) {
                if (null == master.getIndirectCostItems3()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostItems3"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check count
                    if (master.getIndirectCostItems3().size()< 0) {
                        // Report minimum of occurences violated
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostItems3"), new de.fzi.dbs.verification.event.structure.TooFewElementsProblem(master.getIndirectCostItems3().size(), 0)));
                    }
                    if (master.getIndirectCostItems3().size()> 4) {
                        // Report maximum of occurences violated
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostItems3"), new de.fzi.dbs.verification.event.structure.TooManyElementsProblem(master.getIndirectCostItems3().size(), 4)));
                    }
                    // Check value
                    checkIndirectCostItems3(parentLocator, handler, master, master.getIndirectCostItems3());
                }
                if (null!= master.getCognizantFederalAgency3()) {
                    // If left exists
                    if (null == master.getCognizantFederalAgency3()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCognizantFederalAgency3(parentLocator, handler, master, master.getCognizantFederalAgency3());
                    }
                }
                if (null!= master.getIndirectCostAgreementDate3()) {
                    // If left exists
                    if (null == master.getIndirectCostAgreementDate3()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkIndirectCostAgreementDate3(parentLocator, handler, master, master.getIndirectCostAgreementDate3());
                    }
                }
                if (null!= master.getTotalFundsRequestedIndirectCost3()) {
                    // If left exists
                    if (null == master.getTotalFundsRequestedIndirectCost3()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkTotalFundsRequestedIndirectCost3(parentLocator, handler, master, master.getTotalFundsRequestedIndirectCost3());
                    }
                }
            }

            public void checkIndirectCostItems3(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.IndirectCost3Type master, java.util.List values) {
                for (int index = 0; (index<values.size()); index ++) {
                    java.lang.Object item = values.get(index);
                    checkIndirectCostItems3(parentLocator, handler, master, index, item);
                }
            }

            public void checkIndirectCostItems3(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.IndirectCost3Type master, int index, java.lang.Object value) {
                if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.IndirectCost3Type.IndirectCostItems3Type) {
                    gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.IndirectCost3Type.IndirectCostItems3Type realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.IndirectCost3Type.IndirectCostItems3Type) value);
                    {
                        // Check complex value
                        gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods3TypeVerifier.IndirectCost3TypeVerifier.IndirectCostItems3TypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods3TypeVerifier.IndirectCost3TypeVerifier.IndirectCostItems3TypeVerifier();
                        verifier.check(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "IndirectCostItems3", index), handler, realValue);
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "IndirectCostItems3", index), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkIndirectCostAgreementDate3(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.IndirectCost3Type master, java.util.Calendar value) {
                if (value instanceof java.util.Calendar) {
                    java.util.Calendar realValue = ((java.util.Calendar) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.DateType datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostAgreementDate3"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostAgreementDate3"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCognizantFederalAgency3(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.IndirectCost3Type master, java.lang.String value) {
                if (value instanceof java.lang.String) {
                    java.lang.String realValue = ((java.lang.String) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (((null == realValue)? 0 :realValue.length())>= 0) {
                            // Value length is correct
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 0);
                        }
                        if (((null == realValue)? 0 :realValue.length())<= 180) {
                            // Value length is correct
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 180);
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CognizantFederalAgency3"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CognizantFederalAgency3"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkTotalFundsRequestedIndirectCost3(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.IndirectCost3Type master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedIndirectCost3"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedIndirectCost3"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.IndirectCost3Type) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.IndirectCost3Type) object));
            }

            public static class IndirectCostItems3TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
            {


                public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.IndirectCost3Type.IndirectCostItems3Type master) {
                    if (null!= master.getIndirectCostTypeDescription()) {
                        // If left exists
                        if (null == master.getIndirectCostTypeDescription()) {
                            // Optional field - nothing to report
                        } else {
                            // Check value
                            checkIndirectCostTypeDescription(parentLocator, handler, master, master.getIndirectCostTypeDescription());
                        }
                    }
                    if (null!= master.getIndirectCostRate()) {
                        // If left exists
                        if (null == master.getIndirectCostRate()) {
                            // Optional field - nothing to report
                        } else {
                            // Check value
                            checkIndirectCostRate(parentLocator, handler, master, master.getIndirectCostRate());
                        }
                    }
                    if (null!= master.getIndirectCostBase()) {
                        // If left exists
                        if (null == master.getIndirectCostBase()) {
                            // Optional field - nothing to report
                        } else {
                            // Check value
                            checkIndirectCostBase(parentLocator, handler, master, master.getIndirectCostBase());
                        }
                    }
                    if (null!= master.getIndirectCostFundsRequested()) {
                        // If left exists
                        if (null == master.getIndirectCostFundsRequested()) {
                            // Optional field - nothing to report
                        } else {
                            // Check value
                            checkIndirectCostFundsRequested(parentLocator, handler, master, master.getIndirectCostFundsRequested());
                        }
                    }
                }

                public void checkIndirectCostTypeDescription(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.IndirectCost3Type.IndirectCostItems3Type master, java.lang.String value) {
                    if (value instanceof java.lang.String) {
                        java.lang.String realValue = ((java.lang.String) value);
                        // Check primitive value
                        {
                            // Perform the check
                            // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                            de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                            if (((null == realValue)? 0 :realValue.length())>= 0) {
                                // Value length is correct
                            } else {
                                problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 0);
                            }
                            if (((null == realValue)? 0 :realValue.length())<= 64) {
                                // Value length is correct
                            } else {
                                problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 64);
                            }
                            if (null!= problem) {
                                // Handle event
                                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostTypeDescription"), problem));
                            }
                        }
                    } else {
                        if (null == value) {
                        } else {
                            // Report wrong class
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostTypeDescription"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                        }
                    }
                }

                public void checkIndirectCostRate(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.IndirectCost3Type.IndirectCostItems3Type master, java.math.BigDecimal value) {
                    if (value instanceof java.math.BigDecimal) {
                        java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                        // Check primitive value
                        {
                            // Perform the check
                            // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                            de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                            // todo: Check lexical constraints. How???
                            // todo: Check lexical constraints. How???
                            if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                                // Range is valid
                            } else {
                                problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                            }
                            if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("100"))<= 0) {
                                // Range is valid
                            } else {
                                problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("100"));
                            }
                            if (null!= problem) {
                                // Handle event
                                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostRate"), problem));
                            }
                        }
                    } else {
                        if (null == value) {
                        } else {
                            // Report wrong class
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostRate"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                        }
                    }
                }

                public void checkIndirectCostBase(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.IndirectCost3Type.IndirectCostItems3Type master, java.math.BigDecimal value) {
                    if (value instanceof java.math.BigDecimal) {
                        java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                        // Check primitive value
                        {
                            // Perform the check
                            // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                            de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                            // todo: Check lexical constraints. How???
                            // todo: Check lexical constraints. How???
                            if (null!= problem) {
                                // Handle event
                                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostBase"), problem));
                            }
                        }
                    } else {
                        if (null == value) {
                        } else {
                            // Report wrong class
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostBase"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                        }
                    }
                }

                public void checkIndirectCostFundsRequested(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.IndirectCost3Type.IndirectCostItems3Type master, java.math.BigDecimal value) {
                    if (value instanceof java.math.BigDecimal) {
                        java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                        // Check primitive value
                        {
                            // Perform the check
                            // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                            de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                            // todo: Check lexical constraints. How???
                            // todo: Check lexical constraints. How???
                            if (null!= problem) {
                                // Handle event
                                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostFundsRequested"), problem));
                            }
                        }
                    } else {
                        if (null == value) {
                        } else {
                            // Report wrong class
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostFundsRequested"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                        }
                    }
                }

                public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                    check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.IndirectCost3Type.IndirectCostItems3Type) object));
                }

                public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                    check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods3Type.IndirectCost3Type.IndirectCostItems3Type) object));
                }

            }

        }

    }

    public static class Periods4TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {


        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type master) {
            if (null!= master.getBudgetPeriodStartDate4()) {
                // If left exists
                if (null == master.getBudgetPeriodStartDate4()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkBudgetPeriodStartDate4(parentLocator, handler, master, master.getBudgetPeriodStartDate4());
                }
            }
            if (null!= master.getBudgetPeriodEndDate4()) {
                // If left exists
                if (null == master.getBudgetPeriodEndDate4()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkBudgetPeriodEndDate4(parentLocator, handler, master, master.getBudgetPeriodEndDate4());
                }
            }
            // No check for primitive values
            checkBudgetPeriod4(parentLocator, handler, master, new java.lang.Integer(master.getBudgetPeriod4()));
            if (null == master.getDirectCost4()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCost4"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkDirectCost4(parentLocator, handler, master, master.getDirectCost4());
            }
            if (null!= master.getIndirectCost4()) {
                // If left exists
                if (null == master.getIndirectCost4()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkIndirectCost4(parentLocator, handler, master, master.getIndirectCost4());
                }
            }
            if (null == master.getTotalFundsRequestedDirectIndirectCosts4()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectIndirectCosts4"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkTotalFundsRequestedDirectIndirectCosts4(parentLocator, handler, master, master.getTotalFundsRequestedDirectIndirectCosts4());
            }
        }

        public void checkBudgetPeriodEndDate4(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type master, java.util.Calendar value) {
            if (value instanceof java.util.Calendar) {
                java.util.Calendar realValue = ((java.util.Calendar) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.DateType datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriodEndDate4"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriodEndDate4"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkDirectCost4(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type master, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.DirectCost4Type value) {
            if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.DirectCost4Type) {
                gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.DirectCost4Type realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.DirectCost4Type) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods4TypeVerifier.DirectCost4TypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods4TypeVerifier.DirectCost4TypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCost4"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCost4"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkTotalFundsRequestedDirectIndirectCosts4(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type master, java.math.BigDecimal value) {
            if (value instanceof java.math.BigDecimal) {
                java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    // todo: Check lexical constraints. How???
                    // todo: Check lexical constraints. How???
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectIndirectCosts4"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectIndirectCosts4"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkBudgetPeriod4(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type master, java.lang.Integer value) {
            if (value instanceof java.lang.Integer) {
                java.lang.Integer realValue = ((java.lang.Integer) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((java.lang.Comparable) realValue).compareTo(new java.lang.Integer(0))>= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.lang.Integer(0));
                    }
                    if (((java.lang.Comparable) realValue).compareTo(new java.lang.Integer(5))<= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.lang.Integer(5));
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriod4"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriod4"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkIndirectCost4(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type master, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.IndirectCost4Type value) {
            if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.IndirectCost4Type) {
                gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.IndirectCost4Type realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.IndirectCost4Type) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods4TypeVerifier.IndirectCost4TypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods4TypeVerifier.IndirectCost4TypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCost4"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCost4"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkBudgetPeriodStartDate4(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type master, java.util.Calendar value) {
            if (value instanceof java.util.Calendar) {
                java.util.Calendar realValue = ((java.util.Calendar) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.DateType datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriodStartDate4"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriodStartDate4"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type) object));
        }

        public static class DirectCost4TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {


            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.DirectCost4Type master) {
                if (null == master.getDirectCostLessConsortiumFandA4()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCostLessConsortiumFandA4"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check value
                    checkDirectCostLessConsortiumFandA4(parentLocator, handler, master, master.getDirectCostLessConsortiumFandA4());
                }
                if (null!= master.getConsortiumFandA4()) {
                    // If left exists
                    if (null == master.getConsortiumFandA4()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkConsortiumFandA4(parentLocator, handler, master, master.getConsortiumFandA4());
                    }
                }
                if (null == master.getTotalFundsRequestedDirectCosts4()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectCosts4"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check value
                    checkTotalFundsRequestedDirectCosts4(parentLocator, handler, master, master.getTotalFundsRequestedDirectCosts4());
                }
            }

            public void checkDirectCostLessConsortiumFandA4(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.DirectCost4Type master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCostLessConsortiumFandA4"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCostLessConsortiumFandA4"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkConsortiumFandA4(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.DirectCost4Type master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ConsortiumFandA4"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ConsortiumFandA4"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkTotalFundsRequestedDirectCosts4(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.DirectCost4Type master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectCosts4"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectCosts4"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.DirectCost4Type) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.DirectCost4Type) object));
            }

        }

        public static class IndirectCost4TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {


            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.IndirectCost4Type master) {
                if (null == master.getIndirectCostItems4()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostItems4"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check count
                    if (master.getIndirectCostItems4().size()< 0) {
                        // Report minimum of occurences violated
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostItems4"), new de.fzi.dbs.verification.event.structure.TooFewElementsProblem(master.getIndirectCostItems4().size(), 0)));
                    }
                    if (master.getIndirectCostItems4().size()> 4) {
                        // Report maximum of occurences violated
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostItems4"), new de.fzi.dbs.verification.event.structure.TooManyElementsProblem(master.getIndirectCostItems4().size(), 4)));
                    }
                    // Check value
                    checkIndirectCostItems4(parentLocator, handler, master, master.getIndirectCostItems4());
                }
                if (null!= master.getCognizantFederalAgency4()) {
                    // If left exists
                    if (null == master.getCognizantFederalAgency4()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCognizantFederalAgency4(parentLocator, handler, master, master.getCognizantFederalAgency4());
                    }
                }
                if (null!= master.getIndirectCostAgreementDate4()) {
                    // If left exists
                    if (null == master.getIndirectCostAgreementDate4()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkIndirectCostAgreementDate4(parentLocator, handler, master, master.getIndirectCostAgreementDate4());
                    }
                }
                if (null!= master.getTotalFundsRequestedIndirectCost4()) {
                    // If left exists
                    if (null == master.getTotalFundsRequestedIndirectCost4()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkTotalFundsRequestedIndirectCost4(parentLocator, handler, master, master.getTotalFundsRequestedIndirectCost4());
                    }
                }
            }

            public void checkTotalFundsRequestedIndirectCost4(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.IndirectCost4Type master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedIndirectCost4"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedIndirectCost4"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCognizantFederalAgency4(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.IndirectCost4Type master, java.lang.String value) {
                if (value instanceof java.lang.String) {
                    java.lang.String realValue = ((java.lang.String) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (((null == realValue)? 0 :realValue.length())>= 0) {
                            // Value length is correct
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 0);
                        }
                        if (((null == realValue)? 0 :realValue.length())<= 180) {
                            // Value length is correct
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 180);
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CognizantFederalAgency4"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CognizantFederalAgency4"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkIndirectCostAgreementDate4(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.IndirectCost4Type master, java.util.Calendar value) {
                if (value instanceof java.util.Calendar) {
                    java.util.Calendar realValue = ((java.util.Calendar) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.DateType datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostAgreementDate4"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostAgreementDate4"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkIndirectCostItems4(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.IndirectCost4Type master, java.util.List values) {
                for (int index = 0; (index<values.size()); index ++) {
                    java.lang.Object item = values.get(index);
                    checkIndirectCostItems4(parentLocator, handler, master, index, item);
                }
            }

            public void checkIndirectCostItems4(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.IndirectCost4Type master, int index, java.lang.Object value) {
                if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.IndirectCost4Type.IndirectCostItems4Type) {
                    gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.IndirectCost4Type.IndirectCostItems4Type realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.IndirectCost4Type.IndirectCostItems4Type) value);
                    {
                        // Check complex value
                        gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods4TypeVerifier.IndirectCost4TypeVerifier.IndirectCostItems4TypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods4TypeVerifier.IndirectCost4TypeVerifier.IndirectCostItems4TypeVerifier();
                        verifier.check(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "IndirectCostItems4", index), handler, realValue);
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "IndirectCostItems4", index), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.IndirectCost4Type) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.IndirectCost4Type) object));
            }

            public static class IndirectCostItems4TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
            {


                public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.IndirectCost4Type.IndirectCostItems4Type master) {
                    if (null!= master.getIndirectCostTypeDescription()) {
                        // If left exists
                        if (null == master.getIndirectCostTypeDescription()) {
                            // Optional field - nothing to report
                        } else {
                            // Check value
                            checkIndirectCostTypeDescription(parentLocator, handler, master, master.getIndirectCostTypeDescription());
                        }
                    }
                    if (null!= master.getIndirectCostRate()) {
                        // If left exists
                        if (null == master.getIndirectCostRate()) {
                            // Optional field - nothing to report
                        } else {
                            // Check value
                            checkIndirectCostRate(parentLocator, handler, master, master.getIndirectCostRate());
                        }
                    }
                    if (null!= master.getIndirectCostBase()) {
                        // If left exists
                        if (null == master.getIndirectCostBase()) {
                            // Optional field - nothing to report
                        } else {
                            // Check value
                            checkIndirectCostBase(parentLocator, handler, master, master.getIndirectCostBase());
                        }
                    }
                    if (null!= master.getIndirectCostFundsRequested()) {
                        // If left exists
                        if (null == master.getIndirectCostFundsRequested()) {
                            // Optional field - nothing to report
                        } else {
                            // Check value
                            checkIndirectCostFundsRequested(parentLocator, handler, master, master.getIndirectCostFundsRequested());
                        }
                    }
                }

                public void checkIndirectCostTypeDescription(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.IndirectCost4Type.IndirectCostItems4Type master, java.lang.String value) {
                    if (value instanceof java.lang.String) {
                        java.lang.String realValue = ((java.lang.String) value);
                        // Check primitive value
                        {
                            // Perform the check
                            // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                            de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                            if (((null == realValue)? 0 :realValue.length())>= 0) {
                                // Value length is correct
                            } else {
                                problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 0);
                            }
                            if (((null == realValue)? 0 :realValue.length())<= 64) {
                                // Value length is correct
                            } else {
                                problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 64);
                            }
                            if (null!= problem) {
                                // Handle event
                                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostTypeDescription"), problem));
                            }
                        }
                    } else {
                        if (null == value) {
                        } else {
                            // Report wrong class
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostTypeDescription"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                        }
                    }
                }

                public void checkIndirectCostRate(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.IndirectCost4Type.IndirectCostItems4Type master, java.math.BigDecimal value) {
                    if (value instanceof java.math.BigDecimal) {
                        java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                        // Check primitive value
                        {
                            // Perform the check
                            // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                            de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                            // todo: Check lexical constraints. How???
                            // todo: Check lexical constraints. How???
                            if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                                // Range is valid
                            } else {
                                problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                            }
                            if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("100"))<= 0) {
                                // Range is valid
                            } else {
                                problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("100"));
                            }
                            if (null!= problem) {
                                // Handle event
                                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostRate"), problem));
                            }
                        }
                    } else {
                        if (null == value) {
                        } else {
                            // Report wrong class
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostRate"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                        }
                    }
                }

                public void checkIndirectCostBase(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.IndirectCost4Type.IndirectCostItems4Type master, java.math.BigDecimal value) {
                    if (value instanceof java.math.BigDecimal) {
                        java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                        // Check primitive value
                        {
                            // Perform the check
                            // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                            de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                            // todo: Check lexical constraints. How???
                            // todo: Check lexical constraints. How???
                            if (null!= problem) {
                                // Handle event
                                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostBase"), problem));
                            }
                        }
                    } else {
                        if (null == value) {
                        } else {
                            // Report wrong class
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostBase"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                        }
                    }
                }

                public void checkIndirectCostFundsRequested(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.IndirectCost4Type.IndirectCostItems4Type master, java.math.BigDecimal value) {
                    if (value instanceof java.math.BigDecimal) {
                        java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                        // Check primitive value
                        {
                            // Perform the check
                            // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                            de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                            // todo: Check lexical constraints. How???
                            // todo: Check lexical constraints. How???
                            if (null!= problem) {
                                // Handle event
                                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostFundsRequested"), problem));
                            }
                        }
                    } else {
                        if (null == value) {
                        } else {
                            // Report wrong class
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostFundsRequested"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                        }
                    }
                }

                public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                    check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.IndirectCost4Type.IndirectCostItems4Type) object));
                }

                public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                    check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods4Type.IndirectCost4Type.IndirectCostItems4Type) object));
                }

            }

        }

    }

    public static class Periods5TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {


        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type master) {
            if (null!= master.getBudgetPeriodStartDate5()) {
                // If left exists
                if (null == master.getBudgetPeriodStartDate5()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkBudgetPeriodStartDate5(parentLocator, handler, master, master.getBudgetPeriodStartDate5());
                }
            }
            if (null!= master.getBudgetPeriodEndDate5()) {
                // If left exists
                if (null == master.getBudgetPeriodEndDate5()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkBudgetPeriodEndDate5(parentLocator, handler, master, master.getBudgetPeriodEndDate5());
                }
            }
            // No check for primitive values
            checkBudgetPeriod5(parentLocator, handler, master, new java.lang.Integer(master.getBudgetPeriod5()));
            if (null == master.getDirectCost5()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCost5"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkDirectCost5(parentLocator, handler, master, master.getDirectCost5());
            }
            if (null!= master.getIndirectCost5()) {
                // If left exists
                if (null == master.getIndirectCost5()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkIndirectCost5(parentLocator, handler, master, master.getIndirectCost5());
                }
            }
            if (null == master.getTotalFundsRequestedDirectIndirectCosts5()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectIndirectCosts5"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkTotalFundsRequestedDirectIndirectCosts5(parentLocator, handler, master, master.getTotalFundsRequestedDirectIndirectCosts5());
            }
        }

        public void checkBudgetPeriodEndDate5(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type master, java.util.Calendar value) {
            if (value instanceof java.util.Calendar) {
                java.util.Calendar realValue = ((java.util.Calendar) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.DateType datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriodEndDate5"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriodEndDate5"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkDirectCost5(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type master, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.DirectCost5Type value) {
            if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.DirectCost5Type) {
                gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.DirectCost5Type realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.DirectCost5Type) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods5TypeVerifier.DirectCost5TypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods5TypeVerifier.DirectCost5TypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCost5"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCost5"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkBudgetPeriodStartDate5(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type master, java.util.Calendar value) {
            if (value instanceof java.util.Calendar) {
                java.util.Calendar realValue = ((java.util.Calendar) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.DateType datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriodStartDate5"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriodStartDate5"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkTotalFundsRequestedDirectIndirectCosts5(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type master, java.math.BigDecimal value) {
            if (value instanceof java.math.BigDecimal) {
                java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    // todo: Check lexical constraints. How???
                    // todo: Check lexical constraints. How???
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectIndirectCosts5"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectIndirectCosts5"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkIndirectCost5(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type master, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.IndirectCost5Type value) {
            if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.IndirectCost5Type) {
                gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.IndirectCost5Type realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.IndirectCost5Type) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods5TypeVerifier.IndirectCost5TypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods5TypeVerifier.IndirectCost5TypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCost5"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCost5"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkBudgetPeriod5(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type master, java.lang.Integer value) {
            if (value instanceof java.lang.Integer) {
                java.lang.Integer realValue = ((java.lang.Integer) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((java.lang.Comparable) realValue).compareTo(new java.lang.Integer(0))>= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.lang.Integer(0));
                    }
                    if (((java.lang.Comparable) realValue).compareTo(new java.lang.Integer(5))<= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.lang.Integer(5));
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriod5"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriod5"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type) object));
        }

        public static class DirectCost5TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {


            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.DirectCost5Type master) {
                if (null == master.getDirectCostLessConsortiumFandA5()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCostLessConsortiumFandA5"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check value
                    checkDirectCostLessConsortiumFandA5(parentLocator, handler, master, master.getDirectCostLessConsortiumFandA5());
                }
                if (null!= master.getConsortiumFandA5()) {
                    // If left exists
                    if (null == master.getConsortiumFandA5()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkConsortiumFandA5(parentLocator, handler, master, master.getConsortiumFandA5());
                    }
                }
                if (null == master.getTotalFundsRequestedDirectCosts5()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectCosts5"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check value
                    checkTotalFundsRequestedDirectCosts5(parentLocator, handler, master, master.getTotalFundsRequestedDirectCosts5());
                }
            }

            public void checkTotalFundsRequestedDirectCosts5(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.DirectCost5Type master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectCosts5"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectCosts5"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkConsortiumFandA5(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.DirectCost5Type master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ConsortiumFandA5"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ConsortiumFandA5"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkDirectCostLessConsortiumFandA5(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.DirectCost5Type master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCostLessConsortiumFandA5"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCostLessConsortiumFandA5"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.DirectCost5Type) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.DirectCost5Type) object));
            }

        }

        public static class IndirectCost5TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {


            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.IndirectCost5Type master) {
                if (null == master.getIndirectCostItems5()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostItems5"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check count
                    if (master.getIndirectCostItems5().size()< 0) {
                        // Report minimum of occurences violated
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostItems5"), new de.fzi.dbs.verification.event.structure.TooFewElementsProblem(master.getIndirectCostItems5().size(), 0)));
                    }
                    if (master.getIndirectCostItems5().size()> 4) {
                        // Report maximum of occurences violated
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostItems5"), new de.fzi.dbs.verification.event.structure.TooManyElementsProblem(master.getIndirectCostItems5().size(), 4)));
                    }
                    // Check value
                    checkIndirectCostItems5(parentLocator, handler, master, master.getIndirectCostItems5());
                }
                if (null!= master.getCognizantFederalAgency5()) {
                    // If left exists
                    if (null == master.getCognizantFederalAgency5()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCognizantFederalAgency5(parentLocator, handler, master, master.getCognizantFederalAgency5());
                    }
                }
                if (null!= master.getIndirectCostAgreementDate5()) {
                    // If left exists
                    if (null == master.getIndirectCostAgreementDate5()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkIndirectCostAgreementDate5(parentLocator, handler, master, master.getIndirectCostAgreementDate5());
                    }
                }
                if (null!= master.getTotalFundsRequestedIndirectCost5()) {
                    // If left exists
                    if (null == master.getTotalFundsRequestedIndirectCost5()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkTotalFundsRequestedIndirectCost5(parentLocator, handler, master, master.getTotalFundsRequestedIndirectCost5());
                    }
                }
            }

            public void checkCognizantFederalAgency5(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.IndirectCost5Type master, java.lang.String value) {
                if (value instanceof java.lang.String) {
                    java.lang.String realValue = ((java.lang.String) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (((null == realValue)? 0 :realValue.length())>= 0) {
                            // Value length is correct
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 0);
                        }
                        if (((null == realValue)? 0 :realValue.length())<= 180) {
                            // Value length is correct
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 180);
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CognizantFederalAgency5"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CognizantFederalAgency5"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkIndirectCostAgreementDate5(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.IndirectCost5Type master, java.util.Calendar value) {
                if (value instanceof java.util.Calendar) {
                    java.util.Calendar realValue = ((java.util.Calendar) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.DateType datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostAgreementDate5"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostAgreementDate5"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkTotalFundsRequestedIndirectCost5(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.IndirectCost5Type master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedIndirectCost5"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedIndirectCost5"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkIndirectCostItems5(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.IndirectCost5Type master, java.util.List values) {
                for (int index = 0; (index<values.size()); index ++) {
                    java.lang.Object item = values.get(index);
                    checkIndirectCostItems5(parentLocator, handler, master, index, item);
                }
            }

            public void checkIndirectCostItems5(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.IndirectCost5Type master, int index, java.lang.Object value) {
                if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.IndirectCost5Type.IndirectCostItems5Type) {
                    gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.IndirectCost5Type.IndirectCostItems5Type realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.IndirectCost5Type.IndirectCostItems5Type) value);
                    {
                        // Check complex value
                        gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods5TypeVerifier.IndirectCost5TypeVerifier.IndirectCostItems5TypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.Periods5TypeVerifier.IndirectCost5TypeVerifier.IndirectCostItems5TypeVerifier();
                        verifier.check(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "IndirectCostItems5", index), handler, realValue);
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "IndirectCostItems5", index), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.IndirectCost5Type) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.IndirectCost5Type) object));
            }

            public static class IndirectCostItems5TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
            {


                public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.IndirectCost5Type.IndirectCostItems5Type master) {
                    if (null!= master.getIndirectCostTypeDescription()) {
                        // If left exists
                        if (null == master.getIndirectCostTypeDescription()) {
                            // Optional field - nothing to report
                        } else {
                            // Check value
                            checkIndirectCostTypeDescription(parentLocator, handler, master, master.getIndirectCostTypeDescription());
                        }
                    }
                    if (null!= master.getIndirectCostRate()) {
                        // If left exists
                        if (null == master.getIndirectCostRate()) {
                            // Optional field - nothing to report
                        } else {
                            // Check value
                            checkIndirectCostRate(parentLocator, handler, master, master.getIndirectCostRate());
                        }
                    }
                    if (null!= master.getIndirectCostBase()) {
                        // If left exists
                        if (null == master.getIndirectCostBase()) {
                            // Optional field - nothing to report
                        } else {
                            // Check value
                            checkIndirectCostBase(parentLocator, handler, master, master.getIndirectCostBase());
                        }
                    }
                    if (null!= master.getIndirectCostFundsRequested()) {
                        // If left exists
                        if (null == master.getIndirectCostFundsRequested()) {
                            // Optional field - nothing to report
                        } else {
                            // Check value
                            checkIndirectCostFundsRequested(parentLocator, handler, master, master.getIndirectCostFundsRequested());
                        }
                    }
                }

                public void checkIndirectCostTypeDescription(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.IndirectCost5Type.IndirectCostItems5Type master, java.lang.String value) {
                    if (value instanceof java.lang.String) {
                        java.lang.String realValue = ((java.lang.String) value);
                        // Check primitive value
                        {
                            // Perform the check
                            // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                            de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                            if (((null == realValue)? 0 :realValue.length())>= 0) {
                                // Value length is correct
                            } else {
                                problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 0);
                            }
                            if (((null == realValue)? 0 :realValue.length())<= 64) {
                                // Value length is correct
                            } else {
                                problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 64);
                            }
                            if (null!= problem) {
                                // Handle event
                                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostTypeDescription"), problem));
                            }
                        }
                    } else {
                        if (null == value) {
                        } else {
                            // Report wrong class
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostTypeDescription"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                        }
                    }
                }

                public void checkIndirectCostRate(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.IndirectCost5Type.IndirectCostItems5Type master, java.math.BigDecimal value) {
                    if (value instanceof java.math.BigDecimal) {
                        java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                        // Check primitive value
                        {
                            // Perform the check
                            // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                            de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                            // todo: Check lexical constraints. How???
                            // todo: Check lexical constraints. How???
                            if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                                // Range is valid
                            } else {
                                problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                            }
                            if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("100"))<= 0) {
                                // Range is valid
                            } else {
                                problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("100"));
                            }
                            if (null!= problem) {
                                // Handle event
                                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostRate"), problem));
                            }
                        }
                    } else {
                        if (null == value) {
                        } else {
                            // Report wrong class
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostRate"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                        }
                    }
                }

                public void checkIndirectCostBase(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.IndirectCost5Type.IndirectCostItems5Type master, java.math.BigDecimal value) {
                    if (value instanceof java.math.BigDecimal) {
                        java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                        // Check primitive value
                        {
                            // Perform the check
                            // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                            de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                            // todo: Check lexical constraints. How???
                            // todo: Check lexical constraints. How???
                            if (null!= problem) {
                                // Handle event
                                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostBase"), problem));
                            }
                        }
                    } else {
                        if (null == value) {
                        } else {
                            // Report wrong class
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostBase"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                        }
                    }
                }

                public void checkIndirectCostFundsRequested(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.IndirectCost5Type.IndirectCostItems5Type master, java.math.BigDecimal value) {
                    if (value instanceof java.math.BigDecimal) {
                        java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                        // Check primitive value
                        {
                            // Perform the check
                            // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                            de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                            // todo: Check lexical constraints. How???
                            // todo: Check lexical constraints. How???
                            if (null!= problem) {
                                // Handle event
                                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostFundsRequested"), problem));
                            }
                        }
                    } else {
                        if (null == value) {
                        } else {
                            // Report wrong class
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostFundsRequested"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                        }
                    }
                }

                public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                    check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.IndirectCost5Type.IndirectCostItems5Type) object));
                }

                public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                    check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.Periods5Type.IndirectCost5Type.IndirectCostItems5Type) object));
                }

            }

        }

    }

    public static class PeriodsTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {


        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType master) {
            if (null!= master.getBudgetPeriodStartDate()) {
                // If left exists
                if (null == master.getBudgetPeriodStartDate()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkBudgetPeriodStartDate(parentLocator, handler, master, master.getBudgetPeriodStartDate());
                }
            }
            if (null!= master.getBudgetPeriodEndDate()) {
                // If left exists
                if (null == master.getBudgetPeriodEndDate()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkBudgetPeriodEndDate(parentLocator, handler, master, master.getBudgetPeriodEndDate());
                }
            }
            // No check for primitive values
            checkBudgetPeriod(parentLocator, handler, master, new java.lang.Integer(master.getBudgetPeriod()));
            if (null == master.getDirectCost()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCost"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkDirectCost(parentLocator, handler, master, master.getDirectCost());
            }
            if (null!= master.getIndirectCost()) {
                // If left exists
                if (null == master.getIndirectCost()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkIndirectCost(parentLocator, handler, master, master.getIndirectCost());
                }
            }
            if (null == master.getTotalFundsRequestedDirectIndirectCosts()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectIndirectCosts"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkTotalFundsRequestedDirectIndirectCosts(parentLocator, handler, master, master.getTotalFundsRequestedDirectIndirectCosts());
            }
        }

        public void checkIndirectCost(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType master, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.IndirectCostType value) {
            if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.IndirectCostType) {
                gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.IndirectCostType realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.IndirectCostType) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.PeriodsTypeVerifier.IndirectCostTypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.PeriodsTypeVerifier.IndirectCostTypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCost"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCost"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkDirectCost(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType master, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.DirectCostType value) {
            if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.DirectCostType) {
                gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.DirectCostType realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.DirectCostType) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.PeriodsTypeVerifier.DirectCostTypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.PeriodsTypeVerifier.DirectCostTypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCost"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCost"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkBudgetPeriodEndDate(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType master, java.util.Calendar value) {
            if (value instanceof java.util.Calendar) {
                java.util.Calendar realValue = ((java.util.Calendar) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.DateType datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriodEndDate"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriodEndDate"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkBudgetPeriod(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType master, java.lang.Integer value) {
            if (value instanceof java.lang.Integer) {
                java.lang.Integer realValue = ((java.lang.Integer) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((java.lang.Comparable) realValue).compareTo(new java.lang.Integer(0))>= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.lang.Integer(0));
                    }
                    if (((java.lang.Comparable) realValue).compareTo(new java.lang.Integer(5))<= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.lang.Integer(5));
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriod"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriod"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkBudgetPeriodStartDate(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType master, java.util.Calendar value) {
            if (value instanceof java.util.Calendar) {
                java.util.Calendar realValue = ((java.util.Calendar) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.DateType datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriodStartDate"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriodStartDate"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkTotalFundsRequestedDirectIndirectCosts(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType master, java.math.BigDecimal value) {
            if (value instanceof java.math.BigDecimal) {
                java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    // todo: Check lexical constraints. How???
                    // todo: Check lexical constraints. How???
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectIndirectCosts"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectIndirectCosts"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType) object));
        }

        public static class DirectCostTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {


            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.DirectCostType master) {
                if (null == master.getDirectCostLessConsortiumFandA()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCostLessConsortiumFandA"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check value
                    checkDirectCostLessConsortiumFandA(parentLocator, handler, master, master.getDirectCostLessConsortiumFandA());
                }
                if (null!= master.getConsortiumFandA()) {
                    // If left exists
                    if (null == master.getConsortiumFandA()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkConsortiumFandA(parentLocator, handler, master, master.getConsortiumFandA());
                    }
                }
                if (null == master.getTotalFundsRequestedDirectCosts()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectCosts"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check value
                    checkTotalFundsRequestedDirectCosts(parentLocator, handler, master, master.getTotalFundsRequestedDirectCosts());
                }
            }

            public void checkConsortiumFandA(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.DirectCostType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ConsortiumFandA"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ConsortiumFandA"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkTotalFundsRequestedDirectCosts(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.DirectCostType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectCosts"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectCosts"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkDirectCostLessConsortiumFandA(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.DirectCostType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCostLessConsortiumFandA"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCostLessConsortiumFandA"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.DirectCostType) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.DirectCostType) object));
            }

        }

        public static class IndirectCostTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {


            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.IndirectCostType master) {
                if (null == master.getIndirectCostItems()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostItems"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check count
                    if (master.getIndirectCostItems().size()< 0) {
                        // Report minimum of occurences violated
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostItems"), new de.fzi.dbs.verification.event.structure.TooFewElementsProblem(master.getIndirectCostItems().size(), 0)));
                    }
                    if (master.getIndirectCostItems().size()> 4) {
                        // Report maximum of occurences violated
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostItems"), new de.fzi.dbs.verification.event.structure.TooManyElementsProblem(master.getIndirectCostItems().size(), 4)));
                    }
                    // Check value
                    checkIndirectCostItems(parentLocator, handler, master, master.getIndirectCostItems());
                }
                if (null!= master.getCognizantFederalAgency()) {
                    // If left exists
                    if (null == master.getCognizantFederalAgency()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCognizantFederalAgency(parentLocator, handler, master, master.getCognizantFederalAgency());
                    }
                }
                if (null!= master.getIndirectCostAgreementDate()) {
                    // If left exists
                    if (null == master.getIndirectCostAgreementDate()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkIndirectCostAgreementDate(parentLocator, handler, master, master.getIndirectCostAgreementDate());
                    }
                }
                if (null!= master.getTotalFundsRequestedIndirectCost()) {
                    // If left exists
                    if (null == master.getTotalFundsRequestedIndirectCost()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkTotalFundsRequestedIndirectCost(parentLocator, handler, master, master.getTotalFundsRequestedIndirectCost());
                    }
                }
            }

            public void checkTotalFundsRequestedIndirectCost(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.IndirectCostType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedIndirectCost"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedIndirectCost"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCognizantFederalAgency(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.IndirectCostType master, java.lang.String value) {
                if (value instanceof java.lang.String) {
                    java.lang.String realValue = ((java.lang.String) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (((null == realValue)? 0 :realValue.length())>= 0) {
                            // Value length is correct
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 0);
                        }
                        if (((null == realValue)? 0 :realValue.length())<= 180) {
                            // Value length is correct
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 180);
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CognizantFederalAgency"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CognizantFederalAgency"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkIndirectCostItems(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.IndirectCostType master, java.util.List values) {
                for (int index = 0; (index<values.size()); index ++) {
                    java.lang.Object item = values.get(index);
                    checkIndirectCostItems(parentLocator, handler, master, index, item);
                }
            }

            public void checkIndirectCostItems(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.IndirectCostType master, int index, java.lang.Object value) {
                if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.IndirectCostType.IndirectCostItemsType) {
                    gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.IndirectCostType.IndirectCostItemsType realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.IndirectCostType.IndirectCostItemsType) value);
                    {
                        // Check complex value
                        gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.PeriodsTypeVerifier.IndirectCostTypeVerifier.IndirectCostItemsTypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1.verification.PHS398ModularBudgetTypeVerifier.PeriodsTypeVerifier.IndirectCostTypeVerifier.IndirectCostItemsTypeVerifier();
                        verifier.check(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "IndirectCostItems", index), handler, realValue);
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "IndirectCostItems", index), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkIndirectCostAgreementDate(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.IndirectCostType master, java.util.Calendar value) {
                if (value instanceof java.util.Calendar) {
                    java.util.Calendar realValue = ((java.util.Calendar) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.DateType datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostAgreementDate"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostAgreementDate"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.IndirectCostType) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.IndirectCostType) object));
            }

            public static class IndirectCostItemsTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
            {


                public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.IndirectCostType.IndirectCostItemsType master) {
                    if (null!= master.getIndirectCostTypeDescription()) {
                        // If left exists
                        if (null == master.getIndirectCostTypeDescription()) {
                            // Optional field - nothing to report
                        } else {
                            // Check value
                            checkIndirectCostTypeDescription(parentLocator, handler, master, master.getIndirectCostTypeDescription());
                        }
                    }
                    if (null!= master.getIndirectCostRate()) {
                        // If left exists
                        if (null == master.getIndirectCostRate()) {
                            // Optional field - nothing to report
                        } else {
                            // Check value
                            checkIndirectCostRate(parentLocator, handler, master, master.getIndirectCostRate());
                        }
                    }
                    if (null!= master.getIndirectCostBase()) {
                        // If left exists
                        if (null == master.getIndirectCostBase()) {
                            // Optional field - nothing to report
                        } else {
                            // Check value
                            checkIndirectCostBase(parentLocator, handler, master, master.getIndirectCostBase());
                        }
                    }
                    if (null!= master.getIndirectCostFundsRequested()) {
                        // If left exists
                        if (null == master.getIndirectCostFundsRequested()) {
                            // Optional field - nothing to report
                        } else {
                            // Check value
                            checkIndirectCostFundsRequested(parentLocator, handler, master, master.getIndirectCostFundsRequested());
                        }
                    }
                }

                public void checkIndirectCostTypeDescription(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.IndirectCostType.IndirectCostItemsType master, java.lang.String value) {
                    if (value instanceof java.lang.String) {
                        java.lang.String realValue = ((java.lang.String) value);
                        // Check primitive value
                        {
                            // Perform the check
                            // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                            de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                            if (((null == realValue)? 0 :realValue.length())>= 0) {
                                // Value length is correct
                            } else {
                                problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 0);
                            }
                            if (((null == realValue)? 0 :realValue.length())<= 64) {
                                // Value length is correct
                            } else {
                                problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 64);
                            }
                            if (null!= problem) {
                                // Handle event
                                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostTypeDescription"), problem));
                            }
                        }
                    } else {
                        if (null == value) {
                        } else {
                            // Report wrong class
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostTypeDescription"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                        }
                    }
                }

                public void checkIndirectCostRate(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.IndirectCostType.IndirectCostItemsType master, java.math.BigDecimal value) {
                    if (value instanceof java.math.BigDecimal) {
                        java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                        // Check primitive value
                        {
                            // Perform the check
                            // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                            de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                            // todo: Check lexical constraints. How???
                            // todo: Check lexical constraints. How???
                            if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                                // Range is valid
                            } else {
                                problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                            }
                            if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("100"))<= 0) {
                                // Range is valid
                            } else {
                                problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("100"));
                            }
                            if (null!= problem) {
                                // Handle event
                                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostRate"), problem));
                            }
                        }
                    } else {
                        if (null == value) {
                        } else {
                            // Report wrong class
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostRate"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                        }
                    }
                }

                public void checkIndirectCostBase(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.IndirectCostType.IndirectCostItemsType master, java.math.BigDecimal value) {
                    if (value instanceof java.math.BigDecimal) {
                        java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                        // Check primitive value
                        {
                            // Perform the check
                            // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                            de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                            // todo: Check lexical constraints. How???
                            // todo: Check lexical constraints. How???
                            if (null!= problem) {
                                // Handle event
                                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostBase"), problem));
                            }
                        }
                    } else {
                        if (null == value) {
                        } else {
                            // Report wrong class
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostBase"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                        }
                    }
                }

                public void checkIndirectCostFundsRequested(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.IndirectCostType.IndirectCostItemsType master, java.math.BigDecimal value) {
                    if (value instanceof java.math.BigDecimal) {
                        java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                        // Check primitive value
                        {
                            // Perform the check
                            // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                            de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                            // todo: Check lexical constraints. How???
                            // todo: Check lexical constraints. How???
                            if (null!= problem) {
                                // Handle event
                                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostFundsRequested"), problem));
                            }
                        }
                    } else {
                        if (null == value) {
                        } else {
                            // Report wrong class
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostFundsRequested"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                        }
                    }
                }

                public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                    check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.IndirectCostType.IndirectCostItemsType) object));
                }

                public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                    check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1.PHS398ModularBudgetType.PeriodsType.IndirectCostType.IndirectCostItemsType) object));
                }

            }

        }

    }

}
