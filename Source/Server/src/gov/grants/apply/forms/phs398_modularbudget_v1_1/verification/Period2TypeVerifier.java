//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.3-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.05.19 at 04:23:48 EDT 
//


package gov.grants.apply.forms.phs398_modularbudget_v1_1.verification;

public class Period2TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
{


    public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type master) {
        if (null!= master.getBudgetPeriodStartDate2()) {
            // If left exists
            if (null == master.getBudgetPeriodStartDate2()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkBudgetPeriodStartDate2(parentLocator, handler, master, master.getBudgetPeriodStartDate2());
            }
        }
        if (null!= master.getBudgetPeriodEndDate2()) {
            // If left exists
            if (null == master.getBudgetPeriodEndDate2()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkBudgetPeriodEndDate2(parentLocator, handler, master, master.getBudgetPeriodEndDate2());
            }
        }
        // No check for primitive values
        checkBudgetPeriod2(parentLocator, handler, master, new java.lang.Integer(master.getBudgetPeriod2()));
        if (null == master.getDirectCost2()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCost2"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkDirectCost2(parentLocator, handler, master, master.getDirectCost2());
        }
        if (null!= master.getIndirectCost2()) {
            // If left exists
            if (null == master.getIndirectCost2()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkIndirectCost2(parentLocator, handler, master, master.getIndirectCost2());
            }
        }
        if (null == master.getTotalFundsRequestedDirectIndirectCosts2()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectIndirectCosts2"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkTotalFundsRequestedDirectIndirectCosts2(parentLocator, handler, master, master.getTotalFundsRequestedDirectIndirectCosts2());
        }
    }

    public void checkDirectCost2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type master, gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.DirectCost2Type value) {
        if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.DirectCost2Type) {
            gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.DirectCost2Type realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.DirectCost2Type) value);
            {
                // Check complex value
                gov.grants.apply.forms.phs398_modularbudget_v1_1.verification.Period2TypeVerifier.DirectCost2TypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1_1.verification.Period2TypeVerifier.DirectCost2TypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCost2"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCost2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkTotalFundsRequestedDirectIndirectCosts2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type master, java.math.BigDecimal value) {
        if (value instanceof java.math.BigDecimal) {
            java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                // todo: Check lexical constraints. How???
                // todo: Check lexical constraints. How???
                if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                    // Range is valid
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                }
                if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("9999999999999.99"))<= 0) {
                    // Range is valid
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("9999999999999.99"));
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectIndirectCosts2"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectIndirectCosts2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkIndirectCost2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type master, gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.IndirectCost2Type value) {
        if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.IndirectCost2Type) {
            gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.IndirectCost2Type realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.IndirectCost2Type) value);
            {
                // Check complex value
                gov.grants.apply.forms.phs398_modularbudget_v1_1.verification.Period2TypeVerifier.IndirectCost2TypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1_1.verification.Period2TypeVerifier.IndirectCost2TypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCost2"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCost2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkBudgetPeriod2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type master, java.lang.Integer value) {
        if (value instanceof java.lang.Integer) {
            java.lang.Integer realValue = ((java.lang.Integer) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (((java.lang.Comparable) realValue).compareTo(new java.lang.Integer(0))>= 0) {
                    // Range is valid
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.lang.Integer(0));
                }
                if (((java.lang.Comparable) realValue).compareTo(new java.lang.Integer(5))<= 0) {
                    // Range is valid
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.lang.Integer(5));
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriod2"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriod2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkBudgetPeriodStartDate2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type master, java.util.Calendar value) {
        if (value instanceof java.util.Calendar) {
            java.util.Calendar realValue = ((java.util.Calendar) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.DateType datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriodStartDate2"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriodStartDate2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkBudgetPeriodEndDate2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type master, java.util.Calendar value) {
        if (value instanceof java.util.Calendar) {
            java.util.Calendar realValue = ((java.util.Calendar) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.DateType datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriodEndDate2"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriodEndDate2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
        check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type) object));
    }

    public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
        check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type) object));
    }

    public static class DirectCost2TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {


        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.DirectCost2Type master) {
            if (null == master.getDirectCostLessConsortiumFandA2()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCostLessConsortiumFandA2"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkDirectCostLessConsortiumFandA2(parentLocator, handler, master, master.getDirectCostLessConsortiumFandA2());
            }
            if (null!= master.getConsortiumFandA2()) {
                // If left exists
                if (null == master.getConsortiumFandA2()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkConsortiumFandA2(parentLocator, handler, master, master.getConsortiumFandA2());
                }
            }
            if (null == master.getTotalFundsRequestedDirectCosts2()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectCosts2"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkTotalFundsRequestedDirectCosts2(parentLocator, handler, master, master.getTotalFundsRequestedDirectCosts2());
            }
        }

        public void checkTotalFundsRequestedDirectCosts2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.DirectCost2Type master, java.math.BigDecimal value) {
            if (value instanceof java.math.BigDecimal) {
                java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    // todo: Check lexical constraints. How???
                    // todo: Check lexical constraints. How???
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                    }
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("9999999999999.99"))<= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("9999999999999.99"));
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectCosts2"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedDirectCosts2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkDirectCostLessConsortiumFandA2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.DirectCost2Type master, java.math.BigDecimal value) {
            if (value instanceof java.math.BigDecimal) {
                java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    // todo: Check lexical constraints. How???
                    // todo: Check lexical constraints. How???
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                    }
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("999999999999.99"))<= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("999999999999.99"));
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCostLessConsortiumFandA2"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DirectCostLessConsortiumFandA2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkConsortiumFandA2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.DirectCost2Type master, java.math.BigDecimal value) {
            if (value instanceof java.math.BigDecimal) {
                java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    // todo: Check lexical constraints. How???
                    // todo: Check lexical constraints. How???
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                    }
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("999999999999.99"))<= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("999999999999.99"));
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ConsortiumFandA2"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ConsortiumFandA2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.DirectCost2Type) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.DirectCost2Type) object));
        }

    }

    public static class IndirectCost2TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {


        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.IndirectCost2Type master) {
            if (null == master.getIndirectCostItems2()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostItems2"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check count
                if (master.getIndirectCostItems2().size()< 0) {
                    // Report minimum of occurences violated
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostItems2"), new de.fzi.dbs.verification.event.structure.TooFewElementsProblem(master.getIndirectCostItems2().size(), 0)));
                }
                if (master.getIndirectCostItems2().size()> 4) {
                    // Report maximum of occurences violated
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostItems2"), new de.fzi.dbs.verification.event.structure.TooManyElementsProblem(master.getIndirectCostItems2().size(), 4)));
                }
                // Check value
                checkIndirectCostItems2(parentLocator, handler, master, master.getIndirectCostItems2());
            }
            if (null!= master.getCognizantFederalAgency2()) {
                // If left exists
                if (null == master.getCognizantFederalAgency2()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkCognizantFederalAgency2(parentLocator, handler, master, master.getCognizantFederalAgency2());
                }
            }
            if (null!= master.getIndirectCostAgreementDate2()) {
                // If left exists
                if (null == master.getIndirectCostAgreementDate2()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkIndirectCostAgreementDate2(parentLocator, handler, master, master.getIndirectCostAgreementDate2());
                }
            }
            if (null!= master.getTotalFundsRequestedIndirectCost2()) {
                // If left exists
                if (null == master.getTotalFundsRequestedIndirectCost2()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkTotalFundsRequestedIndirectCost2(parentLocator, handler, master, master.getTotalFundsRequestedIndirectCost2());
                }
            }
        }

        public void checkCognizantFederalAgency2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.IndirectCost2Type master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((null == realValue)? 0 :realValue.length())>= 0) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 0);
                    }
                    if (((null == realValue)? 0 :realValue.length())<= 180) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 180);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CognizantFederalAgency2"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CognizantFederalAgency2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkTotalFundsRequestedIndirectCost2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.IndirectCost2Type master, java.math.BigDecimal value) {
            if (value instanceof java.math.BigDecimal) {
                java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    // todo: Check lexical constraints. How???
                    // todo: Check lexical constraints. How???
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                    }
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("9999999999999.99"))<= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("9999999999999.99"));
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedIndirectCost2"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFundsRequestedIndirectCost2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkIndirectCostItems2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.IndirectCost2Type master, java.util.List values) {
            for (int index = 0; (index<values.size()); index ++) {
                java.lang.Object item = values.get(index);
                checkIndirectCostItems2(parentLocator, handler, master, index, item);
            }
        }

        public void checkIndirectCostItems2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.IndirectCost2Type master, int index, java.lang.Object value) {
            if (value instanceof gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.IndirectCost2Type.IndirectCostItems2Type) {
                gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.IndirectCost2Type.IndirectCostItems2Type realValue = ((gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.IndirectCost2Type.IndirectCostItems2Type) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.phs398_modularbudget_v1_1.verification.Period2TypeVerifier.IndirectCost2TypeVerifier.IndirectCostItems2TypeVerifier verifier = new gov.grants.apply.forms.phs398_modularbudget_v1_1.verification.Period2TypeVerifier.IndirectCost2TypeVerifier.IndirectCostItems2TypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "IndirectCostItems2", index), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "IndirectCostItems2", index), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkIndirectCostAgreementDate2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.IndirectCost2Type master, java.util.Calendar value) {
            if (value instanceof java.util.Calendar) {
                java.util.Calendar realValue = ((java.util.Calendar) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.DateType datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostAgreementDate2"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostAgreementDate2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.IndirectCost2Type) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.IndirectCost2Type) object));
        }

        public static class IndirectCostItems2TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {


            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.IndirectCost2Type.IndirectCostItems2Type master) {
                if (null!= master.getIndirectCostTypeDescription()) {
                    // If left exists
                    if (null == master.getIndirectCostTypeDescription()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkIndirectCostTypeDescription(parentLocator, handler, master, master.getIndirectCostTypeDescription());
                    }
                }
                if (null!= master.getIndirectCostRate()) {
                    // If left exists
                    if (null == master.getIndirectCostRate()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkIndirectCostRate(parentLocator, handler, master, master.getIndirectCostRate());
                    }
                }
                if (null!= master.getIndirectCostBase()) {
                    // If left exists
                    if (null == master.getIndirectCostBase()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkIndirectCostBase(parentLocator, handler, master, master.getIndirectCostBase());
                    }
                }
                if (null!= master.getIndirectCostFundsRequested()) {
                    // If left exists
                    if (null == master.getIndirectCostFundsRequested()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkIndirectCostFundsRequested(parentLocator, handler, master, master.getIndirectCostFundsRequested());
                    }
                }
            }

            public void checkIndirectCostTypeDescription(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.IndirectCost2Type.IndirectCostItems2Type master, java.lang.String value) {
                if (value instanceof java.lang.String) {
                    java.lang.String realValue = ((java.lang.String) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (((null == realValue)? 0 :realValue.length())>= 0) {
                            // Value length is correct
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 0);
                        }
                        if (((null == realValue)? 0 :realValue.length())<= 64) {
                            // Value length is correct
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 64);
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostTypeDescription"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostTypeDescription"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkIndirectCostRate(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.IndirectCost2Type.IndirectCostItems2Type master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostRate"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostRate"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkIndirectCostBase(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.IndirectCost2Type.IndirectCostItems2Type master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("999999999999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("999999999999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostBase"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostBase"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkIndirectCostFundsRequested(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.IndirectCost2Type.IndirectCostItems2Type master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("999999999999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("999999999999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostFundsRequested"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IndirectCostFundsRequested"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.IndirectCost2Type.IndirectCostItems2Type) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.phs398_modularbudget_v1_1.Period2Type.IndirectCost2Type.IndirectCostItems2Type) object));
            }

        }

    }

}
