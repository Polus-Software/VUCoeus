//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.02.19 at 08:38:53 CST 
//


package gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.verification;

public class PHS398CoverPageSupplement30TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
{

    protected java.lang.Object[] values = new java.lang.Object[] {"N: No", "Y: Yes"};
    protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));
    protected java.lang.Object[] values0 = new java.lang.Object[] {"N: No", "Y: Yes"};
    protected java.util.Set valueSet0 = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values0)));
    protected java.lang.Object[] values1 = new java.lang.Object[] {"N: No", "Y: Yes"};
    protected java.util.Set valueSet1 = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values1)));
    protected java.lang.Object[] values2 = new java.lang.Object[] {"N: No", "Y: Yes"};
    protected java.util.Set valueSet2 = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values2)));
    protected java.lang.Object[] values3 = new java.lang.Object[] {"N: No", "Y: Yes"};
    protected java.util.Set valueSet3 = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values3)));

    public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type master) {
        if (null == master.getFormVersion()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormVersion"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkFormVersion(parentLocator, handler, master, master.getFormVersion());
        }
        if (null!= master.getClinicalTrial()) {
            // If left exists
            if (null == master.getClinicalTrial()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkClinicalTrial(parentLocator, handler, master, master.getClinicalTrial());
            }
        }
        if (null!= master.getVertebrateAnimals()) {
            // If left exists
            if (null == master.getVertebrateAnimals()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkVertebrateAnimals(parentLocator, handler, master, master.getVertebrateAnimals());
            }
        }
        if (null == master.getProgramIncome()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ProgramIncome"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkProgramIncome(parentLocator, handler, master, master.getProgramIncome());
        }
        if (null == master.getIncomeBudgetPeriod()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IncomeBudgetPeriod"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check count
            if (master.getIncomeBudgetPeriod().size()< 0) {
                // Report minimum of occurences violated
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IncomeBudgetPeriod"), new de.fzi.dbs.verification.event.structure.TooFewElementsProblem(master.getIncomeBudgetPeriod().size(), 0)));
            }
            if (master.getIncomeBudgetPeriod().size()> 10) {
                // Report maximum of occurences violated
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IncomeBudgetPeriod"), new de.fzi.dbs.verification.event.structure.TooManyElementsProblem(master.getIncomeBudgetPeriod().size(), 10)));
            }
            // Check value
            checkIncomeBudgetPeriod(parentLocator, handler, master, master.getIncomeBudgetPeriod());
        }
        if (null!= master.getStemCells()) {
            // If left exists
            if (null == master.getStemCells()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkStemCells(parentLocator, handler, master, master.getStemCells());
            }
        }
        if (null!= master.getIsInventionsAndPatents()) {
            // If left exists
            if (null == master.getIsInventionsAndPatents()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkIsInventionsAndPatents(parentLocator, handler, master, master.getIsInventionsAndPatents());
            }
        }
        if (null!= master.getIsPreviouslyReported()) {
            // If left exists
            if (null == master.getIsPreviouslyReported()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkIsPreviouslyReported(parentLocator, handler, master, master.getIsPreviouslyReported());
            }
        }
        if (null!= master.getIsChangeOfPDPI()) {
            // If left exists
            if (null == master.getIsChangeOfPDPI()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkIsChangeOfPDPI(parentLocator, handler, master, master.getIsChangeOfPDPI());
            }
        }
        if (null!= master.getFormerPDName()) {
            // If left exists
            if (null == master.getFormerPDName()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkFormerPDName(parentLocator, handler, master, master.getFormerPDName());
            }
        }
        if (null!= master.getIsChangeOfInstitution()) {
            // If left exists
            if (null == master.getIsChangeOfInstitution()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkIsChangeOfInstitution(parentLocator, handler, master, master.getIsChangeOfInstitution());
            }
        }
        if (null!= master.getFormerInstitutionName()) {
            // If left exists
            if (null == master.getFormerInstitutionName()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkFormerInstitutionName(parentLocator, handler, master, master.getFormerInstitutionName());
            }
        }
    }

    public void checkProgramIncome(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (valueSet.contains(realValue)) {
                    // Value is found in the enumeration, it is valid
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ProgramIncome"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ProgramIncome"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkClinicalTrial(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type master, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.ClinicalTrialType value) {
        if (value instanceof gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.ClinicalTrialType) {
            gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.ClinicalTrialType realValue = ((gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.ClinicalTrialType) value);
            {
                // Check complex value
                gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.verification.PHS398CoverPageSupplement30TypeVerifier.ClinicalTrialTypeVerifier verifier = new gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.verification.PHS398CoverPageSupplement30TypeVerifier.ClinicalTrialTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ClinicalTrial"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ClinicalTrial"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkIncomeBudgetPeriod(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type master, java.util.List values) {
        for (int index = 0; (index<values.size()); index ++) {
            java.lang.Object item = values.get(index);
            checkIncomeBudgetPeriod(parentLocator, handler, master, index, item);
        }
    }

    public void checkIncomeBudgetPeriod(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type master, int index, java.lang.Object value) {
        if (value instanceof gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.IncomeBudgetPeriodType) {
            gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.IncomeBudgetPeriodType realValue = ((gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.IncomeBudgetPeriodType) value);
            {
                // Check complex value
                gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.verification.PHS398CoverPageSupplement30TypeVerifier.IncomeBudgetPeriodTypeVerifier verifier = new gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.verification.PHS398CoverPageSupplement30TypeVerifier.IncomeBudgetPeriodTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "IncomeBudgetPeriod", index), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "IncomeBudgetPeriod", index), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkIsInventionsAndPatents(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (valueSet0 .contains(realValue)) {
                    // Value is found in the enumeration, it is valid
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet0);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsInventionsAndPatents"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsInventionsAndPatents"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkIsPreviouslyReported(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (valueSet1 .contains(realValue)) {
                    // Value is found in the enumeration, it is valid
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet1);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsPreviouslyReported"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsPreviouslyReported"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkIsChangeOfPDPI(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (valueSet2 .contains(realValue)) {
                    // Value is found in the enumeration, it is valid
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet2);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsChangeOfPDPI"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsChangeOfPDPI"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkStemCells(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type master, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.StemCellsType value) {
        if (value instanceof gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.StemCellsType) {
            gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.StemCellsType realValue = ((gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.StemCellsType) value);
            {
                // Check complex value
                gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.verification.PHS398CoverPageSupplement30TypeVerifier.StemCellsTypeVerifier verifier = new gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.verification.PHS398CoverPageSupplement30TypeVerifier.StemCellsTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "StemCells"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "StemCells"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkIsChangeOfInstitution(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (valueSet3 .contains(realValue)) {
                    // Value is found in the enumeration, it is valid
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet3);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsChangeOfInstitution"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsChangeOfInstitution"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkFormVersion(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (((null == realValue)? 0 :realValue.length())>= 1) {
                    // Value length is correct
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1);
                }
                if (((null == realValue)? 0 :realValue.length())<= 30) {
                    // Value length is correct
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 30);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormVersion"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormVersion"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkFormerInstitutionName(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (((null == realValue)? 0 :realValue.length())>= 1) {
                    // Value length is correct
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1);
                }
                if (((null == realValue)? 0 :realValue.length())<= 60) {
                    // Value length is correct
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 60);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormerInstitutionName"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormerInstitutionName"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkFormerPDName(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type master, gov.grants.apply.system.globallibrary_v2.HumanNameDataType value) {
        if (value instanceof gov.grants.apply.system.globallibrary_v2.HumanNameDataType) {
            gov.grants.apply.system.globallibrary_v2.HumanNameDataType realValue = ((gov.grants.apply.system.globallibrary_v2.HumanNameDataType) value);
            {
                // Check complex value
                gov.grants.apply.system.globallibrary_v2.verification.HumanNameDataTypeVerifier verifier = new gov.grants.apply.system.globallibrary_v2.verification.HumanNameDataTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormerPDName"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormerPDName"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkVertebrateAnimals(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type master, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.VertebrateAnimalsType value) {
        if (value instanceof gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.VertebrateAnimalsType) {
            gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.VertebrateAnimalsType realValue = ((gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.VertebrateAnimalsType) value);
            {
                // Check complex value
                gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.verification.PHS398CoverPageSupplement30TypeVerifier.VertebrateAnimalsTypeVerifier verifier = new gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.verification.PHS398CoverPageSupplement30TypeVerifier.VertebrateAnimalsTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "VertebrateAnimals"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "VertebrateAnimals"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
        check(parentLocator, handler, ((gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type) object));
    }

    public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
        check(null, handler, ((gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type) object));
    }

    public static class ClinicalTrialTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {

        protected java.lang.Object[] values = new java.lang.Object[] {"N: No", "Y: Yes"};
        protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));
        protected java.lang.Object[] values0 = new java.lang.Object[] {"N: No", "Y: Yes"};
        protected java.util.Set valueSet0 = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values0)));

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.ClinicalTrialType master) {
            if (null!= master.getIsClinicalTrial()) {
                // If left exists
                if (null == master.getIsClinicalTrial()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkIsClinicalTrial(parentLocator, handler, master, master.getIsClinicalTrial());
                }
            }
            if (null!= master.getIsPhaseIIIClinicalTrial()) {
                // If left exists
                if (null == master.getIsPhaseIIIClinicalTrial()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkIsPhaseIIIClinicalTrial(parentLocator, handler, master, master.getIsPhaseIIIClinicalTrial());
                }
            }
        }

        public void checkIsPhaseIIIClinicalTrial(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.ClinicalTrialType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet.contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsPhaseIIIClinicalTrial"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsPhaseIIIClinicalTrial"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkIsClinicalTrial(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.ClinicalTrialType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet0 .contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet0);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsClinicalTrial"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsClinicalTrial"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.ClinicalTrialType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.ClinicalTrialType) object));
        }

    }

    public static class IncomeBudgetPeriodTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {


        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.IncomeBudgetPeriodType master) {
            // No check for primitive values
            checkBudgetPeriod(parentLocator, handler, master, new java.lang.Integer(master.getBudgetPeriod()));
            if (null == master.getAnticipatedAmount()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AnticipatedAmount"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkAnticipatedAmount(parentLocator, handler, master, master.getAnticipatedAmount());
            }
            if (null == master.getSource()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Source"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkSource(parentLocator, handler, master, master.getSource());
            }
        }

        public void checkSource(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.IncomeBudgetPeriodType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((null == realValue)? 0 :realValue.length())>= 0) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 0);
                    }
                    if (((null == realValue)? 0 :realValue.length())<= 150) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 150);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Source"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Source"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkBudgetPeriod(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.IncomeBudgetPeriodType master, java.lang.Integer value) {
            if (value instanceof java.lang.Integer) {
                java.lang.Integer realValue = ((java.lang.Integer) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((java.lang.Comparable) realValue).compareTo(new java.lang.Integer(1))>= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.lang.Integer(1));
                    }
                    if (((java.lang.Comparable) realValue).compareTo(new java.lang.Integer(10))<= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.lang.Integer(10));
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriod"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriod"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkAnticipatedAmount(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.IncomeBudgetPeriodType master, java.math.BigDecimal value) {
            if (value instanceof java.math.BigDecimal) {
                java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    // todo: Check lexical constraints. How???
                    // todo: Check lexical constraints. How???
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                    }
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("999999999999.99"))<= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("999999999999.99"));
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AnticipatedAmount"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AnticipatedAmount"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.IncomeBudgetPeriodType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.IncomeBudgetPeriodType) object));
        }

    }

    public static class StemCellsTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {

        protected java.lang.Object[] values = new java.lang.Object[] {"N: No", "Y: Yes"};
        protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));
        protected java.lang.Object[] values0 = new java.lang.Object[] {"N: No", "Y: Yes"};
        protected java.util.Set valueSet0 = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values0)));

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.StemCellsType master) {
            if (null == master.getIsHumanStemCellsInvolved()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsHumanStemCellsInvolved"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkIsHumanStemCellsInvolved(parentLocator, handler, master, master.getIsHumanStemCellsInvolved());
            }
            if (null!= master.getStemCellsIndicator()) {
                // If left exists
                if (null == master.getStemCellsIndicator()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkStemCellsIndicator(parentLocator, handler, master, master.getStemCellsIndicator());
                }
            }
            if (null == master.getCellLines()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CellLines"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check count
                if (master.getCellLines().size()< 0) {
                    // Report minimum of occurences violated
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CellLines"), new de.fzi.dbs.verification.event.structure.TooFewElementsProblem(master.getCellLines().size(), 0)));
                }
                if (master.getCellLines().size()> 200) {
                    // Report maximum of occurences violated
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CellLines"), new de.fzi.dbs.verification.event.structure.TooManyElementsProblem(master.getCellLines().size(), 200)));
                }
                // Check value
                checkCellLines(parentLocator, handler, master, master.getCellLines());
            }
        }

        public void checkCellLines(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.StemCellsType master, java.util.List values) {
            for (int index = 0; (index<values.size()); index ++) {
                java.lang.Object item = values.get(index);
                checkCellLines(parentLocator, handler, master, index, item);
            }
        }

        public void checkCellLines(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.StemCellsType master, int index, java.lang.Object value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((null == realValue)? 0 :realValue.length())>= 0) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 0);
                    }
                    if (((null == realValue)? 0 :realValue.length())<= 4) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 4);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "CellLines", index), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "CellLines", index), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkStemCellsIndicator(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.StemCellsType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet.contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "StemCellsIndicator"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "StemCellsIndicator"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkIsHumanStemCellsInvolved(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.StemCellsType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet0 .contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet0);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsHumanStemCellsInvolved"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsHumanStemCellsInvolved"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.StemCellsType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.StemCellsType) object));
        }

    }

    public static class VertebrateAnimalsTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {

        protected java.lang.Object[] values = new java.lang.Object[] {"N: No", "Y: Yes"};
        protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));
        protected java.lang.Object[] values0 = new java.lang.Object[] {"N: No", "Y: Yes"};
        protected java.util.Set valueSet0 = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values0)));

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.VertebrateAnimalsType master) {
            if (null!= master.getAnimalEuthanasiaIndicator()) {
                // If left exists
                if (null == master.getAnimalEuthanasiaIndicator()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkAnimalEuthanasiaIndicator(parentLocator, handler, master, master.getAnimalEuthanasiaIndicator());
                }
            }
            if (null!= master.getAVMAConsistentIndicator()) {
                // If left exists
                if (null == master.getAVMAConsistentIndicator()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkAVMAConsistentIndicator(parentLocator, handler, master, master.getAVMAConsistentIndicator());
                }
            }
            if (null!= master.getEuthanasiaMethodDescription()) {
                // If left exists
                if (null == master.getEuthanasiaMethodDescription()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkEuthanasiaMethodDescription(parentLocator, handler, master, master.getEuthanasiaMethodDescription());
                }
            }
        }

        public void checkAnimalEuthanasiaIndicator(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.VertebrateAnimalsType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet.contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AnimalEuthanasiaIndicator"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AnimalEuthanasiaIndicator"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkEuthanasiaMethodDescription(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.VertebrateAnimalsType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((null == realValue)? 0 :realValue.length())>= 0) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 0);
                    }
                    if (((null == realValue)? 0 :realValue.length())<= 1000) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1000);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "EuthanasiaMethodDescription"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "EuthanasiaMethodDescription"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkAVMAConsistentIndicator(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.VertebrateAnimalsType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet0 .contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet0);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AVMAConsistentIndicator"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AVMAConsistentIndicator"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.VertebrateAnimalsType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.phs398_coverpagesupplement_v3_0.PHS398CoverPageSupplement30Type.VertebrateAnimalsType) object));
        }

    }

}
