//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.3-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.08.19 at 02:55:10 EDT 
//


package gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.verification;

public class PHS398CoverPageSupplement14TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
{


    public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type master) {
        if (null == master.getFormVersion()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormVersion"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkFormVersion(parentLocator, handler, master, master.getFormVersion());
        }
        if (null == master.getPDPI()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "PDPI"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkPDPI(parentLocator, handler, master, master.getPDPI());
        }
        if (null!= master.getClinicalTrial()) {
            // If left exists
            if (null == master.getClinicalTrial()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkClinicalTrial(parentLocator, handler, master, master.getClinicalTrial());
            }
        }
        if (null == master.getContactPersonInfo()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ContactPersonInfo"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkContactPersonInfo(parentLocator, handler, master, master.getContactPersonInfo());
        }
        if (null!= master.getStemCells()) {
            // If left exists
            if (null == master.getStemCells()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkStemCells(parentLocator, handler, master, master.getStemCells());
            }
        }
    }

    public void checkPDPI(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type master, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.PDPIType value) {
        if (value instanceof gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.PDPIType) {
            gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.PDPIType realValue = ((gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.PDPIType) value);
            {
                // Check complex value
                gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.verification.PHS398CoverPageSupplement14TypeVerifier.PDPITypeVerifier verifier = new gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.verification.PHS398CoverPageSupplement14TypeVerifier.PDPITypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "PDPI"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "PDPI"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkStemCells(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type master, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.StemCellsType value) {
        if (value instanceof gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.StemCellsType) {
            gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.StemCellsType realValue = ((gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.StemCellsType) value);
            {
                // Check complex value
                gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.verification.PHS398CoverPageSupplement14TypeVerifier.StemCellsTypeVerifier verifier = new gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.verification.PHS398CoverPageSupplement14TypeVerifier.StemCellsTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "StemCells"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "StemCells"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkFormVersion(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (((null == realValue)? 0 :realValue.length())>= 1) {
                    // Value length is correct
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1);
                }
                if (((null == realValue)? 0 :realValue.length())<= 30) {
                    // Value length is correct
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 30);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormVersion"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormVersion"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkContactPersonInfo(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type master, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.ContactPersonInfoType value) {
        if (value instanceof gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.ContactPersonInfoType) {
            gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.ContactPersonInfoType realValue = ((gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.ContactPersonInfoType) value);
            {
                // Check complex value
                gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.verification.PHS398CoverPageSupplement14TypeVerifier.ContactPersonInfoTypeVerifier verifier = new gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.verification.PHS398CoverPageSupplement14TypeVerifier.ContactPersonInfoTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ContactPersonInfo"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ContactPersonInfo"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkClinicalTrial(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type master, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.ClinicalTrialType value) {
        if (value instanceof gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.ClinicalTrialType) {
            gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.ClinicalTrialType realValue = ((gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.ClinicalTrialType) value);
            {
                // Check complex value
                gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.verification.PHS398CoverPageSupplement14TypeVerifier.ClinicalTrialTypeVerifier verifier = new gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.verification.PHS398CoverPageSupplement14TypeVerifier.ClinicalTrialTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ClinicalTrial"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ClinicalTrial"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
        check(parentLocator, handler, ((gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type) object));
    }

    public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
        check(null, handler, ((gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type) object));
    }

    public static class ClinicalTrialTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {

        protected java.lang.Object[] values = new java.lang.Object[] {"N: No", "Y: Yes"};
        protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));
        protected java.lang.Object[] values0 = new java.lang.Object[] {"N: No", "Y: Yes"};
        protected java.util.Set valueSet0 = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values0)));

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.ClinicalTrialType master) {
            if (null!= master.getIsClinicalTrial()) {
                // If left exists
                if (null == master.getIsClinicalTrial()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkIsClinicalTrial(parentLocator, handler, master, master.getIsClinicalTrial());
                }
            }
            if (null!= master.getIsPhaseIIIClinicalTrial()) {
                // If left exists
                if (null == master.getIsPhaseIIIClinicalTrial()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkIsPhaseIIIClinicalTrial(parentLocator, handler, master, master.getIsPhaseIIIClinicalTrial());
                }
            }
        }

        public void checkIsClinicalTrial(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.ClinicalTrialType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet.contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsClinicalTrial"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsClinicalTrial"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkIsPhaseIIIClinicalTrial(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.ClinicalTrialType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet0 .contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet0);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsPhaseIIIClinicalTrial"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsPhaseIIIClinicalTrial"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.ClinicalTrialType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.ClinicalTrialType) object));
        }

    }

    public static class ContactPersonInfoTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {


        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.ContactPersonInfoType master) {
            if (null == master.getContactName()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ContactName"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkContactName(parentLocator, handler, master, master.getContactName());
            }
            if (null == master.getContactPhone()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ContactPhone"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkContactPhone(parentLocator, handler, master, master.getContactPhone());
            }
            if (null!= master.getContactFax()) {
                // If left exists
                if (null == master.getContactFax()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkContactFax(parentLocator, handler, master, master.getContactFax());
                }
            }
            if (null!= master.getContactEmail()) {
                // If left exists
                if (null == master.getContactEmail()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkContactEmail(parentLocator, handler, master, master.getContactEmail());
                }
            }
            if (null == master.getContactTitle()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ContactTitle"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkContactTitle(parentLocator, handler, master, master.getContactTitle());
            }
            if (null == master.getContactAddress()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ContactAddress"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkContactAddress(parentLocator, handler, master, master.getContactAddress());
            }
        }

        public void checkContactAddress(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.ContactPersonInfoType master, gov.grants.apply.system.globallibrary_v2.AddressDataType value) {
            if (value instanceof gov.grants.apply.system.globallibrary_v2.AddressDataType) {
                gov.grants.apply.system.globallibrary_v2.AddressDataType realValue = ((gov.grants.apply.system.globallibrary_v2.AddressDataType) value);
                {
                    // Check complex value
                    gov.grants.apply.system.globallibrary_v2.verification.AddressDataTypeVerifier verifier = new gov.grants.apply.system.globallibrary_v2.verification.AddressDataTypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ContactAddress"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ContactAddress"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkContactEmail(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.ContactPersonInfoType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((null == realValue)? 0 :realValue.length())>= 1) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1);
                    }
                    if (((null == realValue)? 0 :realValue.length())<= 60) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 60);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ContactEmail"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ContactEmail"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkContactTitle(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.ContactPersonInfoType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((null == realValue)? 0 :realValue.length())>= 1) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1);
                    }
                    if (((null == realValue)? 0 :realValue.length())<= 45) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 45);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ContactTitle"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ContactTitle"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkContactFax(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.ContactPersonInfoType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((null == realValue)? 0 :realValue.length())>= 1) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1);
                    }
                    if (((null == realValue)? 0 :realValue.length())<= 25) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 25);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ContactFax"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ContactFax"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkContactName(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.ContactPersonInfoType master, gov.grants.apply.system.globallibrary_v2.HumanNameDataType value) {
            if (value instanceof gov.grants.apply.system.globallibrary_v2.HumanNameDataType) {
                gov.grants.apply.system.globallibrary_v2.HumanNameDataType realValue = ((gov.grants.apply.system.globallibrary_v2.HumanNameDataType) value);
                {
                    // Check complex value
                    gov.grants.apply.system.globallibrary_v2.verification.HumanNameDataTypeVerifier verifier = new gov.grants.apply.system.globallibrary_v2.verification.HumanNameDataTypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ContactName"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ContactName"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkContactPhone(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.ContactPersonInfoType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((null == realValue)? 0 :realValue.length())>= 1) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1);
                    }
                    if (((null == realValue)? 0 :realValue.length())<= 25) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 25);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ContactPhone"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ContactPhone"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.ContactPersonInfoType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.ContactPersonInfoType) object));
        }

    }

    public static class PDPITypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {


        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.PDPIType master) {
            if (null == master.getPDPIName()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "PDPIName"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkPDPIName(parentLocator, handler, master, master.getPDPIName());
            }
        }

        public void checkPDPIName(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.PDPIType master, gov.grants.apply.system.globallibrary_v2.HumanNameDataType value) {
            if (value instanceof gov.grants.apply.system.globallibrary_v2.HumanNameDataType) {
                gov.grants.apply.system.globallibrary_v2.HumanNameDataType realValue = ((gov.grants.apply.system.globallibrary_v2.HumanNameDataType) value);
                {
                    // Check complex value
                    gov.grants.apply.system.globallibrary_v2.verification.HumanNameDataTypeVerifier verifier = new gov.grants.apply.system.globallibrary_v2.verification.HumanNameDataTypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "PDPIName"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "PDPIName"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.PDPIType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.PDPIType) object));
        }

    }

    public static class StemCellsTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {

        protected java.lang.Object[] values = new java.lang.Object[] {"N: No", "Y: Yes"};
        protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));
        protected java.lang.Object[] values0 = new java.lang.Object[] {"N: No", "Y: Yes"};
        protected java.util.Set valueSet0 = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values0)));

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.StemCellsType master) {
            if (null == master.getIsHumanStemCellsInvolved()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsHumanStemCellsInvolved"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkIsHumanStemCellsInvolved(parentLocator, handler, master, master.getIsHumanStemCellsInvolved());
            }
            if (null!= master.getStemCellsIndicator()) {
                // If left exists
                if (null == master.getStemCellsIndicator()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkStemCellsIndicator(parentLocator, handler, master, master.getStemCellsIndicator());
                }
            }
            if (null == master.getCellLines()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CellLines"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check count
                if (master.getCellLines().size()< 0) {
                    // Report minimum of occurences violated
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CellLines"), new de.fzi.dbs.verification.event.structure.TooFewElementsProblem(master.getCellLines().size(), 0)));
                }
                if (master.getCellLines().size()> 20) {
                    // Report maximum of occurences violated
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CellLines"), new de.fzi.dbs.verification.event.structure.TooManyElementsProblem(master.getCellLines().size(), 20)));
                }
                // Check value
                checkCellLines(parentLocator, handler, master, master.getCellLines());
            }
        }

        public void checkIsHumanStemCellsInvolved(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.StemCellsType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet.contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsHumanStemCellsInvolved"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsHumanStemCellsInvolved"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkCellLines(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.StemCellsType master, java.util.List values) {
            for (int index = 0; (index<values.size()); index ++) {
                java.lang.Object item = values.get(index);
                checkCellLines(parentLocator, handler, master, index, item);
            }
        }

        public void checkCellLines(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.StemCellsType master, int index, java.lang.Object value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((null == realValue)? 0 :realValue.length())>= 0) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 0);
                    }
                    if (((null == realValue)? 0 :realValue.length())<= 4) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 4);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "CellLines", index), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "CellLines", index), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkStemCellsIndicator(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.StemCellsType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet0 .contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet0);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "StemCellsIndicator"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "StemCellsIndicator"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.StemCellsType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.phs398_coverpagesupplement_1_4_v1_4.PHS398CoverPageSupplement14Type.StemCellsType) object));
        }

    }

}
