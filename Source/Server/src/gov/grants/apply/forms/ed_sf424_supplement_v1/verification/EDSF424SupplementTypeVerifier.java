//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.02.13 at 11:23:34 AM EST 
//


package gov.grants.apply.forms.ed_sf424_supplement_v1.verification;

public class EDSF424SupplementTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
{

    protected java.lang.Object[] values = new java.lang.Object[] {"Yes", "No"};
    protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));
    protected java.lang.Object[] values0 = new java.lang.Object[] {"Yes", "No", "NotApplicable"};
    protected java.util.Set valueSet0 = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values0)));
    protected java.lang.Object[] values1 = new java.lang.Object[] {"Yes", "No"};
    protected java.util.Set valueSet1 = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values1)));

    public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType master) {
        if (null == master.getFormVersion()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormVersion"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkFormVersion(parentLocator, handler, master, master.getFormVersion());
        }
        if (null == master.getProjectDirector()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ProjectDirector"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkProjectDirector(parentLocator, handler, master, master.getProjectDirector());
        }
        if (null!= master.getIsNoviceApplicant()) {
            // If left exists
            if (null == master.getIsNoviceApplicant()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkIsNoviceApplicant(parentLocator, handler, master, master.getIsNoviceApplicant());
            }
        }
        if (null!= master.getIsHumanResearch()) {
            // If left exists
            if (null == master.getIsHumanResearch()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkIsHumanResearch(parentLocator, handler, master, master.getIsHumanResearch());
            }
        }
        if (null!= master.getIsHumanResearchExempt()) {
            // If left exists
            if (null == master.getIsHumanResearchExempt()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkIsHumanResearchExempt(parentLocator, handler, master, master.getIsHumanResearchExempt());
            }
        }
        if (null!= master.getExemptionsNumber()) {
            // If left exists
            if (null == master.getExemptionsNumber()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkExemptionsNumber(parentLocator, handler, master, master.getExemptionsNumber());
            }
        }
        if (null!= master.getAssuranceNumber()) {
            // If left exists
            if (null == master.getAssuranceNumber()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkAssuranceNumber(parentLocator, handler, master, master.getAssuranceNumber());
            }
        }
        if (null!= master.getAttachment()) {
            // If left exists
            if (null == master.getAttachment()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkAttachment(parentLocator, handler, master, master.getAttachment());
            }
        }
    }

    public void checkProjectDirector(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType master, gov.grants.apply.system.globallibrary_v1.ContactPersonDataType value) {
        if (value instanceof gov.grants.apply.system.globallibrary_v1.ContactPersonDataType) {
            gov.grants.apply.system.globallibrary_v1.ContactPersonDataType realValue = ((gov.grants.apply.system.globallibrary_v1.ContactPersonDataType) value);
            {
                // Check complex value
                gov.grants.apply.system.globallibrary_v1.verification.ContactPersonDataTypeVerifier verifier = new gov.grants.apply.system.globallibrary_v1.verification.ContactPersonDataTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ProjectDirector"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ProjectDirector"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkIsHumanResearch(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (valueSet.contains(realValue)) {
                    // Value is found in the enumeration, it is valid
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsHumanResearch"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsHumanResearch"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkExemptionsNumber(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType master, gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType.ExemptionsNumberType value) {
        if (value instanceof gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType.ExemptionsNumberType) {
            gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType.ExemptionsNumberType realValue = ((gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType.ExemptionsNumberType) value);
            {
                // Check complex value
                gov.grants.apply.forms.ed_sf424_supplement_v1.verification.EDSF424SupplementTypeVerifier.ExemptionsNumberTypeVerifier verifier = new gov.grants.apply.forms.ed_sf424_supplement_v1.verification.EDSF424SupplementTypeVerifier.ExemptionsNumberTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ExemptionsNumber"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ExemptionsNumber"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkFormVersion(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (((null == realValue)? 0 :realValue.length())>= 1) {
                    // Value length is correct
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1);
                }
                if (((null == realValue)? 0 :realValue.length())<= 30) {
                    // Value length is correct
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 30);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormVersion"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormVersion"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkIsNoviceApplicant(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (valueSet0 .contains(realValue)) {
                    // Value is found in the enumeration, it is valid
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet0);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsNoviceApplicant"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsNoviceApplicant"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkAssuranceNumber(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType master, gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType.AssuranceNumberType value) {
        if (value instanceof gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType.AssuranceNumberType) {
            gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType.AssuranceNumberType realValue = ((gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType.AssuranceNumberType) value);
            {
                // Check complex value
                gov.grants.apply.forms.ed_sf424_supplement_v1.verification.EDSF424SupplementTypeVerifier.AssuranceNumberTypeVerifier verifier = new gov.grants.apply.forms.ed_sf424_supplement_v1.verification.EDSF424SupplementTypeVerifier.AssuranceNumberTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AssuranceNumber"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AssuranceNumber"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkIsHumanResearchExempt(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (valueSet1 .contains(realValue)) {
                    // Value is found in the enumeration, it is valid
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet1);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsHumanResearchExempt"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsHumanResearchExempt"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkAttachment(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType master, gov.grants.apply.system.attachments_v1.AttachedFileDataType value) {
        if (value instanceof gov.grants.apply.system.attachments_v1.AttachedFileDataType) {
            gov.grants.apply.system.attachments_v1.AttachedFileDataType realValue = ((gov.grants.apply.system.attachments_v1.AttachedFileDataType) value);
            {
                // Check complex value
                gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier verifier = new gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Attachment"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Attachment"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
        check(parentLocator, handler, ((gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType) object));
    }

    public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
        check(null, handler, ((gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType) object));
    }

    public static class AssuranceNumberTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {

        protected java.lang.Object[] values = new java.lang.Object[] {"Yes", "No"};
        protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType.AssuranceNumberType master) {
            if (null!= master.getIsHumanResearchExempt()) {
                // If left exists
                if (null == master.getIsHumanResearchExempt()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkIsHumanResearchExempt(parentLocator, handler, master, master.getIsHumanResearchExempt());
                }
            }
            if (null == master.getValue()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Value"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkValue(parentLocator, handler, master, master.getValue());
            }
        }

        public void checkValue(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType.AssuranceNumberType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((null == realValue)? 0 :realValue.length())>= 1) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1);
                    }
                    if (((null == realValue)? 0 :realValue.length())<= 255) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 255);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Value"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Value"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkIsHumanResearchExempt(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType.AssuranceNumberType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet.contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsHumanResearchExempt"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsHumanResearchExempt"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType.AssuranceNumberType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType.AssuranceNumberType) object));
        }

    }

    public static class ExemptionsNumberTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {

        protected java.lang.Object[] values = new java.lang.Object[] {"Yes", "No"};
        protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType.ExemptionsNumberType master) {
            if (null!= master.getIsHumanResearchExempt()) {
                // If left exists
                if (null == master.getIsHumanResearchExempt()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkIsHumanResearchExempt(parentLocator, handler, master, master.getIsHumanResearchExempt());
                }
            }
            if (null == master.getValue()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Value"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkValue(parentLocator, handler, master, master.getValue());
            }
        }

        public void checkValue(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType.ExemptionsNumberType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((null == realValue)? 0 :realValue.length())>= 1) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1);
                    }
                    if (((null == realValue)? 0 :realValue.length())<= 255) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 255);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Value"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Value"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkIsHumanResearchExempt(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType.ExemptionsNumberType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet.contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsHumanResearchExempt"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IsHumanResearchExempt"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType.ExemptionsNumberType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.ed_sf424_supplement_v1.EDSF424SupplementType.ExemptionsNumberType) object));
        }

    }

}
