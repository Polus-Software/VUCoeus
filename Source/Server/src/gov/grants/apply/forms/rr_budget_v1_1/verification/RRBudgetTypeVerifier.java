//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.3-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.05.19 at 04:23:48 EDT 
//


package gov.grants.apply.forms.rr_budget_v1_1.verification;

public class RRBudgetTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
{

    protected java.lang.Object[] values = new java.lang.Object[] {"Project", "Subaward/Consortium"};
    protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));

    public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType master) {
        if (null == master.getFormVersion()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormVersion"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkFormVersion(parentLocator, handler, master, master.getFormVersion());
        }
        if (null == master.getDUNSID()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DUNSID"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkDUNSID(parentLocator, handler, master, master.getDUNSID());
        }
        if (null == master.getBudgetType()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetType"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkBudgetType(parentLocator, handler, master, master.getBudgetType());
        }
        if (null!= master.getOrganizationName()) {
            // If left exists
            if (null == master.getOrganizationName()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkOrganizationName(parentLocator, handler, master, master.getOrganizationName());
            }
        }
        if (null == master.getBudgetYear1()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetYear1"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkBudgetYear1(parentLocator, handler, master, master.getBudgetYear1());
        }
        if (null!= master.getBudgetYear2()) {
            // If left exists
            if (null == master.getBudgetYear2()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkBudgetYear2(parentLocator, handler, master, master.getBudgetYear2());
            }
        }
        if (null!= master.getBudgetYear3()) {
            // If left exists
            if (null == master.getBudgetYear3()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkBudgetYear3(parentLocator, handler, master, master.getBudgetYear3());
            }
        }
        if (null!= master.getBudgetYear4()) {
            // If left exists
            if (null == master.getBudgetYear4()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkBudgetYear4(parentLocator, handler, master, master.getBudgetYear4());
            }
        }
        if (null!= master.getBudgetYear5()) {
            // If left exists
            if (null == master.getBudgetYear5()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkBudgetYear5(parentLocator, handler, master, master.getBudgetYear5());
            }
        }
        if (null == master.getBudgetSummary()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetSummary"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkBudgetSummary(parentLocator, handler, master, master.getBudgetSummary());
        }
    }

    public void checkBudgetYear3(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType master, gov.grants.apply.forms.rr_budget_v1_1.BudgetYearDataType value) {
        if (value instanceof gov.grants.apply.forms.rr_budget_v1_1.BudgetYearDataType) {
            gov.grants.apply.forms.rr_budget_v1_1.BudgetYearDataType realValue = ((gov.grants.apply.forms.rr_budget_v1_1.BudgetYearDataType) value);
            {
                // Check complex value
                gov.grants.apply.forms.rr_budget_v1_1.verification.BudgetYearDataTypeVerifier verifier = new gov.grants.apply.forms.rr_budget_v1_1.verification.BudgetYearDataTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetYear3"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetYear3"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkDUNSID(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (((null == realValue)? 0 :realValue.length())>= 9) {
                    // Value length is correct
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 9);
                }
                if (((null == realValue)? 0 :realValue.length())<= 13) {
                    // Value length is correct
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 13);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DUNSID"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DUNSID"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkBudgetYear5(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType master, gov.grants.apply.forms.rr_budget_v1_1.BudgetYearDataType value) {
        if (value instanceof gov.grants.apply.forms.rr_budget_v1_1.BudgetYearDataType) {
            gov.grants.apply.forms.rr_budget_v1_1.BudgetYearDataType realValue = ((gov.grants.apply.forms.rr_budget_v1_1.BudgetYearDataType) value);
            {
                // Check complex value
                gov.grants.apply.forms.rr_budget_v1_1.verification.BudgetYearDataTypeVerifier verifier = new gov.grants.apply.forms.rr_budget_v1_1.verification.BudgetYearDataTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetYear5"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetYear5"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkBudgetSummary(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType master, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType value) {
        if (value instanceof gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType) {
            gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType realValue = ((gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType) value);
            {
                // Check complex value
                gov.grants.apply.forms.rr_budget_v1_1.verification.RRBudgetTypeVerifier.BudgetSummaryTypeVerifier verifier = new gov.grants.apply.forms.rr_budget_v1_1.verification.RRBudgetTypeVerifier.BudgetSummaryTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetSummary"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetSummary"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkFormVersion(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (((null == realValue)? 0 :realValue.length())>= 1) {
                    // Value length is correct
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1);
                }
                if (((null == realValue)? 0 :realValue.length())<= 30) {
                    // Value length is correct
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 30);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormVersion"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormVersion"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkBudgetYear2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType master, gov.grants.apply.forms.rr_budget_v1_1.BudgetYearDataType value) {
        if (value instanceof gov.grants.apply.forms.rr_budget_v1_1.BudgetYearDataType) {
            gov.grants.apply.forms.rr_budget_v1_1.BudgetYearDataType realValue = ((gov.grants.apply.forms.rr_budget_v1_1.BudgetYearDataType) value);
            {
                // Check complex value
                gov.grants.apply.forms.rr_budget_v1_1.verification.BudgetYearDataTypeVerifier verifier = new gov.grants.apply.forms.rr_budget_v1_1.verification.BudgetYearDataTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetYear2"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetYear2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkBudgetYear4(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType master, gov.grants.apply.forms.rr_budget_v1_1.BudgetYearDataType value) {
        if (value instanceof gov.grants.apply.forms.rr_budget_v1_1.BudgetYearDataType) {
            gov.grants.apply.forms.rr_budget_v1_1.BudgetYearDataType realValue = ((gov.grants.apply.forms.rr_budget_v1_1.BudgetYearDataType) value);
            {
                // Check complex value
                gov.grants.apply.forms.rr_budget_v1_1.verification.BudgetYearDataTypeVerifier verifier = new gov.grants.apply.forms.rr_budget_v1_1.verification.BudgetYearDataTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetYear4"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetYear4"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkOrganizationName(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (((null == realValue)? 0 :realValue.length())>= 1) {
                    // Value length is correct
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1);
                }
                if (((null == realValue)? 0 :realValue.length())<= 60) {
                    // Value length is correct
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 60);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "OrganizationName"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "OrganizationName"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkBudgetType(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (valueSet.contains(realValue)) {
                    // Value is found in the enumeration, it is valid
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetType"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetType"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkBudgetYear1(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType master, gov.grants.apply.forms.rr_budget_v1_1.BudgetYear1DataType value) {
        if (value instanceof gov.grants.apply.forms.rr_budget_v1_1.BudgetYear1DataType) {
            gov.grants.apply.forms.rr_budget_v1_1.BudgetYear1DataType realValue = ((gov.grants.apply.forms.rr_budget_v1_1.BudgetYear1DataType) value);
            {
                // Check complex value
                gov.grants.apply.forms.rr_budget_v1_1.verification.BudgetYear1DataTypeVerifier verifier = new gov.grants.apply.forms.rr_budget_v1_1.verification.BudgetYear1DataTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetYear1"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetYear1"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
        check(parentLocator, handler, ((gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType) object));
    }

    public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
        check(null, handler, ((gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType) object));
    }

    public static class BudgetSummaryTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {


        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType master) {
            if (null == master.getCumulativeTotalFundsRequestedSeniorKeyPerson()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedSeniorKeyPerson"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkCumulativeTotalFundsRequestedSeniorKeyPerson(parentLocator, handler, master, master.getCumulativeTotalFundsRequestedSeniorKeyPerson());
            }
            if (null!= master.getCumulativeTotalFundsRequestedOtherPersonnel()) {
                // If left exists
                if (null == master.getCumulativeTotalFundsRequestedOtherPersonnel()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkCumulativeTotalFundsRequestedOtherPersonnel(parentLocator, handler, master, master.getCumulativeTotalFundsRequestedOtherPersonnel());
                }
            }
            if (null!= master.getCumulativeTotalNoOtherPersonnel()) {
                // If left exists
                if (null == master.getCumulativeTotalNoOtherPersonnel()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkCumulativeTotalNoOtherPersonnel(parentLocator, handler, master, master.getCumulativeTotalNoOtherPersonnel());
                }
            }
            if (null == master.getCumulativeTotalFundsRequestedPersonnel()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedPersonnel"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkCumulativeTotalFundsRequestedPersonnel(parentLocator, handler, master, master.getCumulativeTotalFundsRequestedPersonnel());
            }
            if (null!= master.getCumulativeEquipments()) {
                // If left exists
                if (null == master.getCumulativeEquipments()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkCumulativeEquipments(parentLocator, handler, master, master.getCumulativeEquipments());
                }
            }
            if (null!= master.getCumulativeTravels()) {
                // If left exists
                if (null == master.getCumulativeTravels()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkCumulativeTravels(parentLocator, handler, master, master.getCumulativeTravels());
                }
            }
            if (null!= master.getCumulativeTrainee()) {
                // If left exists
                if (null == master.getCumulativeTrainee()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkCumulativeTrainee(parentLocator, handler, master, master.getCumulativeTrainee());
                }
            }
            if (null!= master.getCumulativeOtherDirect()) {
                // If left exists
                if (null == master.getCumulativeOtherDirect()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkCumulativeOtherDirect(parentLocator, handler, master, master.getCumulativeOtherDirect());
                }
            }
            if (null == master.getCumulativeTotalFundsRequestedDirectCosts()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedDirectCosts"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkCumulativeTotalFundsRequestedDirectCosts(parentLocator, handler, master, master.getCumulativeTotalFundsRequestedDirectCosts());
            }
            if (null!= master.getCumulativeTotalFundsRequestedIndirectCost()) {
                // If left exists
                if (null == master.getCumulativeTotalFundsRequestedIndirectCost()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkCumulativeTotalFundsRequestedIndirectCost(parentLocator, handler, master, master.getCumulativeTotalFundsRequestedIndirectCost());
                }
            }
            if (null == master.getCumulativeTotalFundsRequestedDirectIndirectCosts()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedDirectIndirectCosts"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkCumulativeTotalFundsRequestedDirectIndirectCosts(parentLocator, handler, master, master.getCumulativeTotalFundsRequestedDirectIndirectCosts());
            }
            if (null!= master.getCumulativeFee()) {
                // If left exists
                if (null == master.getCumulativeFee()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkCumulativeFee(parentLocator, handler, master, master.getCumulativeFee());
                }
            }
        }

        public void checkCumulativeTrainee(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType master, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeTraineeType value) {
            if (value instanceof gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeTraineeType) {
                gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeTraineeType realValue = ((gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeTraineeType) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.rr_budget_v1_1.verification.RRBudgetTypeVerifier.BudgetSummaryTypeVerifier.CumulativeTraineeTypeVerifier verifier = new gov.grants.apply.forms.rr_budget_v1_1.verification.RRBudgetTypeVerifier.BudgetSummaryTypeVerifier.CumulativeTraineeTypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTrainee"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTrainee"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkCumulativeTravels(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType master, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeTravelsType value) {
            if (value instanceof gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeTravelsType) {
                gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeTravelsType realValue = ((gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeTravelsType) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.rr_budget_v1_1.verification.RRBudgetTypeVerifier.BudgetSummaryTypeVerifier.CumulativeTravelsTypeVerifier verifier = new gov.grants.apply.forms.rr_budget_v1_1.verification.RRBudgetTypeVerifier.BudgetSummaryTypeVerifier.CumulativeTravelsTypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTravels"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTravels"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkCumulativeTotalFundsRequestedPersonnel(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType master, java.math.BigDecimal value) {
            if (value instanceof java.math.BigDecimal) {
                java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    // todo: Check lexical constraints. How???
                    // todo: Check lexical constraints. How???
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                    }
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("9999999999999.99"))<= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("9999999999999.99"));
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedPersonnel"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedPersonnel"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkCumulativeFee(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType master, java.math.BigDecimal value) {
            if (value instanceof java.math.BigDecimal) {
                java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    // todo: Check lexical constraints. How???
                    // todo: Check lexical constraints. How???
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                    }
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("9999999999999.99"))<= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("9999999999999.99"));
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeFee"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeFee"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkCumulativeTotalFundsRequestedDirectIndirectCosts(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType master, java.math.BigDecimal value) {
            if (value instanceof java.math.BigDecimal) {
                java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    // todo: Check lexical constraints. How???
                    // todo: Check lexical constraints. How???
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                    }
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("9999999999999.99"))<= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("9999999999999.99"));
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedDirectIndirectCosts"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedDirectIndirectCosts"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkCumulativeTotalFundsRequestedDirectCosts(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType master, java.math.BigDecimal value) {
            if (value instanceof java.math.BigDecimal) {
                java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    // todo: Check lexical constraints. How???
                    // todo: Check lexical constraints. How???
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                    }
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("9999999999999.99"))<= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("9999999999999.99"));
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedDirectCosts"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedDirectCosts"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkCumulativeTotalFundsRequestedIndirectCost(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType master, java.math.BigDecimal value) {
            if (value instanceof java.math.BigDecimal) {
                java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    // todo: Check lexical constraints. How???
                    // todo: Check lexical constraints. How???
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                    }
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("9999999999999.99"))<= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("9999999999999.99"));
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedIndirectCost"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedIndirectCost"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkCumulativeOtherDirect(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType master, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeOtherDirectType value) {
            if (value instanceof gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeOtherDirectType) {
                gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeOtherDirectType realValue = ((gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeOtherDirectType) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.rr_budget_v1_1.verification.RRBudgetTypeVerifier.BudgetSummaryTypeVerifier.CumulativeOtherDirectTypeVerifier verifier = new gov.grants.apply.forms.rr_budget_v1_1.verification.RRBudgetTypeVerifier.BudgetSummaryTypeVerifier.CumulativeOtherDirectTypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeOtherDirect"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeOtherDirect"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkCumulativeTotalNoOtherPersonnel(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType master, java.math.BigInteger value) {
            if (value instanceof java.math.BigInteger) {
                java.math.BigInteger realValue = ((java.math.BigInteger) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (realValue.signum()< 0) {
                        problem = new de.fzi.dbs.verification.event.datatype.NegativeProblem(realValue);
                    }
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigInteger("0"))>= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigInteger("0"));
                    }
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigInteger("9999"))<= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigInteger("9999"));
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalNoOtherPersonnel"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalNoOtherPersonnel"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkCumulativeEquipments(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType master, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeEquipmentsType value) {
            if (value instanceof gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeEquipmentsType) {
                gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeEquipmentsType realValue = ((gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeEquipmentsType) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.rr_budget_v1_1.verification.RRBudgetTypeVerifier.BudgetSummaryTypeVerifier.CumulativeEquipmentsTypeVerifier verifier = new gov.grants.apply.forms.rr_budget_v1_1.verification.RRBudgetTypeVerifier.BudgetSummaryTypeVerifier.CumulativeEquipmentsTypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeEquipments"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeEquipments"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkCumulativeTotalFundsRequestedSeniorKeyPerson(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType master, java.math.BigDecimal value) {
            if (value instanceof java.math.BigDecimal) {
                java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    // todo: Check lexical constraints. How???
                    // todo: Check lexical constraints. How???
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                    }
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("9999999999999.99"))<= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("9999999999999.99"));
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedSeniorKeyPerson"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedSeniorKeyPerson"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkCumulativeTotalFundsRequestedOtherPersonnel(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType master, java.math.BigDecimal value) {
            if (value instanceof java.math.BigDecimal) {
                java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    // todo: Check lexical constraints. How???
                    // todo: Check lexical constraints. How???
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                    }
                    if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("9999999999999.99"))<= 0) {
                        // Range is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("9999999999999.99"));
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedOtherPersonnel"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedOtherPersonnel"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType) object));
        }

        public static class CumulativeEquipmentsTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {


            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeEquipmentsType master) {
                if (null == master.getCumulativeTotalFundsRequestedEquipment()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedEquipment"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check value
                    checkCumulativeTotalFundsRequestedEquipment(parentLocator, handler, master, master.getCumulativeTotalFundsRequestedEquipment());
                }
            }

            public void checkCumulativeTotalFundsRequestedEquipment(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeEquipmentsType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("9999999999999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("9999999999999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedEquipment"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedEquipment"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeEquipmentsType) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeEquipmentsType) object));
            }

        }

        public static class CumulativeOtherDirectTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {


            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeOtherDirectType master) {
                if (null == master.getCumulativeTotalFundsRequestedOtherDirectCosts()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedOtherDirectCosts"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check value
                    checkCumulativeTotalFundsRequestedOtherDirectCosts(parentLocator, handler, master, master.getCumulativeTotalFundsRequestedOtherDirectCosts());
                }
                if (null!= master.getCumulativeMaterialAndSupplies()) {
                    // If left exists
                    if (null == master.getCumulativeMaterialAndSupplies()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCumulativeMaterialAndSupplies(parentLocator, handler, master, master.getCumulativeMaterialAndSupplies());
                    }
                }
                if (null!= master.getCumulativePublicationCosts()) {
                    // If left exists
                    if (null == master.getCumulativePublicationCosts()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCumulativePublicationCosts(parentLocator, handler, master, master.getCumulativePublicationCosts());
                    }
                }
                if (null!= master.getCumulativeConsultantServices()) {
                    // If left exists
                    if (null == master.getCumulativeConsultantServices()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCumulativeConsultantServices(parentLocator, handler, master, master.getCumulativeConsultantServices());
                    }
                }
                if (null!= master.getCumulativeADPComputerServices()) {
                    // If left exists
                    if (null == master.getCumulativeADPComputerServices()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCumulativeADPComputerServices(parentLocator, handler, master, master.getCumulativeADPComputerServices());
                    }
                }
                if (null!= master.getCumulativeSubawardConsortiumContractualCosts()) {
                    // If left exists
                    if (null == master.getCumulativeSubawardConsortiumContractualCosts()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCumulativeSubawardConsortiumContractualCosts(parentLocator, handler, master, master.getCumulativeSubawardConsortiumContractualCosts());
                    }
                }
                if (null!= master.getCumulativeEquipmentFacilityRentalFees()) {
                    // If left exists
                    if (null == master.getCumulativeEquipmentFacilityRentalFees()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCumulativeEquipmentFacilityRentalFees(parentLocator, handler, master, master.getCumulativeEquipmentFacilityRentalFees());
                    }
                }
                if (null!= master.getCumulativeAlterationsAndRenovations()) {
                    // If left exists
                    if (null == master.getCumulativeAlterationsAndRenovations()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCumulativeAlterationsAndRenovations(parentLocator, handler, master, master.getCumulativeAlterationsAndRenovations());
                    }
                }
                if (null!= master.getCumulativeOther1DirectCost()) {
                    // If left exists
                    if (null == master.getCumulativeOther1DirectCost()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCumulativeOther1DirectCost(parentLocator, handler, master, master.getCumulativeOther1DirectCost());
                    }
                }
                if (null!= master.getCumulativeOther2DirectCost()) {
                    // If left exists
                    if (null == master.getCumulativeOther2DirectCost()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCumulativeOther2DirectCost(parentLocator, handler, master, master.getCumulativeOther2DirectCost());
                    }
                }
                if (null!= master.getCumulativeOther3DirectCost()) {
                    // If left exists
                    if (null == master.getCumulativeOther3DirectCost()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCumulativeOther3DirectCost(parentLocator, handler, master, master.getCumulativeOther3DirectCost());
                    }
                }
            }

            public void checkCumulativeMaterialAndSupplies(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeOtherDirectType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("999999999999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("999999999999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeMaterialAndSupplies"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeMaterialAndSupplies"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCumulativeOther3DirectCost(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeOtherDirectType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("999999999999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("999999999999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeOther3DirectCost"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeOther3DirectCost"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCumulativeAlterationsAndRenovations(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeOtherDirectType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("999999999999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("999999999999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeAlterationsAndRenovations"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeAlterationsAndRenovations"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCumulativeTotalFundsRequestedOtherDirectCosts(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeOtherDirectType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("9999999999999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("9999999999999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedOtherDirectCosts"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedOtherDirectCosts"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCumulativeConsultantServices(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeOtherDirectType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("999999999999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("999999999999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeConsultantServices"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeConsultantServices"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCumulativePublicationCosts(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeOtherDirectType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("999999999999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("999999999999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativePublicationCosts"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativePublicationCosts"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCumulativeOther2DirectCost(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeOtherDirectType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("999999999999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("999999999999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeOther2DirectCost"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeOther2DirectCost"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCumulativeOther1DirectCost(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeOtherDirectType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("999999999999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("999999999999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeOther1DirectCost"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeOther1DirectCost"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCumulativeEquipmentFacilityRentalFees(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeOtherDirectType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("999999999999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("999999999999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeEquipmentFacilityRentalFees"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeEquipmentFacilityRentalFees"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCumulativeSubawardConsortiumContractualCosts(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeOtherDirectType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("999999999999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("999999999999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeSubawardConsortiumContractualCosts"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeSubawardConsortiumContractualCosts"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCumulativeADPComputerServices(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeOtherDirectType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("999999999999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("999999999999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeADPComputerServices"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeADPComputerServices"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeOtherDirectType) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeOtherDirectType) object));
            }

        }

        public static class CumulativeTraineeTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {


            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeTraineeType master) {
                if (null == master.getCumulativeTotalFundsRequestedTraineeCosts()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedTraineeCosts"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check value
                    checkCumulativeTotalFundsRequestedTraineeCosts(parentLocator, handler, master, master.getCumulativeTotalFundsRequestedTraineeCosts());
                }
                if (null!= master.getCumulativeTraineeTuitionFeesHealthInsurance()) {
                    // If left exists
                    if (null == master.getCumulativeTraineeTuitionFeesHealthInsurance()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCumulativeTraineeTuitionFeesHealthInsurance(parentLocator, handler, master, master.getCumulativeTraineeTuitionFeesHealthInsurance());
                    }
                }
                if (null!= master.getCumulativeTraineeStipends()) {
                    // If left exists
                    if (null == master.getCumulativeTraineeStipends()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCumulativeTraineeStipends(parentLocator, handler, master, master.getCumulativeTraineeStipends());
                    }
                }
                if (null!= master.getCumulativeTraineeTravel()) {
                    // If left exists
                    if (null == master.getCumulativeTraineeTravel()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCumulativeTraineeTravel(parentLocator, handler, master, master.getCumulativeTraineeTravel());
                    }
                }
                if (null!= master.getCumulativeTraineeSubsistence()) {
                    // If left exists
                    if (null == master.getCumulativeTraineeSubsistence()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCumulativeTraineeSubsistence(parentLocator, handler, master, master.getCumulativeTraineeSubsistence());
                    }
                }
                if (null!= master.getCumulativeOtherTraineeCost()) {
                    // If left exists
                    if (null == master.getCumulativeOtherTraineeCost()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCumulativeOtherTraineeCost(parentLocator, handler, master, master.getCumulativeOtherTraineeCost());
                    }
                }
                if (null!= master.getCumulativeNoofTrainees()) {
                    // If left exists
                    if (null == master.getCumulativeNoofTrainees()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCumulativeNoofTrainees(parentLocator, handler, master, master.getCumulativeNoofTrainees());
                    }
                }
            }

            public void checkCumulativeTotalFundsRequestedTraineeCosts(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeTraineeType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("9999999999999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("9999999999999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedTraineeCosts"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedTraineeCosts"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCumulativeTraineeTravel(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeTraineeType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("999999999999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("999999999999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTraineeTravel"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTraineeTravel"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCumulativeOtherTraineeCost(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeTraineeType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("999999999999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("999999999999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeOtherTraineeCost"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeOtherTraineeCost"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCumulativeTraineeStipends(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeTraineeType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("999999999999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("999999999999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTraineeStipends"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTraineeStipends"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCumulativeTraineeSubsistence(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeTraineeType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("999999999999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("999999999999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTraineeSubsistence"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTraineeSubsistence"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCumulativeNoofTrainees(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeTraineeType master, java.math.BigInteger value) {
                if (value instanceof java.math.BigInteger) {
                    java.math.BigInteger realValue = ((java.math.BigInteger) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (realValue.signum()< 0) {
                            problem = new de.fzi.dbs.verification.event.datatype.NegativeProblem(realValue);
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigInteger("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigInteger("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigInteger("999"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigInteger("999"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeNoofTrainees"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeNoofTrainees"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCumulativeTraineeTuitionFeesHealthInsurance(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeTraineeType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("999999999999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("999999999999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTraineeTuitionFeesHealthInsurance"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTraineeTuitionFeesHealthInsurance"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeTraineeType) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeTraineeType) object));
            }

        }

        public static class CumulativeTravelsTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {


            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeTravelsType master) {
                if (null == master.getCumulativeTotalFundsRequestedTravel()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedTravel"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check value
                    checkCumulativeTotalFundsRequestedTravel(parentLocator, handler, master, master.getCumulativeTotalFundsRequestedTravel());
                }
                if (null!= master.getCumulativeDomesticTravelCosts()) {
                    // If left exists
                    if (null == master.getCumulativeDomesticTravelCosts()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCumulativeDomesticTravelCosts(parentLocator, handler, master, master.getCumulativeDomesticTravelCosts());
                    }
                }
                if (null!= master.getCumulativeForeignTravelCosts()) {
                    // If left exists
                    if (null == master.getCumulativeForeignTravelCosts()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCumulativeForeignTravelCosts(parentLocator, handler, master, master.getCumulativeForeignTravelCosts());
                    }
                }
            }

            public void checkCumulativeTotalFundsRequestedTravel(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeTravelsType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("9999999999999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("9999999999999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedTravel"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeTotalFundsRequestedTravel"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCumulativeDomesticTravelCosts(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeTravelsType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("999999999999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("999999999999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeDomesticTravelCosts"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeDomesticTravelCosts"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCumulativeForeignTravelCosts(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeTravelsType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("999999999999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("999999999999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeForeignTravelCosts"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CumulativeForeignTravelCosts"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeTravelsType) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.rr_budget_v1_1.RRBudgetType.BudgetSummaryType.CumulativeTravelsType) object));
            }

        }

    }

}
