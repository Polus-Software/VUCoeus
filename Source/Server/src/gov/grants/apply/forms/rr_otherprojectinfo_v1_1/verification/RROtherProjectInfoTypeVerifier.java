//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.3-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.05.19 at 04:23:48 EDT 
//


package gov.grants.apply.forms.rr_otherprojectinfo_v1_1.verification;

public class RROtherProjectInfoTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
{

    protected java.lang.Object[] values = new java.lang.Object[] {"N: No", "Y: Yes"};
    protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));
    protected java.lang.Object[] values0 = new java.lang.Object[] {"N: No", "Y: Yes"};
    protected java.util.Set valueSet0 = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values0)));
    protected java.lang.Object[] values1 = new java.lang.Object[] {"N: No", "Y: Yes"};
    protected java.util.Set valueSet1 = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values1)));

    public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType master) {
        if (null == master.getFormVersion()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormVersion"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkFormVersion(parentLocator, handler, master, master.getFormVersion());
        }
        if (null == master.getHumanSubjectsIndicator()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HumanSubjectsIndicator"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkHumanSubjectsIndicator(parentLocator, handler, master, master.getHumanSubjectsIndicator());
        }
        if (null!= master.getHumanSubjectsSupplement()) {
            // If left exists
            if (null == master.getHumanSubjectsSupplement()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkHumanSubjectsSupplement(parentLocator, handler, master, master.getHumanSubjectsSupplement());
            }
        }
        if (null == master.getVertebrateAnimalsIndicator()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "VertebrateAnimalsIndicator"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkVertebrateAnimalsIndicator(parentLocator, handler, master, master.getVertebrateAnimalsIndicator());
        }
        if (null!= master.getVertebrateAnimalsSupplement()) {
            // If left exists
            if (null == master.getVertebrateAnimalsSupplement()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkVertebrateAnimalsSupplement(parentLocator, handler, master, master.getVertebrateAnimalsSupplement());
            }
        }
        if (null == master.getProprietaryInformationIndicator()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ProprietaryInformationIndicator"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkProprietaryInformationIndicator(parentLocator, handler, master, master.getProprietaryInformationIndicator());
        }
        if (null == master.getEnvironmentalImpact()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "EnvironmentalImpact"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkEnvironmentalImpact(parentLocator, handler, master, master.getEnvironmentalImpact());
        }
        if (null == master.getInternationalActivities()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalActivities"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkInternationalActivities(parentLocator, handler, master, master.getInternationalActivities());
        }
        if (null!= master.getAbstractAttachments()) {
            // If left exists
            if (null == master.getAbstractAttachments()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkAbstractAttachments(parentLocator, handler, master, master.getAbstractAttachments());
            }
        }
        if (null!= master.getFacilitiesAttachments()) {
            // If left exists
            if (null == master.getFacilitiesAttachments()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkFacilitiesAttachments(parentLocator, handler, master, master.getFacilitiesAttachments());
            }
        }
        if (null!= master.getEquipmentAttachments()) {
            // If left exists
            if (null == master.getEquipmentAttachments()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkEquipmentAttachments(parentLocator, handler, master, master.getEquipmentAttachments());
            }
        }
        if (null!= master.getBibliographyAttachments()) {
            // If left exists
            if (null == master.getBibliographyAttachments()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkBibliographyAttachments(parentLocator, handler, master, master.getBibliographyAttachments());
            }
        }
        if (null!= master.getProjectNarrativeAttachments()) {
            // If left exists
            if (null == master.getProjectNarrativeAttachments()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkProjectNarrativeAttachments(parentLocator, handler, master, master.getProjectNarrativeAttachments());
            }
        }
        if (null!= master.getOtherAttachments()) {
            // If left exists
            if (null == master.getOtherAttachments()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkOtherAttachments(parentLocator, handler, master, master.getOtherAttachments());
            }
        }
    }

    public void checkEnvironmentalImpact(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType master, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EnvironmentalImpactType value) {
        if (value instanceof gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EnvironmentalImpactType) {
            gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EnvironmentalImpactType realValue = ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EnvironmentalImpactType) value);
            {
                // Check complex value
                gov.grants.apply.forms.rr_otherprojectinfo_v1_1.verification.RROtherProjectInfoTypeVerifier.EnvironmentalImpactTypeVerifier verifier = new gov.grants.apply.forms.rr_otherprojectinfo_v1_1.verification.RROtherProjectInfoTypeVerifier.EnvironmentalImpactTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "EnvironmentalImpact"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "EnvironmentalImpact"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkEquipmentAttachments(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType master, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EquipmentAttachmentsType value) {
        if (value instanceof gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EquipmentAttachmentsType) {
            gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EquipmentAttachmentsType realValue = ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EquipmentAttachmentsType) value);
            {
                // Check complex value
                gov.grants.apply.forms.rr_otherprojectinfo_v1_1.verification.RROtherProjectInfoTypeVerifier.EquipmentAttachmentsTypeVerifier verifier = new gov.grants.apply.forms.rr_otherprojectinfo_v1_1.verification.RROtherProjectInfoTypeVerifier.EquipmentAttachmentsTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "EquipmentAttachments"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "EquipmentAttachments"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkVertebrateAnimalsSupplement(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType master, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.VertebrateAnimalsSupplementType value) {
        if (value instanceof gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.VertebrateAnimalsSupplementType) {
            gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.VertebrateAnimalsSupplementType realValue = ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.VertebrateAnimalsSupplementType) value);
            {
                // Check complex value
                gov.grants.apply.forms.rr_otherprojectinfo_v1_1.verification.RROtherProjectInfoTypeVerifier.VertebrateAnimalsSupplementTypeVerifier verifier = new gov.grants.apply.forms.rr_otherprojectinfo_v1_1.verification.RROtherProjectInfoTypeVerifier.VertebrateAnimalsSupplementTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "VertebrateAnimalsSupplement"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "VertebrateAnimalsSupplement"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkHumanSubjectsIndicator(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (valueSet.contains(realValue)) {
                    // Value is found in the enumeration, it is valid
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HumanSubjectsIndicator"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HumanSubjectsIndicator"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkAbstractAttachments(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType master, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.AbstractAttachmentsType value) {
        if (value instanceof gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.AbstractAttachmentsType) {
            gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.AbstractAttachmentsType realValue = ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.AbstractAttachmentsType) value);
            {
                // Check complex value
                gov.grants.apply.forms.rr_otherprojectinfo_v1_1.verification.RROtherProjectInfoTypeVerifier.AbstractAttachmentsTypeVerifier verifier = new gov.grants.apply.forms.rr_otherprojectinfo_v1_1.verification.RROtherProjectInfoTypeVerifier.AbstractAttachmentsTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AbstractAttachments"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AbstractAttachments"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkFormVersion(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (((null == realValue)? 0 :realValue.length())>= 1) {
                    // Value length is correct
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1);
                }
                if (((null == realValue)? 0 :realValue.length())<= 30) {
                    // Value length is correct
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 30);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormVersion"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormVersion"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkProprietaryInformationIndicator(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (valueSet0 .contains(realValue)) {
                    // Value is found in the enumeration, it is valid
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet0);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ProprietaryInformationIndicator"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ProprietaryInformationIndicator"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkVertebrateAnimalsIndicator(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (valueSet1 .contains(realValue)) {
                    // Value is found in the enumeration, it is valid
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet1);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "VertebrateAnimalsIndicator"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "VertebrateAnimalsIndicator"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkBibliographyAttachments(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType master, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.BibliographyAttachmentsType value) {
        if (value instanceof gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.BibliographyAttachmentsType) {
            gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.BibliographyAttachmentsType realValue = ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.BibliographyAttachmentsType) value);
            {
                // Check complex value
                gov.grants.apply.forms.rr_otherprojectinfo_v1_1.verification.RROtherProjectInfoTypeVerifier.BibliographyAttachmentsTypeVerifier verifier = new gov.grants.apply.forms.rr_otherprojectinfo_v1_1.verification.RROtherProjectInfoTypeVerifier.BibliographyAttachmentsTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BibliographyAttachments"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BibliographyAttachments"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkInternationalActivities(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType master, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.InternationalActivitiesType value) {
        if (value instanceof gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.InternationalActivitiesType) {
            gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.InternationalActivitiesType realValue = ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.InternationalActivitiesType) value);
            {
                // Check complex value
                gov.grants.apply.forms.rr_otherprojectinfo_v1_1.verification.RROtherProjectInfoTypeVerifier.InternationalActivitiesTypeVerifier verifier = new gov.grants.apply.forms.rr_otherprojectinfo_v1_1.verification.RROtherProjectInfoTypeVerifier.InternationalActivitiesTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalActivities"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalActivities"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkFacilitiesAttachments(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType master, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.FacilitiesAttachmentsType value) {
        if (value instanceof gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.FacilitiesAttachmentsType) {
            gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.FacilitiesAttachmentsType realValue = ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.FacilitiesAttachmentsType) value);
            {
                // Check complex value
                gov.grants.apply.forms.rr_otherprojectinfo_v1_1.verification.RROtherProjectInfoTypeVerifier.FacilitiesAttachmentsTypeVerifier verifier = new gov.grants.apply.forms.rr_otherprojectinfo_v1_1.verification.RROtherProjectInfoTypeVerifier.FacilitiesAttachmentsTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FacilitiesAttachments"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FacilitiesAttachments"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkProjectNarrativeAttachments(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType master, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.ProjectNarrativeAttachmentsType value) {
        if (value instanceof gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.ProjectNarrativeAttachmentsType) {
            gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.ProjectNarrativeAttachmentsType realValue = ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.ProjectNarrativeAttachmentsType) value);
            {
                // Check complex value
                gov.grants.apply.forms.rr_otherprojectinfo_v1_1.verification.RROtherProjectInfoTypeVerifier.ProjectNarrativeAttachmentsTypeVerifier verifier = new gov.grants.apply.forms.rr_otherprojectinfo_v1_1.verification.RROtherProjectInfoTypeVerifier.ProjectNarrativeAttachmentsTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ProjectNarrativeAttachments"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ProjectNarrativeAttachments"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkHumanSubjectsSupplement(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType master, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.HumanSubjectsSupplementType value) {
        if (value instanceof gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.HumanSubjectsSupplementType) {
            gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.HumanSubjectsSupplementType realValue = ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.HumanSubjectsSupplementType) value);
            {
                // Check complex value
                gov.grants.apply.forms.rr_otherprojectinfo_v1_1.verification.RROtherProjectInfoTypeVerifier.HumanSubjectsSupplementTypeVerifier verifier = new gov.grants.apply.forms.rr_otherprojectinfo_v1_1.verification.RROtherProjectInfoTypeVerifier.HumanSubjectsSupplementTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HumanSubjectsSupplement"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HumanSubjectsSupplement"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkOtherAttachments(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType master, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.OtherAttachmentsType value) {
        if (value instanceof gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.OtherAttachmentsType) {
            gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.OtherAttachmentsType realValue = ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.OtherAttachmentsType) value);
            {
                // Check complex value
                gov.grants.apply.forms.rr_otherprojectinfo_v1_1.verification.RROtherProjectInfoTypeVerifier.OtherAttachmentsTypeVerifier verifier = new gov.grants.apply.forms.rr_otherprojectinfo_v1_1.verification.RROtherProjectInfoTypeVerifier.OtherAttachmentsTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "OtherAttachments"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "OtherAttachments"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
        check(parentLocator, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType) object));
    }

    public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
        check(null, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType) object));
    }

    public static class AbstractAttachmentsTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {


        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.AbstractAttachmentsType master) {
            if (null == master.getAbstractAttachment()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AbstractAttachment"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkAbstractAttachment(parentLocator, handler, master, master.getAbstractAttachment());
            }
        }

        public void checkAbstractAttachment(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.AbstractAttachmentsType master, gov.grants.apply.system.attachments_v1.AttachedFileDataType value) {
            if (value instanceof gov.grants.apply.system.attachments_v1.AttachedFileDataType) {
                gov.grants.apply.system.attachments_v1.AttachedFileDataType realValue = ((gov.grants.apply.system.attachments_v1.AttachedFileDataType) value);
                {
                    // Check complex value
                    gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier verifier = new gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AbstractAttachment"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AbstractAttachment"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.AbstractAttachmentsType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.AbstractAttachmentsType) object));
        }

    }

    public static class BibliographyAttachmentsTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {


        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.BibliographyAttachmentsType master) {
            if (null == master.getBibliographyAttachment()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BibliographyAttachment"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkBibliographyAttachment(parentLocator, handler, master, master.getBibliographyAttachment());
            }
        }

        public void checkBibliographyAttachment(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.BibliographyAttachmentsType master, gov.grants.apply.system.attachments_v1.AttachedFileDataType value) {
            if (value instanceof gov.grants.apply.system.attachments_v1.AttachedFileDataType) {
                gov.grants.apply.system.attachments_v1.AttachedFileDataType realValue = ((gov.grants.apply.system.attachments_v1.AttachedFileDataType) value);
                {
                    // Check complex value
                    gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier verifier = new gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BibliographyAttachment"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BibliographyAttachment"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.BibliographyAttachmentsType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.BibliographyAttachmentsType) object));
        }

    }

    public static class EnvironmentalImpactTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {

        protected java.lang.Object[] values = new java.lang.Object[] {"N: No", "Y: Yes"};
        protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EnvironmentalImpactType master) {
            if (null == master.getEnvironmentalImpactIndicator()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "EnvironmentalImpactIndicator"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkEnvironmentalImpactIndicator(parentLocator, handler, master, master.getEnvironmentalImpactIndicator());
            }
            if (null!= master.getEnvironmentalImpactExplanation()) {
                // If left exists
                if (null == master.getEnvironmentalImpactExplanation()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkEnvironmentalImpactExplanation(parentLocator, handler, master, master.getEnvironmentalImpactExplanation());
                }
            }
            if (null!= master.getEnvironmentalExemption()) {
                // If left exists
                if (null == master.getEnvironmentalExemption()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkEnvironmentalExemption(parentLocator, handler, master, master.getEnvironmentalExemption());
                }
            }
        }

        public void checkEnvironmentalImpactIndicator(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EnvironmentalImpactType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet.contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "EnvironmentalImpactIndicator"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "EnvironmentalImpactIndicator"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkEnvironmentalExemption(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EnvironmentalImpactType master, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EnvironmentalImpactType.EnvironmentalExemptionType value) {
            if (value instanceof gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EnvironmentalImpactType.EnvironmentalExemptionType) {
                gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EnvironmentalImpactType.EnvironmentalExemptionType realValue = ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EnvironmentalImpactType.EnvironmentalExemptionType) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.rr_otherprojectinfo_v1_1.verification.RROtherProjectInfoTypeVerifier.EnvironmentalImpactTypeVerifier.EnvironmentalExemptionTypeVerifier verifier = new gov.grants.apply.forms.rr_otherprojectinfo_v1_1.verification.RROtherProjectInfoTypeVerifier.EnvironmentalImpactTypeVerifier.EnvironmentalExemptionTypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "EnvironmentalExemption"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "EnvironmentalExemption"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkEnvironmentalImpactExplanation(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EnvironmentalImpactType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((null == realValue)? 0 :realValue.length())>= 1) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1);
                    }
                    if (((null == realValue)? 0 :realValue.length())<= 55) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 55);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "EnvironmentalImpactExplanation"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "EnvironmentalImpactExplanation"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EnvironmentalImpactType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EnvironmentalImpactType) object));
        }

        public static class EnvironmentalExemptionTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {

            protected java.lang.Object[] values = new java.lang.Object[] {"N: No", "Y: Yes"};
            protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EnvironmentalImpactType.EnvironmentalExemptionType master) {
                if (null == master.getEnvironmentalExemptionIndicator()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "EnvironmentalExemptionIndicator"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check value
                    checkEnvironmentalExemptionIndicator(parentLocator, handler, master, master.getEnvironmentalExemptionIndicator());
                }
                if (null!= master.getEnvironmentalExemptionExplanation()) {
                    // If left exists
                    if (null == master.getEnvironmentalExemptionExplanation()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkEnvironmentalExemptionExplanation(parentLocator, handler, master, master.getEnvironmentalExemptionExplanation());
                    }
                }
            }

            public void checkEnvironmentalExemptionExplanation(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EnvironmentalImpactType.EnvironmentalExemptionType master, java.lang.String value) {
                if (value instanceof java.lang.String) {
                    java.lang.String realValue = ((java.lang.String) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (((null == realValue)? 0 :realValue.length())>= 1) {
                            // Value length is correct
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1);
                        }
                        if (((null == realValue)? 0 :realValue.length())<= 55) {
                            // Value length is correct
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 55);
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "EnvironmentalExemptionExplanation"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "EnvironmentalExemptionExplanation"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkEnvironmentalExemptionIndicator(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EnvironmentalImpactType.EnvironmentalExemptionType master, java.lang.String value) {
                if (value instanceof java.lang.String) {
                    java.lang.String realValue = ((java.lang.String) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (valueSet.contains(realValue)) {
                            // Value is found in the enumeration, it is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "EnvironmentalExemptionIndicator"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "EnvironmentalExemptionIndicator"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EnvironmentalImpactType.EnvironmentalExemptionType) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EnvironmentalImpactType.EnvironmentalExemptionType) object));
            }

        }

    }

    public static class EquipmentAttachmentsTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {


        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EquipmentAttachmentsType master) {
            if (null == master.getEquipmentAttachment()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "EquipmentAttachment"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkEquipmentAttachment(parentLocator, handler, master, master.getEquipmentAttachment());
            }
        }

        public void checkEquipmentAttachment(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EquipmentAttachmentsType master, gov.grants.apply.system.attachments_v1.AttachedFileDataType value) {
            if (value instanceof gov.grants.apply.system.attachments_v1.AttachedFileDataType) {
                gov.grants.apply.system.attachments_v1.AttachedFileDataType realValue = ((gov.grants.apply.system.attachments_v1.AttachedFileDataType) value);
                {
                    // Check complex value
                    gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier verifier = new gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "EquipmentAttachment"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "EquipmentAttachment"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EquipmentAttachmentsType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.EquipmentAttachmentsType) object));
        }

    }

    public static class FacilitiesAttachmentsTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {


        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.FacilitiesAttachmentsType master) {
            if (null == master.getFacilitiesAttachment()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FacilitiesAttachment"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkFacilitiesAttachment(parentLocator, handler, master, master.getFacilitiesAttachment());
            }
        }

        public void checkFacilitiesAttachment(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.FacilitiesAttachmentsType master, gov.grants.apply.system.attachments_v1.AttachedFileDataType value) {
            if (value instanceof gov.grants.apply.system.attachments_v1.AttachedFileDataType) {
                gov.grants.apply.system.attachments_v1.AttachedFileDataType realValue = ((gov.grants.apply.system.attachments_v1.AttachedFileDataType) value);
                {
                    // Check complex value
                    gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier verifier = new gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FacilitiesAttachment"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FacilitiesAttachment"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.FacilitiesAttachmentsType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.FacilitiesAttachmentsType) object));
        }

    }

    public static class HumanSubjectsSupplementTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {

        protected java.lang.Object[] values = new java.lang.Object[] {"N: No", "Y: Yes"};
        protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.HumanSubjectsSupplementType master) {
            if (null!= master.getHumanSubjectIRBReviewIndicator()) {
                // If left exists
                if (null == master.getHumanSubjectIRBReviewIndicator()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkHumanSubjectIRBReviewIndicator(parentLocator, handler, master, master.getHumanSubjectIRBReviewIndicator());
                }
            }
            if (null!= master.getHumanSubjectIRBReviewDate()) {
                // If left exists
                if (null == master.getHumanSubjectIRBReviewDate()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkHumanSubjectIRBReviewDate(parentLocator, handler, master, master.getHumanSubjectIRBReviewDate());
                }
            }
            if (null!= master.getExemptionNumbers()) {
                // If left exists
                if (null == master.getExemptionNumbers()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkExemptionNumbers(parentLocator, handler, master, master.getExemptionNumbers());
                }
            }
            if (null!= master.getHumanSubjectAssuranceNumber()) {
                // If left exists
                if (null == master.getHumanSubjectAssuranceNumber()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkHumanSubjectAssuranceNumber(parentLocator, handler, master, master.getHumanSubjectAssuranceNumber());
                }
            }
        }

        public void checkHumanSubjectIRBReviewIndicator(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.HumanSubjectsSupplementType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet.contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HumanSubjectIRBReviewIndicator"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HumanSubjectIRBReviewIndicator"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkExemptionNumbers(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.HumanSubjectsSupplementType master, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.HumanSubjectsSupplementType.ExemptionNumbersType value) {
            if (value instanceof gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.HumanSubjectsSupplementType.ExemptionNumbersType) {
                gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.HumanSubjectsSupplementType.ExemptionNumbersType realValue = ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.HumanSubjectsSupplementType.ExemptionNumbersType) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.rr_otherprojectinfo_v1_1.verification.RROtherProjectInfoTypeVerifier.HumanSubjectsSupplementTypeVerifier.ExemptionNumbersTypeVerifier verifier = new gov.grants.apply.forms.rr_otherprojectinfo_v1_1.verification.RROtherProjectInfoTypeVerifier.HumanSubjectsSupplementTypeVerifier.ExemptionNumbersTypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ExemptionNumbers"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ExemptionNumbers"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkHumanSubjectAssuranceNumber(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.HumanSubjectsSupplementType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((null == realValue)? 0 :realValue.length())>= 1) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1);
                    }
                    if (((null == realValue)? 0 :realValue.length())<= 10) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 10);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HumanSubjectAssuranceNumber"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HumanSubjectAssuranceNumber"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkHumanSubjectIRBReviewDate(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.HumanSubjectsSupplementType master, java.util.Calendar value) {
            if (value instanceof java.util.Calendar) {
                java.util.Calendar realValue = ((java.util.Calendar) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.DateType datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HumanSubjectIRBReviewDate"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HumanSubjectIRBReviewDate"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.HumanSubjectsSupplementType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.HumanSubjectsSupplementType) object));
        }

        public static class ExemptionNumbersTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {

            protected java.lang.Object[] values = new java.lang.Object[] {"E4", "E2", "E3", "E5", "E6", "E1"};
            protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.HumanSubjectsSupplementType.ExemptionNumbersType master) {
                if (null == master.getExemptionNumber()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ExemptionNumber"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check count
                    if (master.getExemptionNumber().size()< 1) {
                        // Report minimum of occurences violated
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ExemptionNumber"), new de.fzi.dbs.verification.event.structure.TooFewElementsProblem(master.getExemptionNumber().size(), 1)));
                    }
                    if (master.getExemptionNumber().size()> 6) {
                        // Report maximum of occurences violated
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ExemptionNumber"), new de.fzi.dbs.verification.event.structure.TooManyElementsProblem(master.getExemptionNumber().size(), 6)));
                    }
                    // Check value
                    checkExemptionNumber(parentLocator, handler, master, master.getExemptionNumber());
                }
            }

            public void checkExemptionNumber(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.HumanSubjectsSupplementType.ExemptionNumbersType master, java.util.List values) {
                for (int index = 0; (index<values.size()); index ++) {
                    java.lang.Object item = values.get(index);
                    checkExemptionNumber(parentLocator, handler, master, index, item);
                }
            }

            public void checkExemptionNumber(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.HumanSubjectsSupplementType.ExemptionNumbersType master, int index, java.lang.Object value) {
                if (value instanceof java.lang.String) {
                    java.lang.String realValue = ((java.lang.String) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (valueSet.contains(realValue)) {
                            // Value is found in the enumeration, it is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "ExemptionNumber", index), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "ExemptionNumber", index), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.HumanSubjectsSupplementType.ExemptionNumbersType) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.HumanSubjectsSupplementType.ExemptionNumbersType) object));
            }

        }

    }

    public static class InternationalActivitiesTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {

        protected java.lang.Object[] values = new java.lang.Object[] {"N: No", "Y: Yes"};
        protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.InternationalActivitiesType master) {
            if (null == master.getInternationalActivitiesIndicator()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalActivitiesIndicator"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkInternationalActivitiesIndicator(parentLocator, handler, master, master.getInternationalActivitiesIndicator());
            }
            if (null!= master.getActivitiesPartnershipsCountries()) {
                // If left exists
                if (null == master.getActivitiesPartnershipsCountries()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkActivitiesPartnershipsCountries(parentLocator, handler, master, master.getActivitiesPartnershipsCountries());
                }
            }
            if (null!= master.getInternationalActivitiesExplanation()) {
                // If left exists
                if (null == master.getInternationalActivitiesExplanation()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkInternationalActivitiesExplanation(parentLocator, handler, master, master.getInternationalActivitiesExplanation());
                }
            }
        }

        public void checkInternationalActivitiesIndicator(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.InternationalActivitiesType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet.contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalActivitiesIndicator"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalActivitiesIndicator"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkActivitiesPartnershipsCountries(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.InternationalActivitiesType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((null == realValue)? 0 :realValue.length())>= 1) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1);
                    }
                    if (((null == realValue)? 0 :realValue.length())<= 55) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 55);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ActivitiesPartnershipsCountries"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ActivitiesPartnershipsCountries"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkInternationalActivitiesExplanation(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.InternationalActivitiesType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((null == realValue)? 0 :realValue.length())>= 1) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1);
                    }
                    if (((null == realValue)? 0 :realValue.length())<= 55) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 55);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalActivitiesExplanation"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalActivitiesExplanation"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.InternationalActivitiesType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.InternationalActivitiesType) object));
        }

    }

    public static class OtherAttachmentsTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {


        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.OtherAttachmentsType master) {
            if (null == master.getOtherAttachment()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "OtherAttachment"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check count
                if (master.getOtherAttachment().size()< 1) {
                    // Report minimum of occurences violated
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "OtherAttachment"), new de.fzi.dbs.verification.event.structure.TooFewElementsProblem(master.getOtherAttachment().size(), 1)));
                }
                // Check value
                checkOtherAttachment(parentLocator, handler, master, master.getOtherAttachment());
            }
        }

        public void checkOtherAttachment(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.OtherAttachmentsType master, java.util.List values) {
            for (int index = 0; (index<values.size()); index ++) {
                java.lang.Object item = values.get(index);
                checkOtherAttachment(parentLocator, handler, master, index, item);
            }
        }

        public void checkOtherAttachment(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.OtherAttachmentsType master, int index, java.lang.Object value) {
            if (value instanceof gov.grants.apply.system.attachments_v1.AttachedFileDataType) {
                gov.grants.apply.system.attachments_v1.AttachedFileDataType realValue = ((gov.grants.apply.system.attachments_v1.AttachedFileDataType) value);
                {
                    // Check complex value
                    gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier verifier = new gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "OtherAttachment", index), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "OtherAttachment", index), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.OtherAttachmentsType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.OtherAttachmentsType) object));
        }

    }

    public static class ProjectNarrativeAttachmentsTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {


        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.ProjectNarrativeAttachmentsType master) {
            if (null == master.getProjectNarrativeAttachment()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ProjectNarrativeAttachment"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkProjectNarrativeAttachment(parentLocator, handler, master, master.getProjectNarrativeAttachment());
            }
        }

        public void checkProjectNarrativeAttachment(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.ProjectNarrativeAttachmentsType master, gov.grants.apply.system.attachments_v1.AttachedFileDataType value) {
            if (value instanceof gov.grants.apply.system.attachments_v1.AttachedFileDataType) {
                gov.grants.apply.system.attachments_v1.AttachedFileDataType realValue = ((gov.grants.apply.system.attachments_v1.AttachedFileDataType) value);
                {
                    // Check complex value
                    gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier verifier = new gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ProjectNarrativeAttachment"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ProjectNarrativeAttachment"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.ProjectNarrativeAttachmentsType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.ProjectNarrativeAttachmentsType) object));
        }

    }

    public static class VertebrateAnimalsSupplementTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {

        protected java.lang.Object[] values = new java.lang.Object[] {"N: No", "Y: Yes"};
        protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.VertebrateAnimalsSupplementType master) {
            if (null!= master.getVertebrateAnimalsIACUCReviewIndicator()) {
                // If left exists
                if (null == master.getVertebrateAnimalsIACUCReviewIndicator()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkVertebrateAnimalsIACUCReviewIndicator(parentLocator, handler, master, master.getVertebrateAnimalsIACUCReviewIndicator());
                }
            }
            if (null!= master.getVertebrateAnimalsIACUCApprovalDateReviewDate()) {
                // If left exists
                if (null == master.getVertebrateAnimalsIACUCApprovalDateReviewDate()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkVertebrateAnimalsIACUCApprovalDateReviewDate(parentLocator, handler, master, master.getVertebrateAnimalsIACUCApprovalDateReviewDate());
                }
            }
            if (null!= master.getAssuranceNumber()) {
                // If left exists
                if (null == master.getAssuranceNumber()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkAssuranceNumber(parentLocator, handler, master, master.getAssuranceNumber());
                }
            }
        }

        public void checkAssuranceNumber(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.VertebrateAnimalsSupplementType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((null == realValue)? 0 :realValue.length())>= 1) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1);
                    }
                    if (((null == realValue)? 0 :realValue.length())<= 9) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 9);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AssuranceNumber"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AssuranceNumber"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkVertebrateAnimalsIACUCApprovalDateReviewDate(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.VertebrateAnimalsSupplementType master, java.util.Calendar value) {
            if (value instanceof java.util.Calendar) {
                java.util.Calendar realValue = ((java.util.Calendar) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.DateType datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "VertebrateAnimalsIACUCApprovalDateReviewDate"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "VertebrateAnimalsIACUCApprovalDateReviewDate"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkVertebrateAnimalsIACUCReviewIndicator(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.VertebrateAnimalsSupplementType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet.contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "VertebrateAnimalsIACUCReviewIndicator"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "VertebrateAnimalsIACUCReviewIndicator"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.VertebrateAnimalsSupplementType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.rr_otherprojectinfo_v1_1.RROtherProjectInfoType.VertebrateAnimalsSupplementType) object));
        }

    }

}
