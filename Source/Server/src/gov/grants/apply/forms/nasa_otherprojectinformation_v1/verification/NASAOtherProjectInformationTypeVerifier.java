//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.3-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.05.19 at 04:23:48 EDT 
//


package gov.grants.apply.forms.nasa_otherprojectinformation_v1.verification;

public class NASAOtherProjectInformationTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
{


    public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType master) {
        if (null == master.getFormVersion()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormVersion"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkFormVersion(parentLocator, handler, master, master.getFormVersion());
        }
        if (null == master.getNASACivilServicePersonnel()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "NASACivilServicePersonnel"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkNASACivilServicePersonnel(parentLocator, handler, master, master.getNASACivilServicePersonnel());
        }
        if (null == master.getHistoricImpact()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HistoricImpact"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkHistoricImpact(parentLocator, handler, master, master.getHistoricImpact());
        }
        if (null == master.getInternationalParticipation()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalParticipation"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkInternationalParticipation(parentLocator, handler, master, master.getInternationalParticipation());
        }
        if (null!= master.getPSDataAttach()) {
            // If left exists
            if (null == master.getPSDataAttach()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkPSDataAttach(parentLocator, handler, master, master.getPSDataAttach());
            }
        }
        if (null!= master.getAppendAttach()) {
            // If left exists
            if (null == master.getAppendAttach()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkAppendAttach(parentLocator, handler, master, master.getAppendAttach());
            }
        }
        if (null!= master.getLetterEndorsAttach()) {
            // If left exists
            if (null == master.getLetterEndorsAttach()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkLetterEndorsAttach(parentLocator, handler, master, master.getLetterEndorsAttach());
            }
        }
        if (null!= master.getIRBACUCLettersAttach()) {
            // If left exists
            if (null == master.getIRBACUCLettersAttach()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkIRBACUCLettersAttach(parentLocator, handler, master, master.getIRBACUCLettersAttach());
            }
        }
    }

    public void checkAppendAttach(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType master, gov.grants.apply.system.attachments_v1.AttachmentGroupMin0Max100DataType value) {
        if (value instanceof gov.grants.apply.system.attachments_v1.AttachmentGroupMin0Max100DataType) {
            gov.grants.apply.system.attachments_v1.AttachmentGroupMin0Max100DataType realValue = ((gov.grants.apply.system.attachments_v1.AttachmentGroupMin0Max100DataType) value);
            {
                // Check complex value
                gov.grants.apply.system.attachments_v1.verification.AttachmentGroupMin0Max100DataTypeVerifier verifier = new gov.grants.apply.system.attachments_v1.verification.AttachmentGroupMin0Max100DataTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AppendAttach"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AppendAttach"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkNASACivilServicePersonnel(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType master, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType value) {
        if (value instanceof gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType) {
            gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType realValue = ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType) value);
            {
                // Check complex value
                gov.grants.apply.forms.nasa_otherprojectinformation_v1.verification.NASAOtherProjectInformationTypeVerifier.NASACivilServicePersonnelTypeVerifier verifier = new gov.grants.apply.forms.nasa_otherprojectinformation_v1.verification.NASAOtherProjectInformationTypeVerifier.NASACivilServicePersonnelTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "NASACivilServicePersonnel"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "NASACivilServicePersonnel"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkInternationalParticipation(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType master, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.InternationalParticipationType value) {
        if (value instanceof gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.InternationalParticipationType) {
            gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.InternationalParticipationType realValue = ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.InternationalParticipationType) value);
            {
                // Check complex value
                gov.grants.apply.forms.nasa_otherprojectinformation_v1.verification.NASAOtherProjectInformationTypeVerifier.InternationalParticipationTypeVerifier verifier = new gov.grants.apply.forms.nasa_otherprojectinformation_v1.verification.NASAOtherProjectInformationTypeVerifier.InternationalParticipationTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalParticipation"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalParticipation"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkIRBACUCLettersAttach(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType master, gov.grants.apply.system.attachments_v1.AttachmentGroupMin0Max100DataType value) {
        if (value instanceof gov.grants.apply.system.attachments_v1.AttachmentGroupMin0Max100DataType) {
            gov.grants.apply.system.attachments_v1.AttachmentGroupMin0Max100DataType realValue = ((gov.grants.apply.system.attachments_v1.AttachmentGroupMin0Max100DataType) value);
            {
                // Check complex value
                gov.grants.apply.system.attachments_v1.verification.AttachmentGroupMin0Max100DataTypeVerifier verifier = new gov.grants.apply.system.attachments_v1.verification.AttachmentGroupMin0Max100DataTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IRBACUCLettersAttach"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "IRBACUCLettersAttach"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkFormVersion(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (((null == realValue)? 0 :realValue.length())>= 1) {
                    // Value length is correct
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1);
                }
                if (((null == realValue)? 0 :realValue.length())<= 30) {
                    // Value length is correct
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 30);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormVersion"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormVersion"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkHistoricImpact(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType master, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.HistoricImpactType value) {
        if (value instanceof gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.HistoricImpactType) {
            gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.HistoricImpactType realValue = ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.HistoricImpactType) value);
            {
                // Check complex value
                gov.grants.apply.forms.nasa_otherprojectinformation_v1.verification.NASAOtherProjectInformationTypeVerifier.HistoricImpactTypeVerifier verifier = new gov.grants.apply.forms.nasa_otherprojectinformation_v1.verification.NASAOtherProjectInformationTypeVerifier.HistoricImpactTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HistoricImpact"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HistoricImpact"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkPSDataAttach(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType master, gov.grants.apply.system.attachments_v1.AttachedFileDataType value) {
        if (value instanceof gov.grants.apply.system.attachments_v1.AttachedFileDataType) {
            gov.grants.apply.system.attachments_v1.AttachedFileDataType realValue = ((gov.grants.apply.system.attachments_v1.AttachedFileDataType) value);
            {
                // Check complex value
                gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier verifier = new gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "PSDataAttach"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "PSDataAttach"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkLetterEndorsAttach(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType master, gov.grants.apply.system.attachments_v1.AttachmentGroupMin0Max100DataType value) {
        if (value instanceof gov.grants.apply.system.attachments_v1.AttachmentGroupMin0Max100DataType) {
            gov.grants.apply.system.attachments_v1.AttachmentGroupMin0Max100DataType realValue = ((gov.grants.apply.system.attachments_v1.AttachmentGroupMin0Max100DataType) value);
            {
                // Check complex value
                gov.grants.apply.system.attachments_v1.verification.AttachmentGroupMin0Max100DataTypeVerifier verifier = new gov.grants.apply.system.attachments_v1.verification.AttachmentGroupMin0Max100DataTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "LetterEndorsAttach"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "LetterEndorsAttach"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
        check(parentLocator, handler, ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType) object));
    }

    public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
        check(null, handler, ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType) object));
    }

    public static class HistoricImpactTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {

        protected java.lang.Object[] values = new java.lang.Object[] {"N: No", "Y: Yes"};
        protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.HistoricImpactType master) {
            if (null == master.getHistoricImpactQ()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HistoricImpactQ"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkHistoricImpactQ(parentLocator, handler, master, master.getHistoricImpactQ());
            }
            if (null!= master.getHistoricImpactEx()) {
                // If left exists
                if (null == master.getHistoricImpactEx()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkHistoricImpactEx(parentLocator, handler, master, master.getHistoricImpactEx());
                }
            }
        }

        public void checkHistoricImpactQ(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.HistoricImpactType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet.contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HistoricImpactQ"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HistoricImpactQ"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkHistoricImpactEx(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.HistoricImpactType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((null == realValue)? 0 :realValue.length())>= 0) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 0);
                    }
                    if (((null == realValue)? 0 :realValue.length())<= 2000) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 2000);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HistoricImpactEx"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HistoricImpactEx"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.HistoricImpactType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.HistoricImpactType) object));
        }

    }

    public static class InternationalParticipationTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {

        protected java.lang.Object[] values = new java.lang.Object[] {"N: No", "Y: Yes"};
        protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));
        protected java.lang.Object[] values0 = new java.lang.Object[] {"N: No", "Y: Yes"};
        protected java.util.Set valueSet0 = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values0)));
        protected java.lang.Object[] values1 = new java.lang.Object[] {"N: No", "Y: Yes"};
        protected java.util.Set valueSet1 = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values1)));
        protected java.lang.Object[] values2 = new java.lang.Object[] {"N: No", "Y: Yes"};
        protected java.util.Set valueSet2 = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values2)));
        protected java.lang.Object[] values3 = new java.lang.Object[] {"N: No", "Y: Yes"};
        protected java.util.Set valueSet3 = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values3)));
        protected java.lang.Object[] values4 = new java.lang.Object[] {"N: No", "Y: Yes"};
        protected java.util.Set valueSet4 = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values4)));

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.InternationalParticipationType master) {
            if (null == master.getInternationalParticipationQ()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalParticipationQ"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkInternationalParticipationQ(parentLocator, handler, master, master.getInternationalParticipationQ());
            }
            if (null!= master.getInternationalParticipationPI()) {
                // If left exists
                if (null == master.getInternationalParticipationPI()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkInternationalParticipationPI(parentLocator, handler, master, master.getInternationalParticipationPI());
                }
            }
            if (null!= master.getInternationalParticipationCoI()) {
                // If left exists
                if (null == master.getInternationalParticipationCoI()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkInternationalParticipationCoI(parentLocator, handler, master, master.getInternationalParticipationCoI());
                }
            }
            if (null!= master.getInternationalParticipationCollaborator()) {
                // If left exists
                if (null == master.getInternationalParticipationCollaborator()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkInternationalParticipationCollaborator(parentLocator, handler, master, master.getInternationalParticipationCollaborator());
                }
            }
            if (null!= master.getInternationalParticipationEquipment()) {
                // If left exists
                if (null == master.getInternationalParticipationEquipment()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkInternationalParticipationEquipment(parentLocator, handler, master, master.getInternationalParticipationEquipment());
                }
            }
            if (null!= master.getInternationalParticipationFacility()) {
                // If left exists
                if (null == master.getInternationalParticipationFacility()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkInternationalParticipationFacility(parentLocator, handler, master, master.getInternationalParticipationFacility());
                }
            }
            if (null!= master.getInternationalParticipatioEx()) {
                // If left exists
                if (null == master.getInternationalParticipatioEx()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkInternationalParticipatioEx(parentLocator, handler, master, master.getInternationalParticipatioEx());
                }
            }
        }

        public void checkInternationalParticipationCollaborator(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.InternationalParticipationType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet.contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalParticipationCollaborator"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalParticipationCollaborator"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkInternationalParticipationEquipment(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.InternationalParticipationType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet0 .contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet0);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalParticipationEquipment"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalParticipationEquipment"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkInternationalParticipatioEx(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.InternationalParticipationType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((null == realValue)? 0 :realValue.length())>= 0) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 0);
                    }
                    if (((null == realValue)? 0 :realValue.length())<= 2000) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 2000);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalParticipatioEx"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalParticipatioEx"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkInternationalParticipationCoI(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.InternationalParticipationType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet1 .contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet1);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalParticipationCoI"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalParticipationCoI"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkInternationalParticipationPI(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.InternationalParticipationType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet2 .contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet2);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalParticipationPI"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalParticipationPI"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkInternationalParticipationQ(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.InternationalParticipationType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet3 .contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet3);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalParticipationQ"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalParticipationQ"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkInternationalParticipationFacility(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.InternationalParticipationType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet4 .contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet4);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalParticipationFacility"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InternationalParticipationFacility"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.InternationalParticipationType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.InternationalParticipationType) object));
        }

    }

    public static class NASACivilServicePersonnelTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {

        protected java.lang.Object[] values = new java.lang.Object[] {"N: No", "Y: Yes"};
        protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType master) {
            if (null == master.getCivilServicePersonnel()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CivilServicePersonnel"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkCivilServicePersonnel(parentLocator, handler, master, master.getCivilServicePersonnel());
            }
            if (null!= master.getFYFTE1()) {
                // If left exists
                if (null == master.getFYFTE1()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkFYFTE1(parentLocator, handler, master, master.getFYFTE1());
                }
            }
            if (null!= master.getFYFTE2()) {
                // If left exists
                if (null == master.getFYFTE2()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkFYFTE2(parentLocator, handler, master, master.getFYFTE2());
                }
            }
            if (null!= master.getFYFTE3()) {
                // If left exists
                if (null == master.getFYFTE3()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkFYFTE3(parentLocator, handler, master, master.getFYFTE3());
                }
            }
            if (null!= master.getFYFTE4()) {
                // If left exists
                if (null == master.getFYFTE4()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkFYFTE4(parentLocator, handler, master, master.getFYFTE4());
                }
            }
            if (null!= master.getFYFTE5()) {
                // If left exists
                if (null == master.getFYFTE5()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkFYFTE5(parentLocator, handler, master, master.getFYFTE5());
                }
            }
            if (null!= master.getFYFTE6()) {
                // If left exists
                if (null == master.getFYFTE6()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkFYFTE6(parentLocator, handler, master, master.getFYFTE6());
                }
            }
        }

        public void checkFYFTE6(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType master, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE6Type value) {
            if (value instanceof gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE6Type) {
                gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE6Type realValue = ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE6Type) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.nasa_otherprojectinformation_v1.verification.NASAOtherProjectInformationTypeVerifier.NASACivilServicePersonnelTypeVerifier.FYFTE6TypeVerifier verifier = new gov.grants.apply.forms.nasa_otherprojectinformation_v1.verification.NASAOtherProjectInformationTypeVerifier.NASACivilServicePersonnelTypeVerifier.FYFTE6TypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FYFTE6"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FYFTE6"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkFYFTE1(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType master, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE1Type value) {
            if (value instanceof gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE1Type) {
                gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE1Type realValue = ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE1Type) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.nasa_otherprojectinformation_v1.verification.NASAOtherProjectInformationTypeVerifier.NASACivilServicePersonnelTypeVerifier.FYFTE1TypeVerifier verifier = new gov.grants.apply.forms.nasa_otherprojectinformation_v1.verification.NASAOtherProjectInformationTypeVerifier.NASACivilServicePersonnelTypeVerifier.FYFTE1TypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FYFTE1"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FYFTE1"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkFYFTE3(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType master, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE3Type value) {
            if (value instanceof gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE3Type) {
                gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE3Type realValue = ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE3Type) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.nasa_otherprojectinformation_v1.verification.NASAOtherProjectInformationTypeVerifier.NASACivilServicePersonnelTypeVerifier.FYFTE3TypeVerifier verifier = new gov.grants.apply.forms.nasa_otherprojectinformation_v1.verification.NASAOtherProjectInformationTypeVerifier.NASACivilServicePersonnelTypeVerifier.FYFTE3TypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FYFTE3"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FYFTE3"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkFYFTE5(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType master, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE5Type value) {
            if (value instanceof gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE5Type) {
                gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE5Type realValue = ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE5Type) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.nasa_otherprojectinformation_v1.verification.NASAOtherProjectInformationTypeVerifier.NASACivilServicePersonnelTypeVerifier.FYFTE5TypeVerifier verifier = new gov.grants.apply.forms.nasa_otherprojectinformation_v1.verification.NASAOtherProjectInformationTypeVerifier.NASACivilServicePersonnelTypeVerifier.FYFTE5TypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FYFTE5"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FYFTE5"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkFYFTE4(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType master, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE4Type value) {
            if (value instanceof gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE4Type) {
                gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE4Type realValue = ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE4Type) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.nasa_otherprojectinformation_v1.verification.NASAOtherProjectInformationTypeVerifier.NASACivilServicePersonnelTypeVerifier.FYFTE4TypeVerifier verifier = new gov.grants.apply.forms.nasa_otherprojectinformation_v1.verification.NASAOtherProjectInformationTypeVerifier.NASACivilServicePersonnelTypeVerifier.FYFTE4TypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FYFTE4"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FYFTE4"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkFYFTE2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType master, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE2Type value) {
            if (value instanceof gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE2Type) {
                gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE2Type realValue = ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE2Type) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.nasa_otherprojectinformation_v1.verification.NASAOtherProjectInformationTypeVerifier.NASACivilServicePersonnelTypeVerifier.FYFTE2TypeVerifier verifier = new gov.grants.apply.forms.nasa_otherprojectinformation_v1.verification.NASAOtherProjectInformationTypeVerifier.NASACivilServicePersonnelTypeVerifier.FYFTE2TypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FYFTE2"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FYFTE2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkCivilServicePersonnel(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet.contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CivilServicePersonnel"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CivilServicePersonnel"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType) object));
        }

        public static class FYFTE1TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {

            protected java.lang.Object[] values = new java.lang.Object[] {"2006", "2017", "2016", "2010", "2009", "2021", "2019", "2012", "2008", "2011", "2015", "2018", "2007", "2013", "2020", "2014"};
            protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE1Type master) {
                if (null!= master.getFY1()) {
                    // If left exists
                    if (null == master.getFY1()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkFY1(parentLocator, handler, master, master.getFY1());
                    }
                }
                if (null!= master.getFTE1()) {
                    // If left exists
                    if (null == master.getFTE1()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkFTE1(parentLocator, handler, master, master.getFTE1());
                    }
                }
            }

            public void checkFY1(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE1Type master, java.lang.String value) {
                if (value instanceof java.lang.String) {
                    java.lang.String realValue = ((java.lang.String) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (valueSet.contains(realValue)) {
                            // Value is found in the enumeration, it is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FY1"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FY1"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkFTE1(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE1Type master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("99999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("99999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FTE1"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FTE1"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE1Type) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE1Type) object));
            }

        }

        public static class FYFTE2TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {

            protected java.lang.Object[] values = new java.lang.Object[] {"2006", "2017", "2016", "2010", "2009", "2021", "2019", "2012", "2008", "2011", "2015", "2018", "2007", "2013", "2020", "2014"};
            protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE2Type master) {
                if (null!= master.getFY2()) {
                    // If left exists
                    if (null == master.getFY2()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkFY2(parentLocator, handler, master, master.getFY2());
                    }
                }
                if (null!= master.getFTE2()) {
                    // If left exists
                    if (null == master.getFTE2()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkFTE2(parentLocator, handler, master, master.getFTE2());
                    }
                }
            }

            public void checkFTE2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE2Type master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("99999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("99999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FTE2"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FTE2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkFY2(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE2Type master, java.lang.String value) {
                if (value instanceof java.lang.String) {
                    java.lang.String realValue = ((java.lang.String) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (valueSet.contains(realValue)) {
                            // Value is found in the enumeration, it is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FY2"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FY2"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE2Type) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE2Type) object));
            }

        }

        public static class FYFTE3TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {

            protected java.lang.Object[] values = new java.lang.Object[] {"2006", "2017", "2016", "2010", "2009", "2021", "2019", "2012", "2008", "2011", "2015", "2018", "2007", "2013", "2020", "2014"};
            protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE3Type master) {
                if (null!= master.getFY3()) {
                    // If left exists
                    if (null == master.getFY3()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkFY3(parentLocator, handler, master, master.getFY3());
                    }
                }
                if (null!= master.getFTE3()) {
                    // If left exists
                    if (null == master.getFTE3()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkFTE3(parentLocator, handler, master, master.getFTE3());
                    }
                }
            }

            public void checkFY3(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE3Type master, java.lang.String value) {
                if (value instanceof java.lang.String) {
                    java.lang.String realValue = ((java.lang.String) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (valueSet.contains(realValue)) {
                            // Value is found in the enumeration, it is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FY3"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FY3"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkFTE3(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE3Type master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("99999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("99999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FTE3"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FTE3"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE3Type) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE3Type) object));
            }

        }

        public static class FYFTE4TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {

            protected java.lang.Object[] values = new java.lang.Object[] {"2006", "2017", "2016", "2010", "2009", "2021", "2019", "2012", "2008", "2011", "2015", "2018", "2007", "2013", "2020", "2014"};
            protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE4Type master) {
                if (null!= master.getFY4()) {
                    // If left exists
                    if (null == master.getFY4()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkFY4(parentLocator, handler, master, master.getFY4());
                    }
                }
                if (null!= master.getFTE4()) {
                    // If left exists
                    if (null == master.getFTE4()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkFTE4(parentLocator, handler, master, master.getFTE4());
                    }
                }
            }

            public void checkFY4(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE4Type master, java.lang.String value) {
                if (value instanceof java.lang.String) {
                    java.lang.String realValue = ((java.lang.String) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (valueSet.contains(realValue)) {
                            // Value is found in the enumeration, it is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FY4"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FY4"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkFTE4(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE4Type master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("99999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("99999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FTE4"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FTE4"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE4Type) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE4Type) object));
            }

        }

        public static class FYFTE5TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {

            protected java.lang.Object[] values = new java.lang.Object[] {"2006", "2017", "2016", "2010", "2009", "2021", "2019", "2012", "2008", "2011", "2015", "2018", "2007", "2013", "2020", "2014"};
            protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE5Type master) {
                if (null!= master.getFY5()) {
                    // If left exists
                    if (null == master.getFY5()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkFY5(parentLocator, handler, master, master.getFY5());
                    }
                }
                if (null!= master.getFTE5()) {
                    // If left exists
                    if (null == master.getFTE5()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkFTE5(parentLocator, handler, master, master.getFTE5());
                    }
                }
            }

            public void checkFY5(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE5Type master, java.lang.String value) {
                if (value instanceof java.lang.String) {
                    java.lang.String realValue = ((java.lang.String) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (valueSet.contains(realValue)) {
                            // Value is found in the enumeration, it is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FY5"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FY5"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkFTE5(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE5Type master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("99999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("99999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FTE5"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FTE5"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE5Type) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE5Type) object));
            }

        }

        public static class FYFTE6TypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {

            protected java.lang.Object[] values = new java.lang.Object[] {"2006", "2017", "2016", "2010", "2009", "2021", "2019", "2012", "2008", "2011", "2015", "2018", "2007", "2013", "2020", "2014"};
            protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE6Type master) {
                if (null!= master.getFY6()) {
                    // If left exists
                    if (null == master.getFY6()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkFY6(parentLocator, handler, master, master.getFY6());
                    }
                }
                if (null!= master.getFTE6()) {
                    // If left exists
                    if (null == master.getFTE6()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkFTE6(parentLocator, handler, master, master.getFTE6());
                    }
                }
            }

            public void checkFY6(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE6Type master, java.lang.String value) {
                if (value instanceof java.lang.String) {
                    java.lang.String realValue = ((java.lang.String) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (valueSet.contains(realValue)) {
                            // Value is found in the enumeration, it is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FY6"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FY6"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkFTE6(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE6Type master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.MaxInclusiveFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("0"))>= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.LessProblem(realValue, new java.math.BigDecimal("0"));
                        }
                        if (((java.lang.Comparable) realValue).compareTo(new java.math.BigDecimal("99999.99"))<= 0) {
                            // Range is valid
                        } else {
                            problem = new de.fzi.dbs.verification.event.datatype.GreaterProblem(realValue, new java.math.BigDecimal("99999.99"));
                        }
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FTE6"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FTE6"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE6Type) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.nasa_otherprojectinformation_v1.NASAOtherProjectInformationType.NASACivilServicePersonnelType.FYFTE6Type) object));
            }

        }

    }

}
