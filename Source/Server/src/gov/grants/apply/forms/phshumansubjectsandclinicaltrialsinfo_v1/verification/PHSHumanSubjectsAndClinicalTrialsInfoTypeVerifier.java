//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.10.24 at 10:09:00 CDT 
//


package gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.verification;

public class PHSHumanSubjectsAndClinicalTrialsInfoTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
{

    protected java.lang.Object[] values = new java.lang.Object[] {"N: No", "Y: Yes"};
    protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));
    protected java.lang.Object[] values0 = new java.lang.Object[] {"N: No", "Y: Yes"};
    protected java.util.Set valueSet0 = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values0)));
    protected java.lang.Object[] values1 = new java.lang.Object[] {"N: No", "Y: Yes"};
    protected java.util.Set valueSet1 = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values1)));

    public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType master) {
        if (null == master.getFormVersion()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormVersion"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkFormVersion(parentLocator, handler, master, master.getFormVersion());
        }
        if (null == master.getHumanSubjectsIndicator()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HumanSubjectsIndicator"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkHumanSubjectsIndicator(parentLocator, handler, master, master.getHumanSubjectsIndicator());
        }
        if (null!= master.getExemptFedReg()) {
            // If left exists
            if (null == master.getExemptFedReg()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkExemptFedReg(parentLocator, handler, master, master.getExemptFedReg());
            }
        }
        if (null!= master.getExemptionNumbers()) {
            // If left exists
            if (null == master.getExemptionNumbers()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkExemptionNumbers(parentLocator, handler, master, master.getExemptionNumbers());
            }
        }
        if (null!= master.getInvolveHumanSpecimens()) {
            // If left exists
            if (null == master.getInvolveHumanSpecimens()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkInvolveHumanSpecimens(parentLocator, handler, master, master.getInvolveHumanSpecimens());
            }
        }
        if (null!= master.getExplanation()) {
            // If left exists
            if (null == master.getExplanation()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkExplanation(parentLocator, handler, master, master.getExplanation());
            }
        }
        if (null!= master.getOtherRequestedInformation()) {
            // If left exists
            if (null == master.getOtherRequestedInformation()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkOtherRequestedInformation(parentLocator, handler, master, master.getOtherRequestedInformation());
            }
        }
        if (null == master.getHumanSubjectATT()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HumanSubjectATT"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check count
            if (master.getHumanSubjectATT().size()< 0) {
                // Report minimum of occurences violated
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HumanSubjectATT"), new de.fzi.dbs.verification.event.structure.TooFewElementsProblem(master.getHumanSubjectATT().size(), 0)));
            }
            if (master.getHumanSubjectATT().size()> 150) {
                // Report maximum of occurences violated
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HumanSubjectATT"), new de.fzi.dbs.verification.event.structure.TooManyElementsProblem(master.getHumanSubjectATT().size(), 150)));
            }
            // Check value
            checkHumanSubjectATT(parentLocator, handler, master, master.getHumanSubjectATT());
        }
        if (null == master.getDelayedOnsetStudy()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DelayedOnsetStudy"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check count
            if (master.getDelayedOnsetStudy().size()< 0) {
                // Report minimum of occurences violated
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DelayedOnsetStudy"), new de.fzi.dbs.verification.event.structure.TooFewElementsProblem(master.getDelayedOnsetStudy().size(), 0)));
            }
            if (master.getDelayedOnsetStudy().size()> 150) {
                // Report maximum of occurences violated
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "DelayedOnsetStudy"), new de.fzi.dbs.verification.event.structure.TooManyElementsProblem(master.getDelayedOnsetStudy().size(), 150)));
            }
            // Check value
            checkDelayedOnsetStudy(parentLocator, handler, master, master.getDelayedOnsetStudy());
        }
        if (null!= master.getHumanSubjectStudyAttachment()) {
            // If left exists
            if (null == master.getHumanSubjectStudyAttachment()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkHumanSubjectStudyAttachment(parentLocator, handler, master, master.getHumanSubjectStudyAttachment());
            }
        }
        if (null!= master.getApplId()) {
            // If left exists
            if (null == master.getApplId()) {
                // Optional field - nothing to report
            } else {
                // Check value
                checkApplId(parentLocator, handler, master, master.getApplId());
            }
        }
    }

    public void checkDelayedOnsetStudy(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType master, java.util.List values) {
        for (int index = 0; (index<values.size()); index ++) {
            java.lang.Object item = values.get(index);
            checkDelayedOnsetStudy(parentLocator, handler, master, index, item);
        }
    }

    public void checkDelayedOnsetStudy(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType master, int index, java.lang.Object value) {
        if (value instanceof gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.DelayedOnsetStudyType) {
            gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.DelayedOnsetStudyType realValue = ((gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.DelayedOnsetStudyType) value);
            {
                // Check complex value
                gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.verification.PHSHumanSubjectsAndClinicalTrialsInfoTypeVerifier.DelayedOnsetStudyTypeVerifier verifier = new gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.verification.PHSHumanSubjectsAndClinicalTrialsInfoTypeVerifier.DelayedOnsetStudyTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "DelayedOnsetStudy", index), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "DelayedOnsetStudy", index), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkExemptFedReg(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (valueSet.contains(realValue)) {
                    // Value is found in the enumeration, it is valid
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ExemptFedReg"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ExemptFedReg"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkHumanSubjectsIndicator(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (valueSet0 .contains(realValue)) {
                    // Value is found in the enumeration, it is valid
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet0);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HumanSubjectsIndicator"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HumanSubjectsIndicator"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkExemptionNumbers(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType master, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.ExemptionNumbersType value) {
        if (value instanceof gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.ExemptionNumbersType) {
            gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.ExemptionNumbersType realValue = ((gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.ExemptionNumbersType) value);
            {
                // Check complex value
                gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.verification.PHSHumanSubjectsAndClinicalTrialsInfoTypeVerifier.ExemptionNumbersTypeVerifier verifier = new gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.verification.PHSHumanSubjectsAndClinicalTrialsInfoTypeVerifier.ExemptionNumbersTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ExemptionNumbers"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ExemptionNumbers"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkHumanSubjectStudyAttachment(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType master, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.HumanSubjectStudyAttachmentType value) {
        if (value instanceof gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.HumanSubjectStudyAttachmentType) {
            gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.HumanSubjectStudyAttachmentType realValue = ((gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.HumanSubjectStudyAttachmentType) value);
            {
                // Check complex value
                gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.verification.PHSHumanSubjectsAndClinicalTrialsInfoTypeVerifier.HumanSubjectStudyAttachmentTypeVerifier verifier = new gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.verification.PHSHumanSubjectsAndClinicalTrialsInfoTypeVerifier.HumanSubjectStudyAttachmentTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HumanSubjectStudyAttachment"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HumanSubjectStudyAttachment"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkApplId(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (((null == realValue)? 0 :realValue.length())>= 1) {
                    // Value length is correct
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1);
                }
                if (((null == realValue)? 0 :realValue.length())<= 40) {
                    // Value length is correct
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 40);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ApplId"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ApplId"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkOtherRequestedInformation(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType master, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.OtherRequestedInformationType value) {
        if (value instanceof gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.OtherRequestedInformationType) {
            gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.OtherRequestedInformationType realValue = ((gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.OtherRequestedInformationType) value);
            {
                // Check complex value
                gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.verification.PHSHumanSubjectsAndClinicalTrialsInfoTypeVerifier.OtherRequestedInformationTypeVerifier verifier = new gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.verification.PHSHumanSubjectsAndClinicalTrialsInfoTypeVerifier.OtherRequestedInformationTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "OtherRequestedInformation"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "OtherRequestedInformation"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkExplanation(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType master, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.ExplanationType value) {
        if (value instanceof gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.ExplanationType) {
            gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.ExplanationType realValue = ((gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.ExplanationType) value);
            {
                // Check complex value
                gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.verification.PHSHumanSubjectsAndClinicalTrialsInfoTypeVerifier.ExplanationTypeVerifier verifier = new gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.verification.PHSHumanSubjectsAndClinicalTrialsInfoTypeVerifier.ExplanationTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Explanation"), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Explanation"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkInvolveHumanSpecimens(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (valueSet1 .contains(realValue)) {
                    // Value is found in the enumeration, it is valid
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet1);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InvolveHumanSpecimens"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "InvolveHumanSpecimens"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkHumanSubjectATT(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType master, java.util.List values) {
        for (int index = 0; (index<values.size()); index ++) {
            java.lang.Object item = values.get(index);
            checkHumanSubjectATT(parentLocator, handler, master, index, item);
        }
    }

    public void checkHumanSubjectATT(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType master, int index, java.lang.Object value) {
        if (value instanceof gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.HumanSubjectATTType) {
            gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.HumanSubjectATTType realValue = ((gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.HumanSubjectATTType) value);
            {
                // Check complex value
                gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.verification.PHSHumanSubjectsAndClinicalTrialsInfoTypeVerifier.HumanSubjectATTTypeVerifier verifier = new gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.verification.PHSHumanSubjectsAndClinicalTrialsInfoTypeVerifier.HumanSubjectATTTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "HumanSubjectATT", index), handler, realValue);
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "HumanSubjectATT", index), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkFormVersion(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (((null == realValue)? 0 :realValue.length())>= 1) {
                    // Value length is correct
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1);
                }
                if (((null == realValue)? 0 :realValue.length())<= 30) {
                    // Value length is correct
                } else {
                    problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 30);
                }
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormVersion"), problem));
                }
            }
        } else {
            if (null == value) {
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FormVersion"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
        check(parentLocator, handler, ((gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType) object));
    }

    public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
        check(null, handler, ((gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType) object));
    }

    public static class DelayedOnsetStudyTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {

        protected java.lang.Object[] values = new java.lang.Object[] {"N: No", "Y: Yes"};
        protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.DelayedOnsetStudyType master) {
            if (null == master.getStudyTitle()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "StudyTitle"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkStudyTitle(parentLocator, handler, master, master.getStudyTitle());
            }
            if (null!= master.getAnticipatedClinicalTrial()) {
                // If left exists
                if (null == master.getAnticipatedClinicalTrial()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkAnticipatedClinicalTrial(parentLocator, handler, master, master.getAnticipatedClinicalTrial());
                }
            }
            if (null == master.getJustification()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Justification"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkJustification(parentLocator, handler, master, master.getJustification());
            }
        }

        public void checkJustification(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.DelayedOnsetStudyType master, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.DelayedOnsetStudyType.JustificationType value) {
            if (value instanceof gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.DelayedOnsetStudyType.JustificationType) {
                gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.DelayedOnsetStudyType.JustificationType realValue = ((gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.DelayedOnsetStudyType.JustificationType) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.verification.PHSHumanSubjectsAndClinicalTrialsInfoTypeVerifier.DelayedOnsetStudyTypeVerifier.JustificationTypeVerifier verifier = new gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.verification.PHSHumanSubjectsAndClinicalTrialsInfoTypeVerifier.DelayedOnsetStudyTypeVerifier.JustificationTypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Justification"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Justification"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkStudyTitle(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.DelayedOnsetStudyType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((null == realValue)? 0 :realValue.length())>= 1) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1);
                    }
                    if (((null == realValue)? 0 :realValue.length())<= 600) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 600);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "StudyTitle"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "StudyTitle"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkAnticipatedClinicalTrial(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.DelayedOnsetStudyType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet.contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AnticipatedClinicalTrial"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AnticipatedClinicalTrial"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.DelayedOnsetStudyType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.DelayedOnsetStudyType) object));
        }

        public static class JustificationTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {


            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.DelayedOnsetStudyType.JustificationType master) {
                if (null == master.getAttFile()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AttFile"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check value
                    checkAttFile(parentLocator, handler, master, master.getAttFile());
                }
            }

            public void checkAttFile(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.DelayedOnsetStudyType.JustificationType master, gov.grants.apply.system.attachments_v1.AttachedFileDataType value) {
                if (value instanceof gov.grants.apply.system.attachments_v1.AttachedFileDataType) {
                    gov.grants.apply.system.attachments_v1.AttachedFileDataType realValue = ((gov.grants.apply.system.attachments_v1.AttachedFileDataType) value);
                    {
                        // Check complex value
                        gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier verifier = new gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier();
                        verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AttFile"), handler, realValue);
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AttFile"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.DelayedOnsetStudyType.JustificationType) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.DelayedOnsetStudyType.JustificationType) object));
            }

        }

    }

    public static class ExemptionNumbersTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {

        protected java.lang.Object[] values = new java.lang.Object[] {"E2", "E1", "E4", "E3", "E5", "E6", "E7", "E8"};
        protected java.util.Set valueSet = java.util.Collections.unmodifiableSet(new java.util.HashSet(java.util.Arrays.asList(values)));

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.ExemptionNumbersType master) {
            if (null == master.getExemptionNumber()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ExemptionNumber"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check count
                if (master.getExemptionNumber().size()< 1) {
                    // Report minimum of occurences violated
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ExemptionNumber"), new de.fzi.dbs.verification.event.structure.TooFewElementsProblem(master.getExemptionNumber().size(), 1)));
                }
                if (master.getExemptionNumber().size()> 8) {
                    // Report maximum of occurences violated
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ExemptionNumber"), new de.fzi.dbs.verification.event.structure.TooManyElementsProblem(master.getExemptionNumber().size(), 8)));
                }
                // Check value
                checkExemptionNumber(parentLocator, handler, master, master.getExemptionNumber());
            }
        }

        public void checkExemptionNumber(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.ExemptionNumbersType master, java.util.List values) {
            for (int index = 0; (index<values.size()); index ++) {
                java.lang.Object item = values.get(index);
                checkExemptionNumber(parentLocator, handler, master, index, item);
            }
        }

        public void checkExemptionNumber(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.ExemptionNumbersType master, int index, java.lang.Object value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.EnumerationFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (valueSet.contains(realValue)) {
                        // Value is found in the enumeration, it is valid
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.EnumerationProblem(realValue, valueSet);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "ExemptionNumber", index), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "ExemptionNumber", index), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.ExemptionNumbersType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.ExemptionNumbersType) object));
        }

    }

    public static class ExplanationTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {


        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.ExplanationType master) {
            if (null == master.getAttFile()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AttFile"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkAttFile(parentLocator, handler, master, master.getAttFile());
            }
        }

        public void checkAttFile(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.ExplanationType master, gov.grants.apply.system.attachments_v1.AttachedFileDataType value) {
            if (value instanceof gov.grants.apply.system.attachments_v1.AttachedFileDataType) {
                gov.grants.apply.system.attachments_v1.AttachedFileDataType realValue = ((gov.grants.apply.system.attachments_v1.AttachedFileDataType) value);
                {
                    // Check complex value
                    gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier verifier = new gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AttFile"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AttFile"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.ExplanationType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.ExplanationType) object));
        }

    }

    public static class HumanSubjectATTTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {


        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.HumanSubjectATTType master) {
            if (null == master.getATT()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ATT"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkATT(parentLocator, handler, master, master.getATT());
            }
        }

        public void checkATT(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.HumanSubjectATTType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                {
                    // Perform the check
                    // Checking class com.sun.msv.datatype.xsd.MaxLengthFacet datatype
                    de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                    if (((null == realValue)? 0 :realValue.length())>= 1) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooShortProblem(realValue, ((null == realValue)? 0 :realValue.length()), 1);
                    }
                    if (((null == realValue)? 0 :realValue.length())<= 30) {
                        // Value length is correct
                    } else {
                        problem = new de.fzi.dbs.verification.event.datatype.TooLongProblem(realValue, ((null == realValue)? 0 :realValue.length()), 30);
                    }
                    if (null!= problem) {
                        // Handle event
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ATT"), problem));
                    }
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ATT"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.HumanSubjectATTType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.HumanSubjectATTType) object));
        }

    }

    public static class HumanSubjectStudyAttachmentTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {


        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.HumanSubjectStudyAttachmentType master) {
            if (null == master.getHumanSubjectStudy()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HumanSubjectStudy"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check count
                if (master.getHumanSubjectStudy().size()< 0) {
                    // Report minimum of occurences violated
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HumanSubjectStudy"), new de.fzi.dbs.verification.event.structure.TooFewElementsProblem(master.getHumanSubjectStudy().size(), 0)));
                }
                if (master.getHumanSubjectStudy().size()> 150) {
                    // Report maximum of occurences violated
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "HumanSubjectStudy"), new de.fzi.dbs.verification.event.structure.TooManyElementsProblem(master.getHumanSubjectStudy().size(), 150)));
                }
                // Check value
                checkHumanSubjectStudy(parentLocator, handler, master, master.getHumanSubjectStudy());
            }
        }

        public void checkHumanSubjectStudy(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.HumanSubjectStudyAttachmentType master, java.util.List values) {
            for (int index = 0; (index<values.size()); index ++) {
                java.lang.Object item = values.get(index);
                checkHumanSubjectStudy(parentLocator, handler, master, index, item);
            }
        }

        public void checkHumanSubjectStudy(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.HumanSubjectStudyAttachmentType master, int index, java.lang.Object value) {
            if (value instanceof gov.grants.apply.forms.humansubjectstudy_v1.HumanSubjectStudyType) {
                gov.grants.apply.forms.humansubjectstudy_v1.HumanSubjectStudyType realValue = ((gov.grants.apply.forms.humansubjectstudy_v1.HumanSubjectStudyType) value);
                {
                    // Check complex value
                    gov.grants.apply.forms.humansubjectstudy_v1.verification.HumanSubjectStudyTypeVerifier verifier = new gov.grants.apply.forms.humansubjectstudy_v1.verification.HumanSubjectStudyTypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "HumanSubjectStudy", index), handler, realValue);
                }
            } else {
                if (value instanceof gov.grants.apply.forms.humansubjectstudy_v1.HumanSubjectStudy) {
                    gov.grants.apply.forms.humansubjectstudy_v1.HumanSubjectStudy realValue = ((gov.grants.apply.forms.humansubjectstudy_v1.HumanSubjectStudy) value);
                    {
                        // Check complex value
                        gov.grants.apply.forms.humansubjectstudy_v1.verification.HumanSubjectStudyVerifier verifier = new gov.grants.apply.forms.humansubjectstudy_v1.verification.HumanSubjectStudyVerifier();
                        verifier.check(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "HumanSubjectStudy", index), handler, realValue);
                    }
                } else {
                    if (null == value) {
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "HumanSubjectStudy", index), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.HumanSubjectStudyAttachmentType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.HumanSubjectStudyAttachmentType) object));
        }

    }

    public static class OtherRequestedInformationTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {


        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.OtherRequestedInformationType master) {
            if (null == master.getAttFile()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AttFile"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkAttFile(parentLocator, handler, master, master.getAttFile());
            }
        }

        public void checkAttFile(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.OtherRequestedInformationType master, gov.grants.apply.system.attachments_v1.AttachedFileDataType value) {
            if (value instanceof gov.grants.apply.system.attachments_v1.AttachedFileDataType) {
                gov.grants.apply.system.attachments_v1.AttachedFileDataType realValue = ((gov.grants.apply.system.attachments_v1.AttachedFileDataType) value);
                {
                    // Check complex value
                    gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier verifier = new gov.grants.apply.system.attachments_v1.verification.AttachedFileDataTypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AttFile"), handler, realValue);
                }
            } else {
                if (null == value) {
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AttFile"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.OtherRequestedInformationType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.forms.phshumansubjectsandclinicaltrialsinfo_v1.PHSHumanSubjectsAndClinicalTrialsInfoType.OtherRequestedInformationType) object));
        }

    }

}
