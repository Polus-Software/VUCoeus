//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.3-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.04.12 at 03:07:00 EDT 
//


package gov.grants.apply.coeus.extrakeyperson.verification;

public class ExtraKeyPersonListTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
{


    public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType master) {
        if (null == master.getProposalNumber()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ProposalNumber"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkProposalNumber(parentLocator, handler, master, master.getProposalNumber());
        }
        if (null == master.getBudgetPeriod()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriod"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check value
            checkBudgetPeriod(parentLocator, handler, master, master.getBudgetPeriod());
        }
        if (null == master.getKeyPersons()) {
            // Report missing object
            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "KeyPersons"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
        } else {
            // Check count
            if (master.getKeyPersons().size()< 1) {
                // Report minimum of occurences violated
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "KeyPersons"), new de.fzi.dbs.verification.event.structure.TooFewElementsProblem(master.getKeyPersons().size(), 1)));
            }
            // Check value
            checkKeyPersons(parentLocator, handler, master, master.getKeyPersons());
        }
    }

    public void checkProposalNumber(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType master, java.lang.String value) {
        if (value instanceof java.lang.String) {
            java.lang.String realValue = ((java.lang.String) value);
            // Check primitive value
            // Primitive value is always valid, nothing to check
        } else {
            if (null == value) {
                // todo: report null
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ProposalNumber"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkKeyPersons(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType master, java.util.List values) {
        for (int index = 0; (index<values.size()); index ++) {
            java.lang.Object item = values.get(index);
            checkKeyPersons(parentLocator, handler, master, index, item);
        }
    }

    public void checkKeyPersons(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType master, int index, java.lang.Object value) {
        if (value instanceof gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType) {
            gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType realValue = ((gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType) value);
            {
                // Check complex value
                gov.grants.apply.coeus.extrakeyperson.verification.ExtraKeyPersonListTypeVerifier.KeyPersonsTypeVerifier verifier = new gov.grants.apply.coeus.extrakeyperson.verification.ExtraKeyPersonListTypeVerifier.KeyPersonsTypeVerifier();
                verifier.check(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "KeyPersons", index), handler, realValue);
            }
        } else {
            if (null == value) {
                // todo: report null
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.EntryLocator(parentLocator, master, "KeyPersons", index), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void checkBudgetPeriod(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType master, java.math.BigInteger value) {
        if (value instanceof java.math.BigInteger) {
            java.math.BigInteger realValue = ((java.math.BigInteger) value);
            // Check primitive value
            {
                // Perform the check
                // Checking class com.sun.msv.datatype.xsd.IntegerType datatype
                de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                if (null!= problem) {
                    // Handle event
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriod"), problem));
                }
            }
        } else {
            if (null == value) {
                // todo: report null
            } else {
                // Report wrong class
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BudgetPeriod"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
            }
        }
    }

    public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
        check(parentLocator, handler, ((gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType) object));
    }

    public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
        check(null, handler, ((gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType) object));
    }

    public static class KeyPersonsTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
    {


        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType master) {
            if (null!= master.getPrefix()) {
                // If left exists
                if (null == master.getPrefix()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkPrefix(parentLocator, handler, master, master.getPrefix());
                }
            }
            if (null == master.getFirstName()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FirstName"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkFirstName(parentLocator, handler, master, master.getFirstName());
            }
            if (null!= master.getMiddleName()) {
                // If left exists
                if (null == master.getMiddleName()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkMiddleName(parentLocator, handler, master, master.getMiddleName());
                }
            }
            if (null == master.getLastName()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "LastName"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkLastName(parentLocator, handler, master, master.getLastName());
            }
            if (null!= master.getSuffix()) {
                // If left exists
                if (null == master.getSuffix()) {
                    // Optional field - nothing to report
                } else {
                    // Check value
                    checkSuffix(parentLocator, handler, master, master.getSuffix());
                }
            }
            if (null == master.getProjectRole()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ProjectRole"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkProjectRole(parentLocator, handler, master, master.getProjectRole());
            }
            if (null == master.getCompensation()) {
                // Report missing object
                handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Compensation"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
            } else {
                // Check value
                checkCompensation(parentLocator, handler, master, master.getCompensation());
            }
        }

        public void checkCompensation(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType master, gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType.CompensationType value) {
            if (value instanceof gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType.CompensationType) {
                gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType.CompensationType realValue = ((gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType.CompensationType) value);
                {
                    // Check complex value
                    gov.grants.apply.coeus.extrakeyperson.verification.ExtraKeyPersonListTypeVerifier.KeyPersonsTypeVerifier.CompensationTypeVerifier verifier = new gov.grants.apply.coeus.extrakeyperson.verification.ExtraKeyPersonListTypeVerifier.KeyPersonsTypeVerifier.CompensationTypeVerifier();
                    verifier.check(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Compensation"), handler, realValue);
                }
            } else {
                if (null == value) {
                    // todo: report null
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Compensation"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkProjectRole(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                // Primitive value is always valid, nothing to check
            } else {
                if (null == value) {
                    // todo: report null
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "ProjectRole"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkFirstName(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                // Primitive value is always valid, nothing to check
            } else {
                if (null == value) {
                    // todo: report null
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FirstName"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkPrefix(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                // Primitive value is always valid, nothing to check
            } else {
                if (null == value) {
                    // todo: report null
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Prefix"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkMiddleName(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                // Primitive value is always valid, nothing to check
            } else {
                if (null == value) {
                    // todo: report null
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "MiddleName"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkSuffix(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                // Primitive value is always valid, nothing to check
            } else {
                if (null == value) {
                    // todo: report null
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "Suffix"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void checkLastName(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType master, java.lang.String value) {
            if (value instanceof java.lang.String) {
                java.lang.String realValue = ((java.lang.String) value);
                // Check primitive value
                // Primitive value is always valid, nothing to check
            } else {
                if (null == value) {
                    // todo: report null
                } else {
                    // Report wrong class
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "LastName"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                }
            }
        }

        public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(parentLocator, handler, ((gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType) object));
        }

        public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
            check(null, handler, ((gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType) object));
        }

        public static class CompensationTypeVerifier implements de.fzi.dbs.verification.ObjectVerifier
        {


            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType.CompensationType master) {
                if (null!= master.getCalendarMonths()) {
                    // If left exists
                    if (null == master.getCalendarMonths()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkCalendarMonths(parentLocator, handler, master, master.getCalendarMonths());
                    }
                }
                if (null!= master.getSummerMonths()) {
                    // If left exists
                    if (null == master.getSummerMonths()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkSummerMonths(parentLocator, handler, master, master.getSummerMonths());
                    }
                }
                if (null!= master.getAcademicMonths()) {
                    // If left exists
                    if (null == master.getAcademicMonths()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkAcademicMonths(parentLocator, handler, master, master.getAcademicMonths());
                    }
                }
                if (null == master.getRequestedSalary()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "RequestedSalary"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check value
                    checkRequestedSalary(parentLocator, handler, master, master.getRequestedSalary());
                }
                if (null == master.getFringeBenefits()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FringeBenefits"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check value
                    checkFringeBenefits(parentLocator, handler, master, master.getFringeBenefits());
                }
                if (null == master.getFundsRequested()) {
                    // Report missing object
                    handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FundsRequested"), new de.fzi.dbs.verification.event.structure.EmptyFieldProblem()));
                } else {
                    // Check value
                    checkFundsRequested(parentLocator, handler, master, master.getFundsRequested());
                }
                if (null!= master.getNonFederal()) {
                    // If left exists
                    if (null == master.getNonFederal()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkNonFederal(parentLocator, handler, master, master.getNonFederal());
                    }
                }
                if (null!= master.getTotalFedNonFed()) {
                    // If left exists
                    if (null == master.getTotalFedNonFed()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkTotalFedNonFed(parentLocator, handler, master, master.getTotalFedNonFed());
                    }
                }
                if (null!= master.getBaseSalary()) {
                    // If left exists
                    if (null == master.getBaseSalary()) {
                        // Optional field - nothing to report
                    } else {
                        // Check value
                        checkBaseSalary(parentLocator, handler, master, master.getBaseSalary());
                    }
                }
            }

            public void checkBaseSalary(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType.CompensationType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BaseSalary"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                        // todo: report null
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "BaseSalary"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkNonFederal(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType.CompensationType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "NonFederal"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                        // todo: report null
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "NonFederal"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkTotalFedNonFed(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType.CompensationType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFedNonFed"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                        // todo: report null
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "TotalFedNonFed"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkAcademicMonths(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType.CompensationType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AcademicMonths"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                        // todo: report null
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "AcademicMonths"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkFundsRequested(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType.CompensationType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FundsRequested"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                        // todo: report null
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FundsRequested"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkCalendarMonths(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType.CompensationType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CalendarMonths"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                        // todo: report null
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "CalendarMonths"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkSummerMonths(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType.CompensationType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "SummerMonths"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                        // todo: report null
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "SummerMonths"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkFringeBenefits(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType.CompensationType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FringeBenefits"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                        // todo: report null
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "FringeBenefits"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void checkRequestedSalary(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType.CompensationType master, java.math.BigDecimal value) {
                if (value instanceof java.math.BigDecimal) {
                    java.math.BigDecimal realValue = ((java.math.BigDecimal) value);
                    // Check primitive value
                    {
                        // Perform the check
                        // Checking class com.sun.msv.datatype.xsd.FractionDigitsFacet datatype
                        de.fzi.dbs.verification.event.datatype.ValueProblem problem = null;
                        // todo: Check lexical constraints. How???
                        // todo: Check lexical constraints. How???
                        if (null!= problem) {
                            // Handle event
                            handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "RequestedSalary"), problem));
                        }
                    }
                } else {
                    if (null == value) {
                        // todo: report null
                    } else {
                        // Report wrong class
                        handler.handleEvent(new de.fzi.dbs.verification.event.VerificationEvent(new de.fzi.dbs.verification.event.VerificationEventLocator(parentLocator, master, "RequestedSalary"), new de.fzi.dbs.verification.event.structure.NonExpectedClassProblem(value.getClass())));
                    }
                }
            }

            public void check(de.fzi.dbs.verification.event.AbstractVerificationEventLocator parentLocator, javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(parentLocator, handler, ((gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType.CompensationType) object));
            }

            public void check(javax.xml.bind.ValidationEventHandler handler, java.lang.Object object) {
                check(null, handler, ((gov.grants.apply.coeus.extrakeyperson.ExtraKeyPersonListType.KeyPersonsType.CompensationType) object));
            }

        }

    }

}
