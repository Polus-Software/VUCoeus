<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2011 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:clitype="clitype" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:altova="http://www.altova.com" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:svg="http://www.w3.org/2000/svg" exclude-result-prefixes="clitype fn iso4217 ix java link xbrldi xbrli xlink xs xsi altova">
	<xsl:output version="1.0" method="xml" encoding="UTF-8" indent="no"/>
	<xsl:param name="SV_OutputFormat" select="'PDF'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:variable name="fo:layout-master-set">
		<fo:layout-master-set>
			<fo:simple-page-master master-name="page-master-203404984-even" margin-left="0.60in" margin-right="0.60in" page-height="11in" page-width="8.50in">
				<fo:region-body margin-top="1.38in" margin-bottom="0.99in" column-count="1" column-gap="0.50in"/>
				<fo:region-before region-name="even-page-header" overflow="hidden" extent="1.08in"/>
				<fo:region-after region-name="even-page-footer" overflow="hidden" extent="0.49in"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-203404984-odd" margin-left="0.60in" margin-right="0.60in" page-height="11in" page-width="8.50in">
				<fo:region-body margin-top="1.38in" margin-bottom="0.99in" column-count="1" column-gap="0.50in"/>
				<fo:region-before region-name="odd-page-header" overflow="hidden" extent="1.08in"/>
				<fo:region-after region-name="odd-page-footer" overflow="hidden" extent="0.49in"/>
			</fo:simple-page-master>
			<fo:page-sequence-master master-name="page-master-203404984">
				<fo:repeatable-page-master-alternatives>
					<fo:conditional-page-master-reference master-reference="page-master-203404984-even" odd-or-even="even"/>
					<fo:conditional-page-master-reference master-reference="page-master-203404984-odd" odd-or-even="odd"/>
				</fo:repeatable-page-master-alternatives>
			</fo:page-sequence-master>
		</fo:layout-master-set>
	</xsl:variable>
	<xsl:variable name="altova:nPxPerIn" select="96"/>
	<xsl:template match="/">
		<fo:root>
			<xsl:copy-of select="$fo:layout-master-set"/>
			<fo:page-sequence force-page-count="no-force" master-reference="page-master-203404984" initial-page-number="auto" format="1">
				<fo:static-content flow-name="odd-page-header">
					<fo:block-container margin-top="0.30in">
						<fo:block>
							<xsl:for-each select="$XML">
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table width="100%" table-layout="fixed" border-spacing="2pt">
									<fo:table-column column-width="1.040in"/>
									<fo:table-column column-width="0.650in"/>
									<fo:table-column column-width="5.440in"/>
									<fo:table-column column-width="0.170in"/>
									<xsl:variable name="altova:CurrContextGrid_0BFE9A60" select="."/>
									<fo:table-body start-indent="0pt">
										<xsl:variable name="altova:tablerows">
											<fo:table-row>
												<fo:table-cell font-size="10pt" padding="0" display-align="center">
													<fo:block text-align="left">
														<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
															<xsl:text>Account Number: </xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block text-align="left">
														<xsl:for-each select="AwardSummaryRoot">
															<xsl:for-each select="AccountNumber">
																<xsl:variable name="value-of-template_0BF8A3B0">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template_0BF8A3B0),'&#x200B;')">
																		<fo:block font-family="Times New Roman" font-size="9pt">
																			<xsl:copy-of select="$value-of-template_0BF8A3B0"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline font-family="Times New Roman" font-size="9pt">
																			<xsl:copy-of select="$value-of-template_0BF8A3B0"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block text-align="right">
														<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
															<xsl:text>Page: </xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell font-size="10pt" padding="0" display-align="center">
													<fo:block text-align="right">
														<fo:page-number font-family="Times New Roman" font-size="9pt"/>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block text-align="left">
														<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
															<xsl:text>PI:</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block text-align="left">
														<xsl:for-each select="AwardSummaryRoot">
															<xsl:for-each select="Investigators">
																<xsl:if test="PIFlag=true()">
																	<xsl:for-each select="InvestigatorName">
																		<xsl:variable name="value-of-template_0BF8A110">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template_0BF8A110),'&#x200B;')">
																				<fo:block font-size="9pt">
																					<xsl:copy-of select="$value-of-template_0BF8A110"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline font-size="9pt">
																					<xsl:copy-of select="$value-of-template_0BF8A110"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:if>
															</xsl:for-each>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block text-align="right"/>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block text-align="left"/>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell number-columns-spanned="4" padding="0" display-align="center">
													<fo:block text-align="left">
														<fo:block text-align="center">
															<fo:leader leader-pattern="rule" rule-thickness="1" leader-length="100%" color="black"/>
														</fo:block>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="string($altova:tablerows)">
												<xsl:copy-of select="$altova:tablerows"/>
											</xsl:when>
											<xsl:otherwise>
												<fo:table-row>
													<fo:table-cell>
														<fo:block/>
													</fo:table-cell>
												</fo:table-row>
											</xsl:otherwise>
										</xsl:choose>
									</fo:table-body>
								</fo:table>
							</xsl:for-each>
						</fo:block>
					</fo:block-container>
				</fo:static-content>
				<fo:static-content flow-name="even-page-header">
					<fo:block-container margin-top="0.30in">
						<fo:block>
							<xsl:for-each select="$XML">
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table width="100%" table-layout="fixed" border-spacing="2pt">
									<fo:table-column column-width="1.040in"/>
									<fo:table-column column-width="0.650in"/>
									<fo:table-column column-width="5.440in"/>
									<fo:table-column column-width="0.170in"/>
									<xsl:variable name="altova:CurrContextGrid_0BFE9A60" select="."/>
									<fo:table-body start-indent="0pt">
										<xsl:variable name="altova:tablerows">
											<fo:table-row>
												<fo:table-cell font-size="10pt" padding="0" display-align="center">
													<fo:block text-align="left">
														<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
															<xsl:text>Account Number: </xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block text-align="left">
														<xsl:for-each select="AwardSummaryRoot">
															<xsl:for-each select="AccountNumber">
																<xsl:variable name="value-of-template_0BF8A3B0">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template_0BF8A3B0),'&#x200B;')">
																		<fo:block font-family="Times New Roman" font-size="9pt">
																			<xsl:copy-of select="$value-of-template_0BF8A3B0"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline font-family="Times New Roman" font-size="9pt">
																			<xsl:copy-of select="$value-of-template_0BF8A3B0"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block text-align="right">
														<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
															<xsl:text>Page: </xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell font-size="10pt" padding="0" display-align="center">
													<fo:block text-align="right">
														<fo:page-number font-family="Times New Roman" font-size="9pt"/>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block text-align="left">
														<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
															<xsl:text>PI:</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block text-align="left">
														<xsl:for-each select="AwardSummaryRoot">
															<xsl:for-each select="Investigators">
																<xsl:if test="PIFlag=true()">
																	<xsl:for-each select="InvestigatorName">
																		<xsl:variable name="value-of-template_0BF8A110">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template_0BF8A110),'&#x200B;')">
																				<fo:block font-size="9pt">
																					<xsl:copy-of select="$value-of-template_0BF8A110"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline font-size="9pt">
																					<xsl:copy-of select="$value-of-template_0BF8A110"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</xsl:if>
															</xsl:for-each>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block text-align="right"/>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block text-align="left"/>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell number-columns-spanned="4" padding="0" display-align="center">
													<fo:block text-align="left">
														<fo:block text-align="center">
															<fo:leader leader-pattern="rule" rule-thickness="1" leader-length="100%" color="black"/>
														</fo:block>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="string($altova:tablerows)">
												<xsl:copy-of select="$altova:tablerows"/>
											</xsl:when>
											<xsl:otherwise>
												<fo:table-row>
													<fo:table-cell>
														<fo:block/>
													</fo:table-cell>
												</fo:table-row>
											</xsl:otherwise>
										</xsl:choose>
									</fo:table-body>
								</fo:table>
							</xsl:for-each>
						</fo:block>
					</fo:block-container>
				</fo:static-content>
				<fo:static-content flow-name="odd-page-footer">
					<fo:block-container height="0.490000in" overflow="hidden" display-align="after">
						<fo:block>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table width="100%" table-layout="fixed" border-spacing="2pt">
								<fo:table-column column-width="90%"/>
								<fo:table-column column-width="10%"/>
								<xsl:variable name="altova:CurrContextGrid_0BFE91C0" select="."/>
								<fo:table-body start-indent="0pt">
									<xsl:variable name="altova:tablerows">
										<fo:table-row>
											<fo:table-cell font-size="10pt" padding="0" display-align="center">
												<fo:block text-align="left">
													<fo:inline font-weight="bold">
														<xsl:text>Page: </xsl:text>
													</fo:inline>
													<fo:page-number font-weight="bold"/>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="10pt" padding="0" display-align="center">
												<fo:block text-align="right"/>
											</fo:table-cell>
										</fo:table-row>
									</xsl:variable>
									<xsl:choose>
										<xsl:when test="string($altova:tablerows)">
											<xsl:copy-of select="$altova:tablerows"/>
										</xsl:when>
										<xsl:otherwise>
											<fo:table-row>
												<fo:table-cell>
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
										</xsl:otherwise>
									</xsl:choose>
								</fo:table-body>
							</fo:table>
						</fo:block>
					</fo:block-container>
				</fo:static-content>
				<fo:static-content flow-name="even-page-footer">
					<fo:block-container height="0.490000in" overflow="hidden" display-align="after">
						<fo:block>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:table width="100%" table-layout="fixed" border-spacing="2pt">
								<fo:table-column column-width="90%"/>
								<fo:table-column column-width="10%"/>
								<xsl:variable name="altova:CurrContextGrid_0BFE91C0" select="."/>
								<fo:table-body start-indent="0pt">
									<xsl:variable name="altova:tablerows">
										<fo:table-row>
											<fo:table-cell font-size="10pt" padding="0" display-align="center">
												<fo:block text-align="left">
													<fo:inline font-weight="bold">
														<xsl:text>Page: </xsl:text>
													</fo:inline>
													<fo:page-number font-weight="bold"/>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell font-size="10pt" padding="0" display-align="center">
												<fo:block text-align="right"/>
											</fo:table-cell>
										</fo:table-row>
									</xsl:variable>
									<xsl:choose>
										<xsl:when test="string($altova:tablerows)">
											<xsl:copy-of select="$altova:tablerows"/>
										</xsl:when>
										<xsl:otherwise>
											<fo:table-row>
												<fo:table-cell>
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
										</xsl:otherwise>
									</xsl:choose>
								</fo:table-body>
							</fo:table>
						</fo:block>
					</fo:block-container>
				</fo:static-content>
				<fo:flow flow-name="xsl-region-body">
					<fo:block>
						<xsl:for-each select="$XML">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:block font-family="Times New Roman" font-size="14.5pt" text-align="center" margin="0pt">
								<fo:inline font-family="Times New Roman" font-size="14.5pt" font-weight="bold">
									<xsl:text>&lt;SCHOOL_NAME&gt;</xsl:text>
								</fo:inline>
							</fo:block>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x200B;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:block font-size="14pt" text-align="center" margin="0pt">
								<fo:inline font-family="Times New Roman" font-size="14pt" font-style="normal" font-weight="bold">
									<xsl:text>Award Record Summary</xsl:text>
								</fo:inline>
							</fo:block>
							<fo:block>
								<fo:leader leader-pattern="space"/>
							</fo:block>
							<xsl:for-each select="AwardSummaryRoot">
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block height="auto" width="100%" margin-right="100% - 100%" margin="0pt">
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x200B;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table table-layout="fixed" margin-left="(100% - 100%) div 2" width="100%" border-spacing="0">
										<fo:table-column column-width="50%"/>
										<fo:table-column column-width="50%"/>
										<xsl:variable name="altova:CurrContextGrid_0BFE8BC0" select="."/>
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<fo:table-row>
													<fo:table-cell padding="0" display-align="before">
														<fo:block text-align="left">
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x200B;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table table-layout="fixed" margin-left="(100% - 100%) div 2" width="100%" border-spacing="1">
																<fo:table-column column-width="45%"/>
																<fo:table-column column-width="2%"/>
																<fo:table-column column-width="53%"/>
																<xsl:variable name="altova:CurrContextGrid_0BFE85C0" select="."/>
																<fo:table-body start-indent="0pt">
																	<xsl:variable name="altova:tablerows">
																		<fo:table-row>
																			<fo:table-cell font-weight="bold" padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Investigators</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="center">
																				<fo:block text-align="left">
																					<fo:inline-container>
																						<fo:block>
																							<xsl:text>&#x200B;</xsl:text>
																						</fo:block>
																					</fo:inline-container>
																					<xsl:if test="Investigators">
																						<fo:table table-layout="fixed" width="100%" border-spacing="0">
																							<fo:table-column column-width="proportional-column-width(1)"/>
																							<xsl:variable name="altova:CurrContextGrid_0BFE9B80" select="."/>
																							<fo:table-body start-indent="0pt">
																								<xsl:variable name="altova:tablerows">
																									<xsl:for-each select="Investigators">
																										<fo:table-row>
																											<fo:table-cell padding="0" display-align="before">
																												<fo:block text-align="left">
																													<xsl:if test="string( PIFlag )=&apos;true&apos;">
																														<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																															<xsl:text>(PI) </xsl:text>
																														</fo:inline>
																													</xsl:if>
																													<xsl:for-each select="InvestigatorName">
																														<xsl:variable name="value-of-template_0BF8A1F0">
																															<xsl:apply-templates/>
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when test="contains(string($value-of-template_0BF8A1F0),'&#x200B;')">
																																<fo:block font-family="Times New Roman" font-size="9pt">
																																	<xsl:copy-of select="$value-of-template_0BF8A1F0"/>
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline font-family="Times New Roman" font-size="9pt">
																																	<xsl:copy-of select="$value-of-template_0BF8A1F0"/>
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																													<fo:block/>
																												</fo:block>
																											</fo:table-cell>
																										</fo:table-row>
																									</xsl:for-each>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="string($altova:tablerows)">
																										<xsl:copy-of select="$altova:tablerows"/>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:table-row>
																											<fo:table-cell>
																												<fo:block/>
																											</fo:table-cell>
																										</fo:table-row>
																									</xsl:otherwise>
																								</xsl:choose>
																							</fo:table-body>
																						</fo:table>
																					</xsl:if>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell font-weight="bold" padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Key Persons</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline-container>
																						<fo:block>
																							<xsl:text>&#x200B;</xsl:text>
																						</fo:block>
																					</fo:inline-container>
																					<xsl:if test="KeyPersons">
																						<fo:table table-layout="fixed" width="100%" border-spacing="0">
																							<fo:table-column column-width="proportional-column-width(1)"/>
																							<xsl:variable name="altova:CurrContextGrid_0BFE8AA0" select="."/>
																							<fo:table-body start-indent="0pt">
																								<xsl:variable name="altova:tablerows">
																									<xsl:for-each select="KeyPersons">
																										<fo:table-row>
																											<fo:table-cell padding="0" display-align="center">
																												<fo:block text-align="left">
																													<xsl:for-each select="InvestigatorName">
																														<xsl:variable name="value-of-template_0BF8A490">
																															<xsl:apply-templates/>
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when test="contains(string($value-of-template_0BF8A490),'&#x200B;')">
																																<fo:block font-family="Times New Roman" font-size="9pt">
																																	<xsl:copy-of select="$value-of-template_0BF8A490"/>
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline font-family="Times New Roman" font-size="9pt">
																																	<xsl:copy-of select="$value-of-template_0BF8A490"/>
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:table-cell>
																										</fo:table-row>
																									</xsl:for-each>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="string($altova:tablerows)">
																										<xsl:copy-of select="$altova:tablerows"/>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:table-row>
																											<fo:table-cell>
																												<fo:block/>
																											</fo:table-cell>
																										</fo:table-row>
																									</xsl:otherwise>
																								</xsl:choose>
																							</fo:table-body>
																						</fo:table>
																					</xsl:if>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell font-weight="bold" padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Title</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="center">
																				<fo:block text-align="left">
																					<xsl:for-each select="Title">
																						<xsl:variable name="value-of-template_0BF8A730">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_0BF8A730),'&#x200B;')">
																								<fo:block font-family="Times New Roman" font-size="9pt">
																									<xsl:copy-of select="$value-of-template_0BF8A730"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-family="Times New Roman" font-size="9pt">
																									<xsl:copy-of select="$value-of-template_0BF8A730"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell font-weight="bold" padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Sponsor Name</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<xsl:for-each select="SponsorName">
																						<xsl:variable name="value-of-template_0BF89F50">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_0BF89F50),'&#x200B;')">
																								<fo:block font-family="Times New Roman" font-size="9pt">
																									<xsl:copy-of select="$value-of-template_0BF89F50"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-family="Times New Roman" font-size="9pt">
																									<xsl:copy-of select="$value-of-template_0BF89F50"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell font-weight="bold" padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Status </xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<xsl:for-each select="Status">
																						<xsl:variable name="value-of-template_0BF8A030">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_0BF8A030),'&#x200B;')">
																								<fo:block font-family="Times New Roman" font-size="9pt">
																									<xsl:copy-of select="$value-of-template_0BF8A030"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-family="Times New Roman" font-size="9pt">
																									<xsl:copy-of select="$value-of-template_0BF8A030"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell font-weight="bold" padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Award Type</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<xsl:for-each select="AwardType">
																						<xsl:variable name="value-of-template_0BF89D90">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_0BF89D90),'&#x200B;')">
																								<fo:block font-family="Times New Roman" font-size="9pt">
																									<xsl:copy-of select="$value-of-template_0BF89D90"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-family="Times New Roman" font-size="9pt">
																									<xsl:copy-of select="$value-of-template_0BF89D90"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell font-weight="bold" padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Account Type</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="center">
																				<fo:block text-align="left">
																					<xsl:for-each select="AccountType">
																						<xsl:variable name="value-of-template_0BF89E70">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_0BF89E70),'&#x200B;')">
																								<fo:block font-family="Times New Roman" font-size="9pt">
																									<xsl:copy-of select="$value-of-template_0BF89E70"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-family="Times New Roman" font-size="9pt">
																									<xsl:copy-of select="$value-of-template_0BF89E70"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell font-weight="bold" padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Sponsor Number</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="center">
																				<fo:block text-align="left">
																					<xsl:for-each select="SponsorNumber">
																						<xsl:variable name="value-of-template_0BF8A650">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_0BF8A650),'&#x200B;')">
																								<fo:block font-family="Times New Roman" font-size="9pt">
																									<xsl:copy-of select="$value-of-template_0BF8A650"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-family="Times New Roman" font-size="9pt">
																									<xsl:copy-of select="$value-of-template_0BF8A650"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell font-weight="bold" padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Activity Type</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<xsl:for-each select="ActivityType">
																						<xsl:variable name="value-of-template_0BF8A8F0">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_0BF8A8F0),'&#x200B;')">
																								<fo:block font-family="Times New Roman" font-size="9pt">
																									<xsl:copy-of select="$value-of-template_0BF8A8F0"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-family="Times New Roman" font-size="9pt">
																									<xsl:copy-of select="$value-of-template_0BF8A8F0"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell font-weight="bold" padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Unit Number</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="center">
																				<fo:block text-align="left">
																					<fo:inline-container>
																						<fo:block>
																							<xsl:text>&#x200B;</xsl:text>
																						</fo:block>
																					</fo:inline-container>
																					<xsl:if test="Units">
																						<fo:table table-layout="fixed" width="100%" border-spacing="0">
																							<fo:table-column column-width="proportional-column-width(1)"/>
																							<xsl:variable name="altova:CurrContextGrid_0BA2F458" select="."/>
																							<fo:table-body start-indent="0pt">
																								<xsl:variable name="altova:tablerows">
																									<xsl:for-each select="Units">
																										<fo:table-row>
																											<fo:table-cell padding="0" display-align="before">
																												<fo:block text-align="left">
																													<xsl:if test="string( LeadUnitFlag)=&apos;true&apos;">
																														<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																															<xsl:text>(Lead)</xsl:text>
																														</fo:inline>
																													</xsl:if>
																													<xsl:for-each select="UnitNumber">
																														<xsl:variable name="value-of-template_0BF8AB90">
																															<xsl:apply-templates/>
																														</xsl:variable>
																														<xsl:choose>
																															<xsl:when test="contains(string($value-of-template_0BF8AB90),'&#x200B;')">
																																<fo:block font-family="Times New Roman" font-size="9pt">
																																	<xsl:copy-of select="$value-of-template_0BF8AB90"/>
																																</fo:block>
																															</xsl:when>
																															<xsl:otherwise>
																																<fo:inline font-family="Times New Roman" font-size="9pt">
																																	<xsl:copy-of select="$value-of-template_0BF8AB90"/>
																																</fo:inline>
																															</xsl:otherwise>
																														</xsl:choose>
																													</xsl:for-each>
																												</fo:block>
																											</fo:table-cell>
																										</fo:table-row>
																									</xsl:for-each>
																								</xsl:variable>
																								<xsl:choose>
																									<xsl:when test="string($altova:tablerows)">
																										<xsl:copy-of select="$altova:tablerows"/>
																									</xsl:when>
																									<xsl:otherwise>
																										<fo:table-row>
																											<fo:table-cell>
																												<fo:block/>
																											</fo:table-cell>
																										</fo:table-row>
																									</xsl:otherwise>
																								</xsl:choose>
																							</fo:table-body>
																						</fo:table>
																					</xsl:if>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell font-weight="bold" padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Award Number</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<xsl:for-each select="AwardNumber">
																						<xsl:variable name="value-of-template_0BF8A810">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_0BF8A810),'&#x200B;')">
																								<fo:block font-family="Times New Roman" font-size="9pt">
																									<xsl:copy-of select="$value-of-template_0BF8A810"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-family="Times New Roman" font-size="9pt">
																									<xsl:copy-of select="$value-of-template_0BF8A810"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell font-weight="bold" padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Account Number</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<xsl:for-each select="AccountNumber">
																						<xsl:variable name="value-of-template_0BF8A570">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_0BF8A570),'&#x200B;')">
																								<fo:block font-family="Times New Roman" font-size="9pt">
																									<xsl:copy-of select="$value-of-template_0BF8A570"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-family="Times New Roman" font-size="9pt">
																									<xsl:copy-of select="$value-of-template_0BF8A570"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell font-weight="bold" padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Sponsor Award</xsl:text>
																					</fo:inline>
																					<fo:block/>
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Number</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<xsl:for-each select="SponsorAwardNumber">
																						<xsl:variable name="value-of-template_0BF8A9D0">
																							<xsl:apply-templates/>
																						</xsl:variable>
																						<xsl:choose>
																							<xsl:when test="contains(string($value-of-template_0BF8A9D0),'&#x200B;')">
																								<fo:block font-family="Times New Roman" font-size="9pt">
																									<xsl:copy-of select="$value-of-template_0BF8A9D0"/>
																								</fo:block>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline font-family="Times New Roman" font-size="9pt">
																									<xsl:copy-of select="$value-of-template_0BF8A9D0"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="string($altova:tablerows)">
																			<xsl:copy-of select="$altova:tablerows"/>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:table-row>
																				<fo:table-cell>
																					<fo:block/>
																				</fo:table-cell>
																			</fo:table-row>
																		</xsl:otherwise>
																	</xsl:choose>
																</fo:table-body>
															</fo:table>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell padding="0" display-align="before">
														<fo:block text-align="left">
															<fo:inline-container>
																<fo:block>
																	<xsl:text>&#x200B;</xsl:text>
																</fo:block>
															</fo:inline-container>
															<fo:table display-align="before" table-layout="fixed" margin-left="(100% - 100%) div 2" width="100%" border-spacing="1">
																<fo:table-column column-width="60%"/>
																<fo:table-column column-width="2%"/>
																<fo:table-column column-width="38%"/>
																<xsl:variable name="altova:CurrContextGrid_0BA30778" select="."/>
																<fo:table-body start-indent="0pt">
																	<xsl:variable name="altova:tablerows">
																		<fo:table-row>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Award Effective Date</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<xsl:for-each select="AwardEffectiveDate">
																						<xsl:for-each select="Date">
																							<fo:inline font-family="Times New Roman" font-size="9pt">
																								<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00')"/>
																								<xsl:text> - </xsl:text>
																								<xsl:call-template name="DateToMonthName">
																									<xsl:with-param name="sDate" select="string(string(.))"/>
																									<xsl:with-param name="sFormat" select="'short'"/>
																								</xsl:call-template>
																								<xsl:text> - </xsl:text>
																								<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000')"/>
																							</fo:inline>
																						</xsl:for-each>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Final Expiration Date</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<xsl:for-each select="FinalExpirationDate">
																						<xsl:for-each select="Date">
																							<fo:inline font-family="Times New Roman" font-size="9pt">
																								<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00')"/>
																								<xsl:text> - </xsl:text>
																								<xsl:call-template name="DateToMonthName">
																									<xsl:with-param name="sDate" select="string(string(.))"/>
																									<xsl:with-param name="sFormat" select="'short'"/>
																								</xsl:call-template>
																								<xsl:text> - </xsl:text>
																								<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000')"/>
																							</fo:inline>
																						</xsl:for-each>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Obligation Effective Date</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<xsl:for-each select="ObligationEffectiveDate">
																						<xsl:for-each select="Date">
																							<fo:inline font-family="Times New Roman" font-size="9pt">
																								<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00')"/>
																								<xsl:text> - </xsl:text>
																								<xsl:call-template name="DateToMonthName">
																									<xsl:with-param name="sDate" select="string(string(.))"/>
																									<xsl:with-param name="sFormat" select="'short'"/>
																								</xsl:call-template>
																								<xsl:text> - </xsl:text>
																								<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000')"/>
																							</fo:inline>
																						</xsl:for-each>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Obligation Expiration Date</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<xsl:for-each select="ObligationExpirationDate">
																						<xsl:for-each select="Date">
																							<fo:inline font-family="Times New Roman" font-size="9pt">
																								<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00')"/>
																								<xsl:text> - </xsl:text>
																								<xsl:call-template name="DateToMonthName">
																									<xsl:with-param name="sDate" select="string(string(.))"/>
																									<xsl:with-param name="sFormat" select="'short'"/>
																								</xsl:call-template>
																								<xsl:text> - </xsl:text>
																								<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000')"/>
																							</fo:inline>
																						</xsl:for-each>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Anticipated Amount</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<xsl:for-each select="AnticipatedAmount">
																						<xsl:for-each select="Amount">
																							<xsl:variable name="value-of-template_04335DD0">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_04335DD0),'&#x200B;')">
																									<fo:block font-family="Times New Roman" font-size="9pt">
																										<xsl:copy-of select="$value-of-template_04335DD0"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline font-family="Times New Roman" font-size="9pt">
																										<xsl:copy-of select="$value-of-template_04335DD0"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Obligated Amount</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<xsl:for-each select="ObligatedAmount">
																						<xsl:for-each select="Amount">
																							<xsl:variable name="value-of-template_04335B30">
																								<xsl:apply-templates/>
																							</xsl:variable>
																							<xsl:choose>
																								<xsl:when test="contains(string($value-of-template_04335B30),'&#x200B;')">
																									<fo:block font-family="Times New Roman" font-size="9pt">
																										<xsl:copy-of select="$value-of-template_04335B30"/>
																									</fo:block>
																								</xsl:when>
																								<xsl:otherwise>
																									<fo:inline font-family="Times New Roman" font-size="9pt">
																										<xsl:copy-of select="$value-of-template_04335B30"/>
																									</fo:inline>
																								</xsl:otherwise>
																							</xsl:choose>
																						</xsl:for-each>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell number-columns-spanned="3" padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:block>
																						<fo:leader leader-pattern="space"/>
																					</fo:block>
																					<fo:inline-container>
																						<fo:block>
																							<xsl:text>&#x200B;</xsl:text>
																						</fo:block>
																					</fo:inline-container>
																					<fo:block font-size="12pt" margin="0pt">
																						<fo:inline font-family="Times New Roman" font-size="12pt" font-style="normal" font-weight="bold" text-decoration="underline">
																							<xsl:text>Schedules Completed in Coeus(If Checked)</xsl:text>
																						</fo:inline>
																					</fo:block>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Approved Equipment</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<xsl:for-each select="ApprovedEquipmentFlag">
																						<xsl:choose>
																							<xsl:when test="string(.)='true'">
																								<fo:inline border="solid 1pt black" font-family="ZapfDingbats" font-size="10pt ">
																									<xsl:text>&#x2714;</xsl:text>
																								</fo:inline>
																							</xsl:when>
																							<xsl:when test="string(.)='1'">
																								<fo:inline border="solid 1pt black" font-family="ZapfDingbats" font-size="10pt ">
																									<xsl:text>&#x2714;</xsl:text>
																								</fo:inline>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border="solid 1pt black">
																									<fo:leader leader-length="10pt" leader-pattern="space"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Approved Subcontract</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<xsl:for-each select="ApprovedSubContractFlag">
																						<xsl:choose>
																							<xsl:when test="string(.)='true'">
																								<fo:inline border="solid 1pt black" font-family="ZapfDingbats" font-size="10pt ">
																									<xsl:text>&#x2714;</xsl:text>
																								</fo:inline>
																							</xsl:when>
																							<xsl:when test="string(.)='1'">
																								<fo:inline border="solid 1pt black" font-family="ZapfDingbats" font-size="10pt ">
																									<xsl:text>&#x2714;</xsl:text>
																								</fo:inline>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border="solid 1pt black">
																									<fo:leader leader-length="10pt" leader-pattern="space"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Approved Foreign Trip</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<xsl:for-each select="ApprovedForeignTripFlag">
																						<xsl:choose>
																							<xsl:when test="string(.)='true'">
																								<fo:inline border="solid 1pt black" font-family="ZapfDingbats" font-size="10pt ">
																									<xsl:text>&#x2714;</xsl:text>
																								</fo:inline>
																							</xsl:when>
																							<xsl:when test="string(.)='1'">
																								<fo:inline border="solid 1pt black" font-family="ZapfDingbats" font-size="10pt ">
																									<xsl:text>&#x2714;</xsl:text>
																								</fo:inline>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border="solid 1pt black">
																									<fo:leader leader-length="10pt" leader-pattern="space"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Payment Schedule</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<xsl:for-each select="PaymentScheduleFlag">
																						<xsl:choose>
																							<xsl:when test="string(.)='true'">
																								<fo:inline border="solid 1pt black" font-family="ZapfDingbats" font-size="10pt ">
																									<xsl:text>&#x2714;</xsl:text>
																								</fo:inline>
																							</xsl:when>
																							<xsl:when test="string(.)='1'">
																								<fo:inline border="solid 1pt black" font-family="ZapfDingbats" font-size="10pt ">
																									<xsl:text>&#x2714;</xsl:text>
																								</fo:inline>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border="solid 1pt black">
																									<fo:leader leader-length="10pt" leader-pattern="space"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Transfer Sponsor</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<xsl:for-each select="TransferSponsorFlag">
																						<xsl:choose>
																							<xsl:when test="string(.)='true'">
																								<fo:inline border="solid 1pt black" font-family="ZapfDingbats" font-size="10pt ">
																									<xsl:text>&#x2714;</xsl:text>
																								</fo:inline>
																							</xsl:when>
																							<xsl:when test="string(.)='1'">
																								<fo:inline border="solid 1pt black" font-family="ZapfDingbats" font-size="10pt ">
																									<xsl:text>&#x2714;</xsl:text>
																								</fo:inline>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border="solid 1pt black">
																									<fo:leader leader-length="10pt" leader-pattern="space"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text>Cost Sharing</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<xsl:for-each select="CostSharingFlag">
																						<xsl:choose>
																							<xsl:when test="string(.)='true'">
																								<fo:inline border="solid 1pt black" font-family="ZapfDingbats" font-size="10pt ">
																									<xsl:text>&#x2714;</xsl:text>
																								</fo:inline>
																							</xsl:when>
																							<xsl:when test="string(.)='1'">
																								<fo:inline border="solid 1pt black" font-family="ZapfDingbats" font-size="10pt ">
																									<xsl:text>&#x2714;</xsl:text>
																								</fo:inline>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border="solid 1pt black">
																									<fo:leader leader-length="10pt" leader-pattern="space"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																		<fo:table-row>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
																						<xsl:text> Indirect Cost</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="normal">
																						<xsl:text>:</xsl:text>
																					</fo:inline>
																				</fo:block>
																			</fo:table-cell>
																			<fo:table-cell padding="2" display-align="before">
																				<fo:block text-align="left">
																					<xsl:for-each select="IndirectCostFlag">
																						<xsl:choose>
																							<xsl:when test="string(.)='true'">
																								<fo:inline border="solid 1pt black" font-family="ZapfDingbats" font-size="10pt ">
																									<xsl:text>&#x2714;</xsl:text>
																								</fo:inline>
																							</xsl:when>
																							<xsl:when test="string(.)='1'">
																								<fo:inline border="solid 1pt black" font-family="ZapfDingbats" font-size="10pt ">
																									<xsl:text>&#x2714;</xsl:text>
																								</fo:inline>
																							</xsl:when>
																							<xsl:otherwise>
																								<fo:inline border="solid 1pt black">
																									<fo:leader leader-length="10pt" leader-pattern="space"/>
																								</fo:inline>
																							</xsl:otherwise>
																						</xsl:choose>
																					</xsl:for-each>
																				</fo:block>
																			</fo:table-cell>
																		</fo:table-row>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="string($altova:tablerows)">
																			<xsl:copy-of select="$altova:tablerows"/>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:table-row>
																				<fo:table-cell>
																					<fo:block/>
																				</fo:table-cell>
																			</fo:table-row>
																		</xsl:otherwise>
																	</xsl:choose>
																</fo:table-body>
															</fo:table>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows)">
													<xsl:copy-of select="$altova:tablerows"/>
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
								</fo:block>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block margin="0pt"/>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x200B;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
									<fo:table-column column-width="proportional-column-width(1)"/>
									<fo:table-column column-width="proportional-column-width(1)"/>
									<fo:table-column column-width="proportional-column-width(1)"/>
									<fo:table-column column-width="proportional-column-width(1)"/>
									<fo:table-column column-width="proportional-column-width(1)"/>
									<fo:table-column column-width="proportional-column-width(1)"/>
									<fo:table-column column-width="proportional-column-width(1)"/>
									<xsl:variable name="altova:CurrContextGrid_0BF79890" select="."/>
									<fo:table-header start-indent="0pt">
										<fo:table-row font-size="9pt">
											<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left"/>
											</fo:table-cell>
											<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
														<xsl:text>Obligated Total Direct</xsl:text>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
														<xsl:text>Obligated Total Indirect</xsl:text>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
														<xsl:text>Obligated Distributable</xsl:text>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
														<xsl:text>Anticipated Total Direct</xsl:text>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
														<xsl:text>Anticipated Total Indirect</xsl:text>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
												<fo:block text-align="left">
													<fo:inline font-family="Times New Roman" font-size="9pt" font-style="normal" font-weight="bold">
														<xsl:text>Anticipated Distributable</xsl:text>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</fo:table-header>
									<fo:table-body start-indent="0pt">
										<xsl:variable name="altova:tablerows">
											<fo:table-row font-size="9pt">
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block text-align="left">
														<xsl:for-each select="AwardNumber">
															<xsl:variable name="value-of-template_04334710">
																<xsl:apply-templates/>
															</xsl:variable>
															<xsl:choose>
																<xsl:when test="contains(string($value-of-template_04334710),'&#x200B;')">
																	<fo:block font-family="Times New Roman" font-size="9pt">
																		<xsl:copy-of select="$value-of-template_04334710"/>
																	</fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<fo:inline font-family="Times New Roman" font-size="9pt">
																		<xsl:copy-of select="$value-of-template_04334710"/>
																	</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block text-align="left">
														<xsl:for-each select="ObligatedTotalDirect">
															<xsl:variable name="value-of-template_04334B70">
																<xsl:apply-templates/>
															</xsl:variable>
															<xsl:choose>
																<xsl:when test="contains(string($value-of-template_04334B70),'&#x200B;')">
																	<fo:block font-family="Times New Roman" font-size="9pt">
																		<xsl:copy-of select="$value-of-template_04334B70"/>
																	</fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<fo:inline font-family="Times New Roman" font-size="9pt">
																		<xsl:copy-of select="$value-of-template_04334B70"/>
																	</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block text-align="left">
														<xsl:for-each select="ObligatedTotalIndirect">
															<xsl:variable name="value-of-template_04334C50">
																<xsl:apply-templates/>
															</xsl:variable>
															<xsl:choose>
																<xsl:when test="contains(string($value-of-template_04334C50),'&#x200B;')">
																	<fo:block font-family="Times New Roman" font-size="9pt">
																		<xsl:copy-of select="$value-of-template_04334C50"/>
																	</fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<fo:inline font-family="Times New Roman" font-size="9pt">
																		<xsl:copy-of select="$value-of-template_04334C50"/>
																	</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block text-align="left">
														<xsl:for-each select="ObligatedDistributableAmount">
															<xsl:variable name="value-of-template_043357B0">
																<xsl:apply-templates/>
															</xsl:variable>
															<xsl:choose>
																<xsl:when test="contains(string($value-of-template_043357B0),'&#x200B;')">
																	<fo:block font-family="Times New Roman" font-size="9pt">
																		<xsl:copy-of select="$value-of-template_043357B0"/>
																	</fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<fo:inline font-family="Times New Roman" font-size="9pt">
																		<xsl:copy-of select="$value-of-template_043357B0"/>
																	</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block text-align="left">
														<xsl:for-each select="AnticipatedTotalDirect">
															<xsl:variable name="value-of-template_04335350">
																<xsl:apply-templates/>
															</xsl:variable>
															<xsl:choose>
																<xsl:when test="contains(string($value-of-template_04335350),'&#x200B;')">
																	<fo:block font-family="Times New Roman">
																		<xsl:copy-of select="$value-of-template_04335350"/>
																	</fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<fo:inline font-family="Times New Roman">
																		<xsl:copy-of select="$value-of-template_04335350"/>
																	</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block text-align="left">
														<xsl:for-each select="AnticipatedTotalIndirect">
															<xsl:variable name="value-of-template_04335CF0">
																<xsl:apply-templates/>
															</xsl:variable>
															<xsl:choose>
																<xsl:when test="contains(string($value-of-template_04335CF0),'&#x200B;')">
																	<fo:block font-family="Times New Roman">
																		<xsl:copy-of select="$value-of-template_04335CF0"/>
																	</fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<fo:inline font-family="Times New Roman">
																		<xsl:copy-of select="$value-of-template_04335CF0"/>
																	</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block text-align="left">
														<xsl:for-each select="AnticipatedDistributableAmount">
															<xsl:variable name="value-of-template_04335270">
																<xsl:apply-templates/>
															</xsl:variable>
															<xsl:choose>
																<xsl:when test="contains(string($value-of-template_04335270),'&#x200B;')">
																	<fo:block font-family="Times New Roman">
																		<xsl:copy-of select="$value-of-template_04335270"/>
																	</fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<fo:inline font-family="Times New Roman">
																		<xsl:copy-of select="$value-of-template_04335270"/>
																	</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="string($altova:tablerows)">
												<xsl:copy-of select="$altova:tablerows"/>
											</xsl:when>
											<xsl:otherwise>
												<fo:table-row>
													<fo:table-cell>
														<fo:block/>
													</fo:table-cell>
												</fo:table-row>
											</xsl:otherwise>
										</xsl:choose>
									</fo:table-body>
								</fo:table>
							</xsl:for-each>
							<fo:block/>
						</xsl:for-each>
					</fo:block>
					<fo:block id="SV_RefID_PageTotal"/>
				</fo:flow>
			</fo:page-sequence>
		</fo:root>
	</xsl:template>
	<xsl:template name="DateToMonthName">
		<xsl:param name="sDate"/>
		<xsl:param name="sFormat"/>
		<xsl:choose>
			<xsl:when test="$sFormat = 'long'">
				<xsl:call-template name="DateToMonthNameLong">
					<xsl:with-param name="sDate" select="$sDate"/>
				</xsl:call-template>
			</xsl:when>
			<xsl:otherwise>
				<xsl:call-template name="DateToMonthNameShort">
					<xsl:with-param name="sDate" select="$sDate"/>
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="DateToMonthNameLong">
		<xsl:param name="sDate"/>
		<xsl:variable name="nMonth">
			<xsl:call-template name="DateToMonthNum">
				<xsl:with-param name="sDate" select="$sDate"/>
			</xsl:call-template>
		</xsl:variable>
		<xsl:choose>
			<xsl:when test="$nMonth = 1">January</xsl:when>
			<xsl:when test="$nMonth = 2">February</xsl:when>
			<xsl:when test="$nMonth = 3">March</xsl:when>
			<xsl:when test="$nMonth = 4">April</xsl:when>
			<xsl:when test="$nMonth = 5">May</xsl:when>
			<xsl:when test="$nMonth = 6">June</xsl:when>
			<xsl:when test="$nMonth = 7">July</xsl:when>
			<xsl:when test="$nMonth = 8">August</xsl:when>
			<xsl:when test="$nMonth = 9">September</xsl:when>
			<xsl:when test="$nMonth = 10">October</xsl:when>
			<xsl:when test="$nMonth = 11">November</xsl:when>
			<xsl:otherwise>December</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="DateToMonthNum">
		<xsl:param name="sDate"/>
		<xsl:choose>
			<xsl:when test="starts-with($sDate, '--')">
				<xsl:value-of select="number(substring($sDate, 3, 2))"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="number(substring($sDate, 6, 2))"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="DateToMonthNameShort">
		<xsl:param name="sDate"/>
		<xsl:variable name="nMonth">
			<xsl:call-template name="DateToMonthNum">
				<xsl:with-param name="sDate" select="$sDate"/>
			</xsl:call-template>
		</xsl:variable>
		<xsl:choose>
			<xsl:when test="$nMonth = 1">Jan</xsl:when>
			<xsl:when test="$nMonth = 2">Feb</xsl:when>
			<xsl:when test="$nMonth = 3">Mar</xsl:when>
			<xsl:when test="$nMonth = 4">Apr</xsl:when>
			<xsl:when test="$nMonth = 5">May</xsl:when>
			<xsl:when test="$nMonth = 6">Jun</xsl:when>
			<xsl:when test="$nMonth = 7">Jul</xsl:when>
			<xsl:when test="$nMonth = 8">Aug</xsl:when>
			<xsl:when test="$nMonth = 9">Sep</xsl:when>
			<xsl:when test="$nMonth = 10">Oct</xsl:when>
			<xsl:when test="$nMonth = 11">Nov</xsl:when>
			<xsl:otherwise>Dec</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="double-backslash">
		<xsl:param name="text"/>
		<xsl:param name="text-length"/>
		<xsl:variable name="text-after-bs" select="substring-after($text, '\')"/>
		<xsl:variable name="text-after-bs-length" select="string-length($text-after-bs)"/>
		<xsl:choose>
			<xsl:when test="$text-after-bs-length = 0">
				<xsl:choose>
					<xsl:when test="substring($text, $text-length) = '\'">
						<xsl:value-of select="concat(substring($text,1,$text-length - 1), '\\')"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$text"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(substring($text,1,$text-length - $text-after-bs-length - 1), '\\')"/>
				<xsl:call-template name="double-backslash">
					<xsl:with-param name="text" select="$text-after-bs"/>
					<xsl:with-param name="text-length" select="$text-after-bs-length"/>
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="altova:MakeValueAbsoluteIfPixels">
		<xsl:param name="sValue"/>
		<xsl:variable name="sBeforePx" select="substring-before($sValue, 'px')"/>
		<xsl:choose>
			<xsl:when test="$sBeforePx">
				<xsl:variable name="nLengthOfInteger">
					<xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">
						<xsl:with-param name="sText" select="$sBeforePx"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:variable name="nPosOfInteger" select="string-length($sBeforePx) - $nLengthOfInteger + 1"/>
				<xsl:variable name="nValuePx" select="substring($sBeforePx, $nPosOfInteger)"/>
				<xsl:variable name="nValueIn" select="number($nValuePx) div number($altova:nPxPerIn)"/>
				<xsl:variable name="nLengthBeforeInteger" select="string-length($sBeforePx) - $nLengthOfInteger"/>
				<xsl:variable name="sRest">
					<xsl:call-template name="altova:MakeValueAbsoluteIfPixels">
						<xsl:with-param name="sValue" select="substring-after($sValue, 'px')"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:value-of select="concat(substring($sBeforePx, 1, $nLengthBeforeInteger), string($nValueIn), 'in', $sRest)"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="$sValue"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="altova:GetCharCountOfIntegerAtEndOfString">
		<xsl:param name="sText"/>
		<xsl:variable name="sLen" select="string-length($sText)"/>
		<xsl:variable name="cLast" select="substring($sText, $sLen)"/>
		<xsl:choose>
			<xsl:when test="number($cLast) &gt;= 0 and number($cLast) &lt;= 9">
				<xsl:variable name="nResultOfRest">
					<xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">
						<xsl:with-param name="sText" select="substring($sText, 1, $sLen - 1)"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:value-of select="$nResultOfRest + 1"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:text>0</xsl:text>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
</xsl:stylesheet>
