<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2010 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:clitype="clitype" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:java="java" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:altovaext="http://www.altova.com/xslt-extensions" xmlns:altova="http://www.altova.com" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:svg="http://www.w3.org/2000/svg" exclude-result-prefixes="#all">
	<xsl:output version="1.0" method="xml" encoding="UTF-8" indent="no"/>
	<xsl:param name="SV_OutputFormat" select="'PDF'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:import-schema schema-location="disclosure1.1.xsd"/>
	<xsl:variable name="fo:layout-master-set">
		<fo:layout-master-set>
			<fo:simple-page-master master-name="page-master-136078208-even" margin-left="0.60in" margin-right="0.60in" page-height="11in" page-width="8.50in">
				<fo:region-body margin-top="0.79in" margin-bottom="0.79in" column-count="1" column-gap="0.50in"/>
				<fo:region-before region-name="even-page-header" overflow="hidden" extent="0.79in"/>
				<fo:region-after region-name="even-page-footer" overflow="hidden" extent="0.79in"/>
			</fo:simple-page-master>
			<fo:simple-page-master master-name="page-master-136078208-odd" margin-left="0.60in" margin-right="0.60in" page-height="11in" page-width="8.50in">
				<fo:region-body margin-top="0.79in" margin-bottom="0.79in" column-count="1" column-gap="0.50in"/>
				<fo:region-before region-name="odd-page-header" overflow="hidden" extent="0.79in"/>
			</fo:simple-page-master>
			<fo:page-sequence-master master-name="page-master-136078208">
				<fo:repeatable-page-master-alternatives>
					<fo:conditional-page-master-reference master-reference="page-master-136078208-odd" odd-or-even="odd"/>
					<fo:conditional-page-master-reference master-reference="page-master-136078208-even" odd-or-even="even"/>
				</fo:repeatable-page-master-alternatives>
			</fo:page-sequence-master>
		</fo:layout-master-set>
	</xsl:variable>
	<xsl:variable name="altova:PxPerIn" select="96"/>
	<xsl:variable name="altova:design-xslt-tree-view">
		<fo:root>
			<xsl:copy-of select="$fo:layout-master-set"/>
			<fo:page-sequence master-reference="page-master-136078208" initial-page-number="auto" format="1">
				<fo:static-content flow-name="odd-page-header">
					<fo:block-container margin-top="0.30in">
						<fo:block>
							<xsl:variable name="altova:table">
								<fo:table width="100%" table-layout="fixed" border-spacing="2pt">
									<fo:table-column column-width="90%"/>
									<fo:table-column column-width="10%"/>
									<xsl:variable name="altova:CurrContextGrid_088091A0" select="."/>
									<xsl:variable name="altova:ColumnData"/>
									<fo:table-body start-indent="0pt">
										<xsl:variable name="altova:tablerows">
											<fo:table-row>
												<fo:table-cell font-size="10pt" padding="0" text-align="center" display-align="center">
													<fo:block>
														<fo:inline font-weight="bold">
															<xsl:text>DISCLOSURE&#160; REPORT</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell font-size="10pt" padding="0" text-align="center" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Page: </xsl:text>
														</fo:inline>
														<fo:page-number/>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell number-columns-spanned="2" padding="0" text-align="center" display-align="center">
													<fo:block>
														<fo:block text-align="center">
															<fo:leader leader-pattern="rule" rule-thickness="1" leader-length="100%" color="black"/>
														</fo:block>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="string($altova:tablerows) or not(empty($altova:tablerows//fo:external-graphic))">
												<xsl:copy-of select="$altova:tablerows"/>
											</xsl:when>
											<xsl:otherwise>
												<fo:table-row>
													<fo:table-cell>
														<fo:block/>
													</fo:table-cell>
												</fo:table-row>
											</xsl:otherwise>
										</xsl:choose>
									</fo:table-body>
								</fo:table>
							</xsl:variable>
							<xsl:choose>
								<xsl:when test="not($altova:table//fo:table-row)"/>
								<xsl:otherwise>
									<xsl:copy-of select="$altova:table"/>
								</xsl:otherwise>
							</xsl:choose>
						</fo:block>
					</fo:block-container>
				</fo:static-content>
				<fo:static-content flow-name="even-page-header">
					<fo:block-container margin-top="0.30in">
						<fo:block>
							<xsl:variable name="altova:table">
								<fo:table width="100%" table-layout="fixed" border-spacing="2pt">
									<fo:table-column column-width="90%"/>
									<fo:table-column column-width="10%"/>
									<xsl:variable name="altova:CurrContextGrid_088091A0" select="."/>
									<xsl:variable name="altova:ColumnData"/>
									<fo:table-body start-indent="0pt">
										<xsl:variable name="altova:tablerows">
											<fo:table-row>
												<fo:table-cell font-size="10pt" padding="0" text-align="center" display-align="center">
													<fo:block>
														<fo:inline font-weight="bold">
															<xsl:text>DISCLOSURE&#160; REPORT</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell font-size="10pt" padding="0" text-align="center" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Page: </xsl:text>
														</fo:inline>
														<fo:page-number/>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell number-columns-spanned="2" padding="0" text-align="center" display-align="center">
													<fo:block>
														<fo:block text-align="center">
															<fo:leader leader-pattern="rule" rule-thickness="1" leader-length="100%" color="black"/>
														</fo:block>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="string($altova:tablerows) or not(empty($altova:tablerows//fo:external-graphic))">
												<xsl:copy-of select="$altova:tablerows"/>
											</xsl:when>
											<xsl:otherwise>
												<fo:table-row>
													<fo:table-cell>
														<fo:block/>
													</fo:table-cell>
												</fo:table-row>
											</xsl:otherwise>
										</xsl:choose>
									</fo:table-body>
								</fo:table>
							</xsl:variable>
							<xsl:choose>
								<xsl:when test="not($altova:table//fo:table-row)"/>
								<xsl:otherwise>
									<xsl:copy-of select="$altova:table"/>
								</xsl:otherwise>
							</xsl:choose>
						</fo:block>
					</fo:block-container>
				</fo:static-content>
				<fo:flow flow-name="xsl-region-body">
					<fo:block>
						<xsl:for-each select="$XML">
							<altova:newline-handler/>
							<altova:newline-handler/>
							<fo:inline font-weight="bold">
								<xsl:text>Disclosure</xsl:text>
							</fo:inline>
							<altova:newline-handler/>
							<xsl:variable name="altova:table">
								<xsl:if test="exists( OSP_COI_DISCLOSURE )">
									<fo:table table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<xsl:variable name="altova:CurrContextGrid_0883B928" select="."/>
										<xsl:variable name="altova:ColumnData"/>
										<fo:table-header start-indent="0pt">
											<fo:table-row>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Disl No</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Disp Status</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Expiration Date</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Time</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Owner</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Status</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-header>
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<xsl:for-each select="OSP_COI_DISCLOSURE">
													<fo:table-row>
														<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="COI_DISCLOSURE_NUMBER">
																	<altova:inline-container-substitute>
																		<xsl:apply-templates/>
																	</altova:inline-container-substitute>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="OSP_COI_DISPOSITION_STATUS">
																	<altova:inline-container-substitute>
																		<xsl:apply-templates/>
																	</altova:inline-container-substitute>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="EXPIRATION_DATE">
																	<altova:inline-container-substitute>
																		<xsl:apply-templates/>
																	</altova:inline-container-substitute>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="UPDATE_TIMESTAMP">
																	<altova:inline-container-substitute>
																		<xsl:apply-templates/>
																	</altova:inline-container-substitute>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="UPDATE_USER">
																	<altova:inline-container-substitute>
																		<xsl:apply-templates/>
																	</altova:inline-container-substitute>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="OSP_COI_STATUS">
																	<altova:inline-container-substitute>
																		<xsl:apply-templates/>
																	</altova:inline-container-substitute>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</xsl:for-each>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows) or not(empty($altova:tablerows//fo:external-graphic))">
													<xsl:copy-of select="$altova:tablerows"/>
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
								</xsl:if>
							</xsl:variable>
							<xsl:choose>
								<xsl:when test="not($altova:table//fo:table-row)"/>
								<xsl:otherwise>
									<xsl:copy-of select="$altova:table"/>
								</xsl:otherwise>
							</xsl:choose>
							<altova:newline-handler/>
							<altova:newline-handler/>
							<fo:inline font-weight="bold">
								<xsl:text>Screening Question</xsl:text>
							</fo:inline>
							<altova:newline-handler/>
							<altova:newline-handler/>
							<xsl:variable name="altova:table">
								<xsl:if test="exists( OSP_COI_DISCLOSURE )">
									<fo:table table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<xsl:variable name="altova:CurrContextGrid_087B46B0" select="."/>
										<xsl:variable name="altova:ColumnData"/>
										<fo:table-header start-indent="0pt">
											<fo:table-row>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Question No</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Question</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Answer</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-header>
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<xsl:for-each select="OSP_COI_DISCLOSURE">
													<xsl:for-each select="OSP_QUESTION">
														<fo:table-row>
															<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="QUESTION_ID">
																		<altova:inline-container-substitute>
																			<xsl:apply-templates/>
																		</altova:inline-container-substitute>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="QUESTION">
																		<altova:inline-container-substitute>
																			<xsl:apply-templates/>
																		</altova:inline-container-substitute>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="ANSWER">
																		<altova:inline-container-substitute>
																			<xsl:apply-templates/>
																		</altova:inline-container-substitute>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows) or not(empty($altova:tablerows//fo:external-graphic))">
													<xsl:copy-of select="$altova:tablerows"/>
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
								</xsl:if>
							</xsl:variable>
							<xsl:choose>
								<xsl:when test="not($altova:table//fo:table-row)"/>
								<xsl:otherwise>
									<xsl:copy-of select="$altova:table"/>
								</xsl:otherwise>
							</xsl:choose>
							<altova:newline-handler/>
							<fo:inline font-weight="bold">
								<xsl:text>Financial Entity</xsl:text>
							</fo:inline>
							<altova:newline-handler/>
							<altova:newline-handler/>
							<xsl:variable name="altova:table">
								<xsl:if test="exists( OSP_COI_DISCLOSURE )">
									<fo:table table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
										<fo:table-column column-width="proportional-column-width(1)"/>
										<xsl:variable name="altova:CurrContextGrid_09ADED00" select="."/>
										<xsl:variable name="altova:ColumnData"/>
										<fo:table-header start-indent="0pt">
											<fo:table-row>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Project</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-header>
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<xsl:for-each select="OSP_COI_DISCLOSURE">
													<xsl:for-each select="OSP_COI_DISCL_PROJECTS">
														<fo:table-row>
															<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="COI_PROJECT_TITLE">
																		<altova:inline-container-substitute>
																			<xsl:apply-templates/>
																		</altova:inline-container-substitute>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows) or not(empty($altova:tablerows//fo:external-graphic))">
													<xsl:copy-of select="$altova:tablerows"/>
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
								</xsl:if>
							</xsl:variable>
							<xsl:choose>
								<xsl:when test="not($altova:table//fo:table-row)"/>
								<xsl:otherwise>
									<xsl:copy-of select="$altova:table"/>
								</xsl:otherwise>
							</xsl:choose>
							<xsl:variable name="altova:table">
								<xsl:if test="exists( OSP_COI_DISCLOSURE )">
									<fo:table table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<xsl:variable name="altova:CurrContextGrid_09C3F140" select="."/>
										<xsl:variable name="altova:ColumnData"/>
										<fo:table-header start-indent="0pt">
											<fo:table-row>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Entity Name</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Entity Status</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-header>
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<xsl:for-each select="OSP_COI_DISCLOSURE">
													<xsl:for-each select="OSP_COI_DISC_DETAILS">
														<fo:table-row>
															<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="ENTITY_NUMBER">
																		<altova:inline-container-substitute>
																			<xsl:apply-templates/>
																		</altova:inline-container-substitute>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="OSP_COI_ENTITY_STATUS_CODE">
																		<altova:inline-container-substitute>
																			<xsl:apply-templates/>
																		</altova:inline-container-substitute>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows) or not(empty($altova:tablerows//fo:external-graphic))">
													<xsl:copy-of select="$altova:tablerows"/>
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
								</xsl:if>
							</xsl:variable>
							<xsl:choose>
								<xsl:when test="not($altova:table//fo:table-row)"/>
								<xsl:otherwise>
									<xsl:copy-of select="$altova:table"/>
								</xsl:otherwise>
							</xsl:choose>
							<altova:newline-handler/>
							<altova:newline-handler/>
							<fo:inline font-weight="bold">
								<xsl:text>Notes</xsl:text>
							</fo:inline>
							<altova:newline-handler/>
							<altova:newline-handler/>
							<xsl:variable name="altova:table">
								<xsl:if test="exists( OSP_COI_DISCLOSURE )">
									<fo:table table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<xsl:variable name="altova:CurrContextGrid_087F82B0" select="."/>
										<xsl:variable name="altova:ColumnData"/>
										<fo:table-header start-indent="0pt">
											<fo:table-row>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Title</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Comments</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>User</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Time</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-header>
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<xsl:for-each select="OSP_COI_DISCLOSURE">
													<xsl:for-each select="OSP_COI_NOTEPAD">
														<fo:table-row>
															<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="TITLE">
																		<altova:inline-container-substitute>
																			<xsl:apply-templates/>
																		</altova:inline-container-substitute>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="COMMENTS">
																		<altova:inline-container-substitute>
																			<xsl:apply-templates/>
																		</altova:inline-container-substitute>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="UPDATE_USER">
																		<altova:inline-container-substitute>
																			<xsl:apply-templates/>
																		</altova:inline-container-substitute>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="UPDATE_TIMESTAMP">
																		<altova:inline-container-substitute>
																			<xsl:apply-templates/>
																		</altova:inline-container-substitute>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows) or not(empty($altova:tablerows//fo:external-graphic))">
													<xsl:copy-of select="$altova:tablerows"/>
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
								</xsl:if>
							</xsl:variable>
							<xsl:choose>
								<xsl:when test="not($altova:table//fo:table-row)"/>
								<xsl:otherwise>
									<xsl:copy-of select="$altova:table"/>
								</xsl:otherwise>
							</xsl:choose>
							<altova:newline-handler/>
							<fo:inline font-weight="bold">
								<xsl:text>Attachments</xsl:text>
							</fo:inline>
							<altova:newline-handler/>
							<altova:newline-handler/>
							<xsl:variable name="altova:table">
								<xsl:if test="exists( OSP_COI_DISCLOSURE )">
									<fo:table table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<xsl:variable name="altova:CurrContextGrid_0883C8F8" select="."/>
										<xsl:variable name="altova:ColumnData"/>
										<fo:table-header start-indent="0pt">
											<fo:table-row>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Attatch Type</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Description</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>User</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Time</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-header>
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<xsl:for-each select="OSP_COI_DISCLOSURE">
													<xsl:for-each select="OSP_COI_DOCUMENTS">
														<fo:table-row>
															<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="OSP_COI_DOCUMENT_TYPE">
																		<altova:inline-container-substitute>
																			<xsl:apply-templates/>
																		</altova:inline-container-substitute>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="DESCRIPTION">
																		<altova:inline-container-substitute>
																			<xsl:apply-templates/>
																		</altova:inline-container-substitute>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="UPDATE_USER">
																		<altova:inline-container-substitute>
																			<xsl:apply-templates/>
																		</altova:inline-container-substitute>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="UPDATE_TIMESTAMP">
																		<altova:inline-container-substitute>
																			<xsl:apply-templates/>
																		</altova:inline-container-substitute>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows) or not(empty($altova:tablerows//fo:external-graphic))">
													<xsl:copy-of select="$altova:tablerows"/>
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
								</xsl:if>
							</xsl:variable>
							<xsl:choose>
								<xsl:when test="not($altova:table//fo:table-row)"/>
								<xsl:otherwise>
									<xsl:copy-of select="$altova:table"/>
								</xsl:otherwise>
							</xsl:choose>
							<altova:newline-handler/>
							<altova:newline-handler/>
							<fo:inline font-weight="bold">
								<xsl:text>Certification</xsl:text>
							</fo:inline>
							<altova:newline-handler/>
							<altova:newline-handler/>
							<xsl:variable name="altova:table">
								<xsl:if test="exists( OSP_COI_DISCLOSURE )">
									<fo:table table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<xsl:variable name="altova:CurrContextGrid_088400F8" select="."/>
										<xsl:variable name="altova:ColumnData"/>
										<fo:table-header start-indent="0pt">
											<fo:table-row>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Text</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>certified by</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Time</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-header>
										<fo:table-body start-indent="0pt">
											<xsl:variable name="altova:tablerows">
												<xsl:for-each select="OSP_COI_DISCLOSURE">
													<fo:table-row>
														<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="CERTIFICATION_TEXT">
																	<altova:inline-container-substitute>
																		<xsl:apply-templates/>
																	</altova:inline-container-substitute>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="CERTIFIED_BY">
																	<altova:inline-container-substitute>
																		<xsl:apply-templates/>
																	</altova:inline-container-substitute>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="CERTIFICATION_TIMESTAMP">
																	<altova:inline-container-substitute>
																		<xsl:apply-templates/>
																	</altova:inline-container-substitute>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</xsl:for-each>
											</xsl:variable>
											<xsl:choose>
												<xsl:when test="string($altova:tablerows) or not(empty($altova:tablerows//fo:external-graphic))">
													<xsl:copy-of select="$altova:tablerows"/>
												</xsl:when>
												<xsl:otherwise>
													<fo:table-row>
														<fo:table-cell>
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</xsl:otherwise>
											</xsl:choose>
										</fo:table-body>
									</fo:table>
								</xsl:if>
							</xsl:variable>
							<xsl:choose>
								<xsl:when test="not($altova:table//fo:table-row)"/>
								<xsl:otherwise>
									<xsl:copy-of select="$altova:table"/>
								</xsl:otherwise>
							</xsl:choose>
							<altova:newline-handler/>
							<altova:newline-handler/>
							<altova:newline-handler/>
						</xsl:for-each>
					</fo:block>
					<fo:block id="SV_RefID_PageTotal"/>
				</fo:flow>
			</fo:page-sequence>
		</fo:root>
	</xsl:variable>
	<xsl:template name="double-backslash">
		<xsl:param name="text"/>
		<xsl:param name="text-length"/>
		<xsl:variable name="text-after-bs" select="substring-after($text, '\')"/>
		<xsl:variable name="text-after-bs-length" select="string-length($text-after-bs)"/>
		<xsl:choose>
			<xsl:when test="$text-after-bs-length = 0">
				<xsl:choose>
					<xsl:when test="substring($text, $text-length) = '\'">
						<xsl:value-of select="concat(substring($text,1,$text-length - 1), '\\')"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$text"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(substring($text,1,$text-length - $text-after-bs-length - 1), '\\')"/>
				<xsl:call-template name="double-backslash">
					<xsl:with-param name="text" select="$text-after-bs"/>
					<xsl:with-param name="text-length" select="$text-after-bs-length"/>
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="altova:MakeValueAbsoluteIfPixels">
		<xsl:param name="sValue"/>
		<xsl:variable name="sBeforePx" select="substring-before($sValue, 'px')"/>
		<xsl:choose>
			<xsl:when test="$sBeforePx">
				<xsl:variable name="nLengthOfInteger">
					<xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">
						<xsl:with-param name="sText" select="$sBeforePx"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:variable name="nPosOfInteger" select="string-length($sBeforePx) - $nLengthOfInteger + 1"/>
				<xsl:variable name="nValuePx" select="substring($sBeforePx, $nPosOfInteger)"/>
				<xsl:variable name="nValueIn" select="number($nValuePx) div number($altova:PxPerIn)"/>
				<xsl:variable name="nLengthBeforeInteger" select="string-length($sBeforePx) - $nLengthOfInteger"/>
				<xsl:variable name="sRest">
					<xsl:call-template name="altova:MakeValueAbsoluteIfPixels">
						<xsl:with-param name="sValue" select="substring-after($sValue, 'px')"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:value-of select="concat(substring($sBeforePx, 1, $nLengthBeforeInteger), string($nValueIn), 'in', $sRest)"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="$sValue"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template name="altova:GetCharCountOfIntegerAtEndOfString">
		<xsl:param name="sText"/>
		<xsl:variable name="sLen" select="string-length($sText)"/>
		<xsl:variable name="cLast" select="substring($sText, $sLen)"/>
		<xsl:choose>
			<xsl:when test="number($cLast) &gt;= 0 and number($cLast) &lt;= 9">
				<xsl:variable name="nResultOfRest">
					<xsl:call-template name="altova:GetCharCountOfIntegerAtEndOfString">
						<xsl:with-param name="sText" select="substring($sText, 1, $sLen - 1)"/>
					</xsl:call-template>
				</xsl:variable>
				<xsl:value-of select="$nResultOfRest + 1"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:text>0</xsl:text>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="/">
		<xsl:apply-templates select="$altova:design-xslt-tree-view" mode="second-step"/>
	</xsl:template>
	<xsl:template match="altova:inline-container-substitute" mode="second-step">
		<xsl:choose>
			<xsl:when test="empty(for $i in child::node() return index-of(('fo:block','fo:block-container','fo:list-block','fo:table'),name($i)))">
				<fo:inline>
					<xsl:copy-of select="@* except @altova-DisableOutputEscaping"/>
					<xsl:apply-templates mode="second-step"/>
				</fo:inline>
			</xsl:when>
			<xsl:otherwise>
				<fo:block>
					<xsl:copy-of select="@* except @altova-DisableOutputEscaping"/>
					<xsl:apply-templates mode="second-step"/>
				</fo:block>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="altova:basic-link-container" mode="second-step">
		<fo:block text-align-last="justify">
			<xsl:apply-templates mode="second-step"/>
		</fo:block>
	</xsl:template>
	<xsl:template match="altova:newline-handler" mode="second-step">
		<xsl:variable name="name-following-sibling" select="name(following-sibling::*[1])"/>
		<xsl:variable name="name-preceding-sibling" select="name(preceding-sibling::*[1])"/>
		<xsl:if test="($name-following-sibling and $name-following-sibling != 'fo:table' and $name-following-sibling != 'altova:newline-handler' and $name-preceding-sibling != 'altova:basic-link-container') or $name-preceding-sibling = 'altova:newline-handler'">
			<fo:block>
				<xsl:if test="($name-preceding-sibling != 'altova:inline-container-substitute' and $name-preceding-sibling != 'fo:inline' and $name-preceding-sibling != 'fo:basic-link') or ($name-following-sibling != 'altova:inline-container-substitute' and $name-following-sibling != 'fo:inline' and $name-following-sibling != 'fo:basic-link')">
					<fo:leader leader-pattern="space"/>
				</xsl:if>
			</fo:block>
		</xsl:if>
	</xsl:template>
	<xsl:template match="*|@*" mode="second-step">
		<xsl:copy>
			<xsl:apply-templates select="*|@* except @altova-DisableOutputEscaping|text()" mode="second-step"/>
		</xsl:copy>
	</xsl:template>
	<xsl:template match="text()" mode="second-step">
		<xsl:choose>
			<xsl:when test="../@altova-DisableOutputEscaping">
				<xsl:value-of select="." disable-output-escaping="yes"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:copy/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
</xsl:stylesheet>
