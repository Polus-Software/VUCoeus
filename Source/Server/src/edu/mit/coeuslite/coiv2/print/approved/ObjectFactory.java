//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.07.10 at 07:45:37 IST 
//


package edu.mit.coeuslite.coiv2.print.approved;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the edu.mit.coeuslite.coiv2.print.approved package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
public class ObjectFactory
    extends edu.mit.coeuslite.coiv2.print.approved.impl.runtime.DefaultJAXBContextImpl
{

    private static java.util.HashMap defaultImplementations = new java.util.HashMap(20, 0.75F);
    private static java.util.HashMap rootTagMap = new java.util.HashMap();
    public final static edu.mit.coeuslite.coiv2.print.approved.impl.runtime.GrammarInfo grammarInfo = new edu.mit.coeuslite.coiv2.print.approved.impl.runtime.GrammarInfoImpl(rootTagMap, defaultImplementations, (edu.mit.coeuslite.coiv2.print.approved.ObjectFactory.class));
    public final static java.lang.Class version = (edu.mit.coeuslite.coiv2.print.approved.impl.JAXBVersion.class);

    static {
        defaultImplementations.put((edu.mit.coeuslite.coiv2.print.approved.CoiDisclosureDetails.class), "edu.mit.coeuslite.coiv2.print.approved.impl.CoiDisclosureDetailsImpl");
        defaultImplementations.put((edu.mit.coeuslite.coiv2.print.approved.DisclosureDocumentsType.class), "edu.mit.coeuslite.coiv2.print.approved.impl.DisclosureDocumentsTypeImpl");
        defaultImplementations.put((edu.mit.coeuslite.coiv2.print.approved.ApprovedDisclosure.class), "edu.mit.coeuslite.coiv2.print.approved.impl.ApprovedDisclosureImpl");
        defaultImplementations.put((edu.mit.coeuslite.coiv2.print.approved.DisclosureNotes.class), "edu.mit.coeuslite.coiv2.print.approved.impl.DisclosureNotesImpl");
        defaultImplementations.put((edu.mit.coeuslite.coiv2.print.approved.CertificationQuestion.class), "edu.mit.coeuslite.coiv2.print.approved.impl.CertificationQuestionImpl");
        defaultImplementations.put((edu.mit.coeuslite.coiv2.print.approved.PersonType.class), "edu.mit.coeuslite.coiv2.print.approved.impl.PersonTypeImpl");
        defaultImplementations.put((edu.mit.coeuslite.coiv2.print.approved.Person.class), "edu.mit.coeuslite.coiv2.print.approved.impl.PersonImpl");
        defaultImplementations.put((edu.mit.coeuslite.coiv2.print.approved.DisclosureProjects.class), "edu.mit.coeuslite.coiv2.print.approved.impl.DisclosureProjectsImpl");
        defaultImplementations.put((edu.mit.coeuslite.coiv2.print.approved.DisclosureProjectsType.class), "edu.mit.coeuslite.coiv2.print.approved.impl.DisclosureProjectsTypeImpl");
        defaultImplementations.put((edu.mit.coeuslite.coiv2.print.approved.ApprovedDisclosureType.class), "edu.mit.coeuslite.coiv2.print.approved.impl.ApprovedDisclosureTypeImpl");
        defaultImplementations.put((edu.mit.coeuslite.coiv2.print.approved.CertificationQuestionType.class), "edu.mit.coeuslite.coiv2.print.approved.impl.CertificationQuestionTypeImpl");
        defaultImplementations.put((edu.mit.coeuslite.coiv2.print.approved.CoiDisclosureDetailsType.class), "edu.mit.coeuslite.coiv2.print.approved.impl.CoiDisclosureDetailsTypeImpl");
        defaultImplementations.put((edu.mit.coeuslite.coiv2.print.approved.DisclosureNotesType.class), "edu.mit.coeuslite.coiv2.print.approved.impl.DisclosureNotesTypeImpl");
        defaultImplementations.put((edu.mit.coeuslite.coiv2.print.approved.DisclosureDocuments.class), "edu.mit.coeuslite.coiv2.print.approved.impl.DisclosureDocumentsImpl");
        rootTagMap.put(new javax.xml.namespace.QName("", "coiDisclosureDetails"), (edu.mit.coeuslite.coiv2.print.approved.CoiDisclosureDetails.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "person"), (edu.mit.coeuslite.coiv2.print.approved.Person.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "disclosureNotes"), (edu.mit.coeuslite.coiv2.print.approved.DisclosureNotes.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "certificationQuestion"), (edu.mit.coeuslite.coiv2.print.approved.CertificationQuestion.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "disclosureProjects"), (edu.mit.coeuslite.coiv2.print.approved.DisclosureProjects.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "disclosureDocuments"), (edu.mit.coeuslite.coiv2.print.approved.DisclosureDocuments.class));
        rootTagMap.put(new javax.xml.namespace.QName("", "ApprovedDisclosure"), (edu.mit.coeuslite.coiv2.print.approved.ApprovedDisclosure.class));
    }

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: edu.mit.coeuslite.coiv2.print.approved
     * 
     */
    public ObjectFactory() {
        super(grammarInfo);
    }

    /**
     * Create an instance of the specified Java content interface.
     * 
     * @param javaContentInterface
     *     the Class object of the javacontent interface to instantiate
     * @return
     *     a new instance
     * @throws JAXBException
     *     if an error occurs
     */
    public java.lang.Object newInstance(java.lang.Class javaContentInterface)
        throws javax.xml.bind.JAXBException
    {
        return super.newInstance(javaContentInterface);
    }

    /**
     * Get the specified property. This method can only be
     * used to get provider specific properties.
     * Attempting to get an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name
     *     the name of the property to retrieve
     * @return
     *     the value of the requested property
     * @throws PropertyException
     *     when there is an error retrieving the given property or value
     */
    public java.lang.Object getProperty(java.lang.String name)
        throws javax.xml.bind.PropertyException
    {
        return super.getProperty(name);
    }

    /**
     * Set the specified property. This method can only be
     * used to set provider specific properties.
     * Attempting to set an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name
     *     the name of the property to retrieve
     * @param value
     *     the value of the property to be set
     * @throws PropertyException
     *     when there is an error processing the given property or value
     */
    public void setProperty(java.lang.String name, java.lang.Object value)
        throws javax.xml.bind.PropertyException
    {
        super.setProperty(name, value);
    }

    /**
     * Create an instance of CoiDisclosureDetails
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeuslite.coiv2.print.approved.CoiDisclosureDetails createCoiDisclosureDetails()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeuslite.coiv2.print.approved.impl.CoiDisclosureDetailsImpl();
    }

    /**
     * Create an instance of DisclosureDocumentsType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeuslite.coiv2.print.approved.DisclosureDocumentsType createDisclosureDocumentsType()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeuslite.coiv2.print.approved.impl.DisclosureDocumentsTypeImpl();
    }

    /**
     * Create an instance of ApprovedDisclosure
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeuslite.coiv2.print.approved.ApprovedDisclosure createApprovedDisclosure()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeuslite.coiv2.print.approved.impl.ApprovedDisclosureImpl();
    }

    /**
     * Create an instance of DisclosureNotes
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeuslite.coiv2.print.approved.DisclosureNotes createDisclosureNotes()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeuslite.coiv2.print.approved.impl.DisclosureNotesImpl();
    }

    /**
     * Create an instance of CertificationQuestion
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeuslite.coiv2.print.approved.CertificationQuestion createCertificationQuestion()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeuslite.coiv2.print.approved.impl.CertificationQuestionImpl();
    }

    /**
     * Create an instance of PersonType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeuslite.coiv2.print.approved.PersonType createPersonType()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeuslite.coiv2.print.approved.impl.PersonTypeImpl();
    }

    /**
     * Create an instance of Person
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeuslite.coiv2.print.approved.Person createPerson()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeuslite.coiv2.print.approved.impl.PersonImpl();
    }

    /**
     * Create an instance of DisclosureProjects
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeuslite.coiv2.print.approved.DisclosureProjects createDisclosureProjects()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeuslite.coiv2.print.approved.impl.DisclosureProjectsImpl();
    }

    /**
     * Create an instance of DisclosureProjectsType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeuslite.coiv2.print.approved.DisclosureProjectsType createDisclosureProjectsType()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeuslite.coiv2.print.approved.impl.DisclosureProjectsTypeImpl();
    }

    /**
     * Create an instance of ApprovedDisclosureType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeuslite.coiv2.print.approved.ApprovedDisclosureType createApprovedDisclosureType()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeuslite.coiv2.print.approved.impl.ApprovedDisclosureTypeImpl();
    }

    /**
     * Create an instance of CertificationQuestionType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeuslite.coiv2.print.approved.CertificationQuestionType createCertificationQuestionType()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeuslite.coiv2.print.approved.impl.CertificationQuestionTypeImpl();
    }

    /**
     * Create an instance of CoiDisclosureDetailsType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeuslite.coiv2.print.approved.CoiDisclosureDetailsType createCoiDisclosureDetailsType()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeuslite.coiv2.print.approved.impl.CoiDisclosureDetailsTypeImpl();
    }

    /**
     * Create an instance of DisclosureNotesType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeuslite.coiv2.print.approved.DisclosureNotesType createDisclosureNotesType()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeuslite.coiv2.print.approved.impl.DisclosureNotesTypeImpl();
    }

    /**
     * Create an instance of DisclosureDocuments
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeuslite.coiv2.print.approved.DisclosureDocuments createDisclosureDocuments()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeuslite.coiv2.print.approved.impl.DisclosureDocumentsImpl();
    }

}
