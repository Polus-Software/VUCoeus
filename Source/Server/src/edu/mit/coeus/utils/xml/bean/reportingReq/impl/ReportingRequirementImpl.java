//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.11.17 at 10:40:49 EST 
//


package edu.mit.coeus.utils.xml.bean.reportingReq.impl;

public class ReportingRequirementImpl implements edu.mit.coeus.utils.xml.bean.reportingReq.ReportingRequirement, com.sun.xml.bind.JAXBObject, edu.mit.coeus.utils.xml.bean.impl.runtime.UnmarshallableObject, edu.mit.coeus.utils.xml.bean.impl.runtime.XMLSerializable, edu.mit.coeus.utils.xml.bean.impl.runtime.ValidatableObject
{

    protected java.lang.String _Frequency;
    protected java.lang.String _CopyOSP;
    protected com.sun.xml.bind.util.ListImpl _ReportingReqDetails = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected java.lang.String _ReportClass;
    protected java.lang.String _FrequencyBase;
    protected java.lang.String _BaseDate;
    protected java.lang.String _ReportType;
    protected java.lang.String _PrincipleInvestigatorName;
    public final static java.lang.Class version = (edu.mit.coeus.utils.xml.bean.reportingReq.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (edu.mit.coeus.utils.xml.bean.reportingReq.ReportingRequirement.class);
    }

    public java.lang.String getFrequency() {
        return _Frequency;
    }

    public void setFrequency(java.lang.String value) {
        _Frequency = value;
    }

    public java.lang.String getCopyOSP() {
        return _CopyOSP;
    }

    public void setCopyOSP(java.lang.String value) {
        _CopyOSP = value;
    }

    public java.util.List getReportingReqDetails() {
        return _ReportingReqDetails;
    }

    public java.lang.String getReportClass() {
        return _ReportClass;
    }

    public void setReportClass(java.lang.String value) {
        _ReportClass = value;
    }

    public java.lang.String getFrequencyBase() {
        return _FrequencyBase;
    }

    public void setFrequencyBase(java.lang.String value) {
        _FrequencyBase = value;
    }

    public java.lang.String getBaseDate() {
        return _BaseDate;
    }

    public void setBaseDate(java.lang.String value) {
        _BaseDate = value;
    }

    public java.lang.String getReportType() {
        return _ReportType;
    }

    public void setReportType(java.lang.String value) {
        _ReportType = value;
    }

    public java.lang.String getPrincipleInvestigatorName() {
        return _PrincipleInvestigatorName;
    }

    public void setPrincipleInvestigatorName(java.lang.String value) {
        _PrincipleInvestigatorName = value;
    }

    public edu.mit.coeus.utils.xml.bean.impl.runtime.UnmarshallingEventHandler createUnmarshaller(edu.mit.coeus.utils.xml.bean.impl.runtime.UnmarshallingContext context) {
        return new edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementImpl.Unmarshaller(context);
    }

    public void serializeBody(edu.mit.coeus.utils.xml.bean.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx3 = 0;
        final int len3 = _ReportingReqDetails.size();
        if (_PrincipleInvestigatorName!= null) {
            context.startElement("", "principleInvestigatorName");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PrincipleInvestigatorName), "PrincipleInvestigatorName");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ReportClass!= null) {
            context.startElement("", "reportClass");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _ReportClass), "ReportClass");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ReportType!= null) {
            context.startElement("", "reportType");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _ReportType), "ReportType");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Frequency!= null) {
            context.startElement("", "frequency");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Frequency), "Frequency");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_FrequencyBase!= null) {
            context.startElement("", "frequencyBase");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _FrequencyBase), "FrequencyBase");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_BaseDate!= null) {
            context.startElement("", "baseDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _BaseDate), "BaseDate");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CopyOSP!= null) {
            context.startElement("", "copyOSP");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _CopyOSP), "CopyOSP");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx3 != len3) {
            context.startElement("", "reportingReqDetails");
            int idx_14 = idx3;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ReportingReqDetails.get(idx_14 ++)), "ReportingReqDetails");
            context.endNamespaceDecls();
            int idx_15 = idx3;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ReportingReqDetails.get(idx_15 ++)), "ReportingReqDetails");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ReportingReqDetails.get(idx3 ++)), "ReportingReqDetails");
            context.endElement();
        }
    }

    public void serializeAttributes(edu.mit.coeus.utils.xml.bean.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx3 = 0;
        final int len3 = _ReportingReqDetails.size();
        while (idx3 != len3) {
            idx3 += 1;
        }
    }

    public void serializeURIs(edu.mit.coeus.utils.xml.bean.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx3 = 0;
        final int len3 = _ReportingReqDetails.size();
        while (idx3 != len3) {
            idx3 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (edu.mit.coeus.utils.xml.bean.reportingReq.ReportingRequirement.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\r2\u0018\u00bfppsq\u0000~\u0000\u0000\nLvPppsq\u0000~\u0000\u0000\u0007"
+"\u00db\u00eb\u001appsq\u0000~\u0000\u0000\u0006\u00c8\u0086 ppsq\u0000~\u0000\u0000\u0006*,\u00e9ppsq\u0000~\u0000\u0000\u0005Q\u0001+ppsq\u0000~\u0000\u0000\u0003\u007f\u0099\u009cppsr\u0000\u001dcom"
+".sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002+\u00cd^ppsr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003\u0002+\u00cdSsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq"
+"\u0000~\u0000\u0000\u0002+\u00cdHppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001f"
+"Lorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/"
+"sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u0001\u00bd\u00f4ppsr\u0000#com.sun.msv.datatype"
+".xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.da"
+"tatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datat"
+"ype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd."
+"XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String"
+";L\u0000\btypeNameq\u0000~\u0000\u001dL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/W"
+"hiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006s"
+"tringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preser"
+"ve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcesso"
+"r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExp"
+"ression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPai"
+"r\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001dL\u0000\fnamespaceURIq\u0000~\u0000\u001dxpq\u0000~\u0000!q\u0000~\u0000"
+" sq\u0000~\u0000\f\u0002*\u000fOppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002"
+"L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000fxq\u0000~\u0000\u0003\u0002*\u000fDq\u0000~\u0000\u0013psq\u0000~\u0000\u0015\u0000\u0081\u00b2\u000bppsr\u0000\""
+"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001aq\u0000~\u0000 t\u0000\u0005Q"
+"Namesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collaps"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000#q\u0000~\u0000&sq\u0000~\u0000\'q\u0000~\u0000/q\u0000~\u0000 sr\u0000#com.sun.msv.gramm"
+"ar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001dL\u0000\fnamespaceUR"
+"Iq\u0000~\u0000\u001dxr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet"
+"\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.g"
+"rammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~"
+"\u0000\u0012\u0001psq\u0000~\u00003t\u0000\u0019principleInvestigatorNamet\u0000\u0000q\u0000~\u00009sq\u0000~\u0000\f\u0001S\u00cc9ppsq"
+"\u0000~\u0000\u000e\u0001S\u00cc.q\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u0000\u0001S\u00cc#ppq\u0000~\u0000\u0018sq\u0000~\u0000\f\u0001R\u000e*ppsq\u0000~\u0000*\u0001R\u000e\u001fq\u0000~\u0000\u0013p"
+"q\u0000~\u0000,sq\u0000~\u00003q\u0000~\u00006q\u0000~\u00007q\u0000~\u00009sq\u0000~\u00003t\u0000\u000breportClassq\u0000~\u0000=q\u0000~\u00009sq\u0000~"
+"\u0000\f\u0001\u00d1g\u008appsq\u0000~\u0000\u000e\u0001\u00d1g\u007fq\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u0000\u0001\u00d1gtppq\u0000~\u0000\u0018sq\u0000~\u0000\f\u0001\u00cf\u00a9{ppsq\u0000~\u0000*"
+"\u0001\u00cf\u00a9pq\u0000~\u0000\u0013pq\u0000~\u0000,sq\u0000~\u00003q\u0000~\u00006q\u0000~\u00007q\u0000~\u00009sq\u0000~\u00003t\u0000\nreportTypeq\u0000~\u0000="
+"q\u0000~\u00009sq\u0000~\u0000\f\u0000\u00d9+\u00b9ppsq\u0000~\u0000\u000e\u0000\u00d9+\u00aeq\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u0000\u0000\u00d9+\u00a3ppq\u0000~\u0000\u0018sq\u0000~\u0000\f\u0000\u00d7m"
+"\u00aappsq\u0000~\u0000*\u0000\u00d7m\u009fq\u0000~\u0000\u0013pq\u0000~\u0000,sq\u0000~\u00003q\u0000~\u00006q\u0000~\u00007q\u0000~\u00009sq\u0000~\u00003t\u0000\tfreque"
+"ncyq\u0000~\u0000=q\u0000~\u00009sq\u0000~\u0000\f\u0000\u009eY2ppsq\u0000~\u0000\u000e\u0000\u009eY\'q\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u0000\u0000\u009eY\u001cppq\u0000~\u0000\u0018s"
+"q\u0000~\u0000\f\u0000\u009c\u009b#ppsq\u0000~\u0000*\u0000\u009c\u009b\u0018q\u0000~\u0000\u0013pq\u0000~\u0000,sq\u0000~\u00003q\u0000~\u00006q\u0000~\u00007q\u0000~\u00009sq\u0000~\u00003t"
+"\u0000\rfrequencyBaseq\u0000~\u0000=q\u0000~\u00009sq\u0000~\u0000\f\u0001\u0013d\u00f5ppsq\u0000~\u0000\u000e\u0001\u0013d\u00eaq\u0000~\u0000\u0013p\u0000sq\u0000~\u0000\u0000"
+"\u0001\u0013d\u00dfppq\u0000~\u0000\u0018sq\u0000~\u0000\f\u0001\u0011\u00a6\u00e6ppsq\u0000~\u0000*\u0001\u0011\u00a6\u00dbq\u0000~\u0000\u0013pq\u0000~\u0000,sq\u0000~\u00003q\u0000~\u00006q\u0000~\u00007"
+"q\u0000~\u00009sq\u0000~\u00003t\u0000\bbaseDateq\u0000~\u0000=q\u0000~\u00009sq\u0000~\u0000\f\u0002p\u008b1ppsq\u0000~\u0000\u000e\u0002p\u008b&q\u0000~\u0000\u0013p"
+"\u0000sq\u0000~\u0000\u0000\u0002p\u008b\u001bppq\u0000~\u0000\u0018sq\u0000~\u0000\f\u0002n\u00cd\"ppsq\u0000~\u0000*\u0002n\u00cd\u0017q\u0000~\u0000\u0013pq\u0000~\u0000,sq\u0000~\u00003q\u0000~"
+"\u00006q\u0000~\u00007q\u0000~\u00009sq\u0000~\u00003t\u0000\u0007copyOSPq\u0000~\u0000=q\u0000~\u00009sq\u0000~\u0000\f\u0002\u00e5\u00a2jppsr\u0000 com.su"
+"n.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar"
+".UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u00e5\u00a2_q\u0000~\u0000\u0013psq\u0000~\u0000\u000e\u0002\u00e5\u00a2\\q\u0000~"
+"\u0000\u0013p\u0000sq\u0000~\u0000\u0000\u0002\u00e5\u00a2Qppsq\u0000~\u0000\u000e\u0001<fcpp\u0000sq\u0000~\u0000\f\u0001<fXppsq\u0000~\u0000o\u0001<fMq\u0000~\u0000\u0013psq\u0000"
+"~\u0000*\u0001<fJq\u0000~\u0000\u0013psr\u00002com.sun.msv.grammar.Expression$AnyStringExp"
+"ression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bq\u0000~\u0000:psr\u0000 com.sun.msv.grammar.An"
+"yNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00004q\u0000~\u00009sq\u0000~\u00003t\u0000Dedu.mit.coeus.utils"
+".xml.bean.reportingReq.ReportingRequirementDetailt\u0000+http://j"
+"ava.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\f\u0001\u00a9;\u00e9ppsq\u0000~\u0000*\u0001\u00a9;\u00deq\u0000~"
+"\u0000\u0013pq\u0000~\u0000,sq\u0000~\u00003q\u0000~\u00006q\u0000~\u00007q\u0000~\u00009sq\u0000~\u00003t\u0000\u0013reportingReqDetailsq\u0000~"
+"\u0000=q\u0000~\u00009sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\be"
+"xpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xps"
+"r\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I"
+"\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u0085[\u0000\u0005tablet\u0000![Lcom/sun/msv/gr"
+"ammar/Expression;xp\u0000\u0000\u0000\"\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expres"
+"sion;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfq\u0000~\u0000\u0006ppppppppppppppppq\u0000~\u0000\rpppppppppppp"
+"ppq\u0000~\u0000vppppppppq\u0000~\u0000\tpq\u0000~\u0000uq\u0000~\u0000)pppppppq\u0000~\u0000\u0007pppppppq\u0000~\u0000`ppppp"
+"ppppppppppppppppq\u0000~\u0000@q\u0000~\u0000^pppq\u0000~\u0000\nq\u0000~\u0000Xppq\u0000~\u0000\u007fppppppppppppq\u0000"
+"~\u0000>ppppq\u0000~\u0000aq\u0000~\u0000Vpq\u0000~\u0000hpppppq\u0000~\u0000Pppppppq\u0000~\u0000Hq\u0000~\u0000\u000bppppq\u0000~\u0000App"
+"q\u0000~\u0000fppq\u0000~\u0000Yppq\u0000~\u0000Nppppppq\u0000~\u0000Fppq\u0000~\u0000spppppq\u0000~\u0000\bppppq\u0000~\u0000ippq\u0000"
+"~\u0000qppq\u0000~\u0000Qppppppq\u0000~\u0000Iq\u0000~\u0000nppppq\u0000~\u0000\u0005pppppq\u0000~\u0000\u0014pppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends edu.mit.coeus.utils.xml.bean.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(edu.mit.coeus.utils.xml.bean.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------------");
        }

        protected Unmarshaller(edu.mit.coeus.utils.xml.bean.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("principleInvestigatorName" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  21 :
                        if (("reportingReqDetails" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  24 :
                        if (("reportingReqDetails" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 22;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  15 :
                        if (("baseDate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  18 :
                        if (("copyOSP" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  12 :
                        if (("frequencyBase" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  3 :
                        if (("reportClass" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  9 :
                        if (("frequency" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  6 :
                        if (("reportType" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  22 :
                        if (("awardNo" == ___local)&&("" == ___uri)) {
                            _ReportingReqDetails.add(((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("unitNo" == ___local)&&("" == ___uri)) {
                            _ReportingReqDetails.add(((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("unitName" == ___local)&&("" == ___uri)) {
                            _ReportingReqDetails.add(((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("status" == ___local)&&("" == ___uri)) {
                            _ReportingReqDetails.add(((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("dueDate" == ___local)&&("" == ___uri)) {
                            _ReportingReqDetails.add(((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("contact" == ___local)&&("" == ___uri)) {
                            _ReportingReqDetails.add(((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("address" == ___local)&&("" == ___uri)) {
                            _ReportingReqDetails.add(((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("copies" == ___local)&&("" == ___uri)) {
                            _ReportingReqDetails.add(((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("overdueNo" == ___local)&&("" == ___uri)) {
                            _ReportingReqDetails.add(((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("activityDate" == ___local)&&("" == ___uri)) {
                            _ReportingReqDetails.add(((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("comments" == ___local)&&("" == ___uri)) {
                            _ReportingReqDetails.add(((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("personName" == ___local)&&("" == ___uri)) {
                            _ReportingReqDetails.add(((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _ReportingReqDetails.add(((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        state = 3;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  24 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  23 :
                        if (("reportingReqDetails" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  8 :
                        if (("reportType" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("principleInvestigatorName" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("frequencyBase" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  20 :
                        if (("copyOSP" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("frequency" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  5 :
                        if (("reportClass" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  17 :
                        if (("baseDate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  22 :
                        _ReportingReqDetails.add(((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl) spawnChildFromLeaveElement((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl.class), 23, ___uri, ___local, ___qname)));
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        state = 3;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  24 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  22 :
                        _ReportingReqDetails.add(((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl) spawnChildFromEnterAttribute((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl.class), 23, ___uri, ___local, ___qname)));
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        state = 3;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  24 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  22 :
                        _ReportingReqDetails.add(((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl) spawnChildFromLeaveAttribute((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl.class), 23, ___uri, ___local, ___qname)));
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  0 :
                            state = 3;
                            continue outer;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  24 :
                            revertToParentFromText(value);
                            return ;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  13 :
                            eatText1(value);
                            state = 14;
                            return ;
                        case  10 :
                            eatText2(value);
                            state = 11;
                            return ;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  4 :
                            eatText3(value);
                            state = 5;
                            return ;
                        case  19 :
                            eatText4(value);
                            state = 20;
                            return ;
                        case  1 :
                            eatText5(value);
                            state = 2;
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  7 :
                            eatText6(value);
                            state = 8;
                            return ;
                        case  16 :
                            eatText7(value);
                            state = 17;
                            return ;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  22 :
                            _ReportingReqDetails.add(((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl) spawnChildFromText((edu.mit.coeus.utils.xml.bean.reportingReq.impl.ReportingRequirementDetailImpl.class), 23, value)));
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _FrequencyBase = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Frequency = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ReportClass = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CopyOSP = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PrincipleInvestigatorName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ReportType = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _BaseDate = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
