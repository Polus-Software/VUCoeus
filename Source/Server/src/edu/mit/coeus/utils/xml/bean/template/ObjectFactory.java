//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.05.13 at 09:45:36 EDT 
//


package edu.mit.coeus.utils.xml.bean.template;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the edu.mit.coeus.utils.xml.bean.template package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
public class ObjectFactory
    extends edu.mit.coeus.utils.xml.bean.impl.runtime.DefaultJAXBContextImpl
{

    private static java.util.HashMap defaultImplementations = new java.util.HashMap();
    private static java.util.HashMap rootTagMap = new java.util.HashMap();
    public final static edu.mit.coeus.utils.xml.bean.impl.runtime.GrammarInfo grammarInfo = new edu.mit.coeus.utils.xml.bean.impl.runtime.GrammarInfoImpl(rootTagMap, defaultImplementations, (edu.mit.coeus.utils.xml.bean.template.ObjectFactory.class));
    public final static java.lang.Class version = (edu.mit.coeus.utils.xml.bean.template.impl.JAXBVersion.class);

    static {
        defaultImplementations.put((edu.mit.coeus.utils.xml.bean.template.SchoolInfoType.class), "edu.mit.coeus.utils.xml.bean.template.impl.SchoolInfoTypeImpl");
        defaultImplementations.put((edu.mit.coeus.utils.xml.bean.template.SponsorType.class), "edu.mit.coeus.utils.xml.bean.template.impl.SponsorTypeImpl");
        defaultImplementations.put((edu.mit.coeus.utils.xml.bean.template.ContactType.class), "edu.mit.coeus.utils.xml.bean.template.impl.ContactTypeImpl");
        defaultImplementations.put((edu.mit.coeus.utils.xml.bean.template.TemplateStatusType.class), "edu.mit.coeus.utils.xml.bean.template.impl.TemplateStatusTypeImpl");
        defaultImplementations.put((edu.mit.coeus.utils.xml.bean.template.ReportTermDetailsType.class), "edu.mit.coeus.utils.xml.bean.template.impl.ReportTermDetailsTypeImpl");
        defaultImplementations.put((edu.mit.coeus.utils.xml.bean.template.NonCompetingContType.class), "edu.mit.coeus.utils.xml.bean.template.impl.NonCompetingContTypeImpl");
        defaultImplementations.put((edu.mit.coeus.utils.xml.bean.template.TemplateType.class), "edu.mit.coeus.utils.xml.bean.template.impl.TemplateTypeImpl");
        defaultImplementations.put((edu.mit.coeus.utils.xml.bean.template.RolodexDetailsType.class), "edu.mit.coeus.utils.xml.bean.template.impl.RolodexDetailsTypeImpl");
        defaultImplementations.put((edu.mit.coeus.utils.xml.bean.template.Template.class), "edu.mit.coeus.utils.xml.bean.template.impl.TemplateImpl");
        defaultImplementations.put((edu.mit.coeus.utils.xml.bean.template.PaymentMethodType.class), "edu.mit.coeus.utils.xml.bean.template.impl.PaymentMethodTypeImpl");
        defaultImplementations.put((edu.mit.coeus.utils.xml.bean.template.TermType.class), "edu.mit.coeus.utils.xml.bean.template.impl.TermTypeImpl");
        defaultImplementations.put((edu.mit.coeus.utils.xml.bean.template.ReportTermType.class), "edu.mit.coeus.utils.xml.bean.template.impl.ReportTermTypeImpl");
        defaultImplementations.put((edu.mit.coeus.utils.xml.bean.template.CompetingRenewalType.class), "edu.mit.coeus.utils.xml.bean.template.impl.CompetingRenewalTypeImpl");
        defaultImplementations.put((edu.mit.coeus.utils.xml.bean.template.BasisPaymentType.class), "edu.mit.coeus.utils.xml.bean.template.impl.BasisPaymentTypeImpl");
        defaultImplementations.put((edu.mit.coeus.utils.xml.bean.template.PaymentFreqType.class), "edu.mit.coeus.utils.xml.bean.template.impl.PaymentFreqTypeImpl");
        defaultImplementations.put((edu.mit.coeus.utils.xml.bean.template.ReportTermDetailsType.MailCopiesType.class), "edu.mit.coeus.utils.xml.bean.template.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl");
        defaultImplementations.put((edu.mit.coeus.utils.xml.bean.template.CommentType.class), "edu.mit.coeus.utils.xml.bean.template.impl.CommentTypeImpl");
        defaultImplementations.put((edu.mit.coeus.utils.xml.bean.template.TemplateMasterData.class), "edu.mit.coeus.utils.xml.bean.template.impl.TemplateMasterDataImpl");
        defaultImplementations.put((edu.mit.coeus.utils.xml.bean.template.TermDetailsType.class), "edu.mit.coeus.utils.xml.bean.template.impl.TermDetailsTypeImpl");
        rootTagMap.put(new javax.xml.namespace.QName("", "template"), (edu.mit.coeus.utils.xml.bean.template.Template.class));
    }

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: edu.mit.coeus.utils.xml.bean.template
     * 
     */
    public ObjectFactory() {
        super(grammarInfo);
    }

    /**
     * Create an instance of the specified Java content interface.
     * 
     * @param javaContentInterface
     *     the Class object of the javacontent interface to instantiate
     * @return
     *     a new instance
     * @throws JAXBException
     *     if an error occurs
     */
    public java.lang.Object newInstance(java.lang.Class javaContentInterface)
        throws javax.xml.bind.JAXBException
    {
        return super.newInstance(javaContentInterface);
    }

    /**
     * Get the specified property. This method can only be
     * used to get provider specific properties.
     * Attempting to get an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name
     *     the name of the property to retrieve
     * @return
     *     the value of the requested property
     * @throws PropertyException
     *     when there is an error retrieving the given property or value
     */
    public java.lang.Object getProperty(java.lang.String name)
        throws javax.xml.bind.PropertyException
    {
        return super.getProperty(name);
    }

    /**
     * Set the specified property. This method can only be
     * used to set provider specific properties.
     * Attempting to set an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param value
     *     the value of the property to be set
     * @param name
     *     the name of the property to retrieve
     * @throws PropertyException
     *     when there is an error processing the given property or value
     */
    public void setProperty(java.lang.String name, java.lang.Object value)
        throws javax.xml.bind.PropertyException
    {
        super.setProperty(name, value);
    }

    /**
     * Create an instance of SchoolInfoType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeus.utils.xml.bean.template.SchoolInfoType createSchoolInfoType()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeus.utils.xml.bean.template.impl.SchoolInfoTypeImpl();
    }

    /**
     * Create an instance of SponsorType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeus.utils.xml.bean.template.SponsorType createSponsorType()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeus.utils.xml.bean.template.impl.SponsorTypeImpl();
    }

    /**
     * Create an instance of ContactType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeus.utils.xml.bean.template.ContactType createContactType()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeus.utils.xml.bean.template.impl.ContactTypeImpl();
    }

    /**
     * Create an instance of TemplateStatusType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeus.utils.xml.bean.template.TemplateStatusType createTemplateStatusType()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeus.utils.xml.bean.template.impl.TemplateStatusTypeImpl();
    }

    /**
     * Create an instance of ReportTermDetailsType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeus.utils.xml.bean.template.ReportTermDetailsType createReportTermDetailsType()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeus.utils.xml.bean.template.impl.ReportTermDetailsTypeImpl();
    }

    /**
     * Create an instance of NonCompetingContType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeus.utils.xml.bean.template.NonCompetingContType createNonCompetingContType()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeus.utils.xml.bean.template.impl.NonCompetingContTypeImpl();
    }

    /**
     * Create an instance of TemplateType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeus.utils.xml.bean.template.TemplateType createTemplateType()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeus.utils.xml.bean.template.impl.TemplateTypeImpl();
    }

    /**
     * Create an instance of RolodexDetailsType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeus.utils.xml.bean.template.RolodexDetailsType createRolodexDetailsType()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeus.utils.xml.bean.template.impl.RolodexDetailsTypeImpl();
    }

    /**
     * Create an instance of Template
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeus.utils.xml.bean.template.Template createTemplate()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeus.utils.xml.bean.template.impl.TemplateImpl();
    }

    /**
     * Create an instance of PaymentMethodType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeus.utils.xml.bean.template.PaymentMethodType createPaymentMethodType()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeus.utils.xml.bean.template.impl.PaymentMethodTypeImpl();
    }

    /**
     * Create an instance of TermType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeus.utils.xml.bean.template.TermType createTermType()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeus.utils.xml.bean.template.impl.TermTypeImpl();
    }

    /**
     * Create an instance of ReportTermType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeus.utils.xml.bean.template.ReportTermType createReportTermType()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeus.utils.xml.bean.template.impl.ReportTermTypeImpl();
    }

    /**
     * Create an instance of CompetingRenewalType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeus.utils.xml.bean.template.CompetingRenewalType createCompetingRenewalType()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeus.utils.xml.bean.template.impl.CompetingRenewalTypeImpl();
    }

    /**
     * Create an instance of BasisPaymentType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeus.utils.xml.bean.template.BasisPaymentType createBasisPaymentType()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeus.utils.xml.bean.template.impl.BasisPaymentTypeImpl();
    }

    /**
     * Create an instance of PaymentFreqType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeus.utils.xml.bean.template.PaymentFreqType createPaymentFreqType()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeus.utils.xml.bean.template.impl.PaymentFreqTypeImpl();
    }

    /**
     * Create an instance of ReportTermDetailsTypeMailCopiesType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeus.utils.xml.bean.template.ReportTermDetailsType.MailCopiesType createReportTermDetailsTypeMailCopiesType()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeus.utils.xml.bean.template.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl();
    }

    /**
     * Create an instance of CommentType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeus.utils.xml.bean.template.CommentType createCommentType()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeus.utils.xml.bean.template.impl.CommentTypeImpl();
    }

    /**
     * Create an instance of TemplateMasterData
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeus.utils.xml.bean.template.TemplateMasterData createTemplateMasterData()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeus.utils.xml.bean.template.impl.TemplateMasterDataImpl();
    }

    /**
     * Create an instance of TermDetailsType
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public edu.mit.coeus.utils.xml.bean.template.TermDetailsType createTermDetailsType()
        throws javax.xml.bind.JAXBException
    {
        return new edu.mit.coeus.utils.xml.bean.template.impl.TermDetailsTypeImpl();
    }

}
