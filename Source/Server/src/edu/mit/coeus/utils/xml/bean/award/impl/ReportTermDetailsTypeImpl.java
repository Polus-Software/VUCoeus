//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.12.13 at 02:14:23 EST 
//


package edu.mit.coeus.utils.xml.bean.award.impl;

public class ReportTermDetailsTypeImpl implements edu.mit.coeus.utils.xml.bean.award.ReportTermDetailsType, com.sun.xml.bind.JAXBObject, edu.mit.coeus.utils.xml.bean.award.impl.runtime.UnmarshallableObject, edu.mit.coeus.utils.xml.bean.award.impl.runtime.XMLSerializable, edu.mit.coeus.utils.xml.bean.award.impl.runtime.ValidatableObject
{

    protected boolean has_ReportClassCode;
    protected int _ReportClassCode;
    protected java.lang.String _ReportCodeDesc;
    protected java.lang.String _OSPDistributionDesc;
    protected boolean has_FrequencyCode;
    protected int _FrequencyCode;
    protected com.sun.xml.bind.util.ListImpl _MailCopies;
    protected java.lang.String _FrequencyBaseDesc;
    protected java.lang.String _DueDateModified;
    protected boolean has_SequenceNumber;
    protected int _SequenceNumber;
    protected java.lang.String _AwardNumber;
    protected java.lang.String _FrequencyCodeDesc;
    protected java.util.Calendar _DueDate;
    protected boolean has_FrequencyBaseCode;
    protected int _FrequencyBaseCode;
    protected boolean has_ReportCode;
    protected int _ReportCode;
    protected java.lang.String _ReportClassDesc;
    protected boolean has_OSPDistributionCode;
    protected int _OSPDistributionCode;
    public final static java.lang.Class version = (edu.mit.coeus.utils.xml.bean.award.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (edu.mit.coeus.utils.xml.bean.award.ReportTermDetailsType.class);
    }

    public int getReportClassCode() {
        return _ReportClassCode;
    }

    public void setReportClassCode(int value) {
        _ReportClassCode = value;
        has_ReportClassCode = true;
    }

    public java.lang.String getReportCodeDesc() {
        return _ReportCodeDesc;
    }

    public void setReportCodeDesc(java.lang.String value) {
        _ReportCodeDesc = value;
    }

    public java.lang.String getOSPDistributionDesc() {
        return _OSPDistributionDesc;
    }

    public void setOSPDistributionDesc(java.lang.String value) {
        _OSPDistributionDesc = value;
    }

    public int getFrequencyCode() {
        return _FrequencyCode;
    }

    public void setFrequencyCode(int value) {
        _FrequencyCode = value;
        has_FrequencyCode = true;
    }

    protected com.sun.xml.bind.util.ListImpl _getMailCopies() {
        if (_MailCopies == null) {
            _MailCopies = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _MailCopies;
    }

    public java.util.List getMailCopies() {
        return _getMailCopies();
    }

    public java.lang.String getFrequencyBaseDesc() {
        return _FrequencyBaseDesc;
    }

    public void setFrequencyBaseDesc(java.lang.String value) {
        _FrequencyBaseDesc = value;
    }

    public java.lang.String getDueDateModified() {
        return _DueDateModified;
    }

    public void setDueDateModified(java.lang.String value) {
        _DueDateModified = value;
    }

    public int getSequenceNumber() {
        return _SequenceNumber;
    }

    public void setSequenceNumber(int value) {
        _SequenceNumber = value;
        has_SequenceNumber = true;
    }

    public java.lang.String getAwardNumber() {
        return _AwardNumber;
    }

    public void setAwardNumber(java.lang.String value) {
        _AwardNumber = value;
    }

    public java.lang.String getFrequencyCodeDesc() {
        return _FrequencyCodeDesc;
    }

    public void setFrequencyCodeDesc(java.lang.String value) {
        _FrequencyCodeDesc = value;
    }

    public java.util.Calendar getDueDate() {
        return _DueDate;
    }

    public void setDueDate(java.util.Calendar value) {
        _DueDate = value;
    }

    public int getFrequencyBaseCode() {
        return _FrequencyBaseCode;
    }

    public void setFrequencyBaseCode(int value) {
        _FrequencyBaseCode = value;
        has_FrequencyBaseCode = true;
    }

    public int getReportCode() {
        return _ReportCode;
    }

    public void setReportCode(int value) {
        _ReportCode = value;
        has_ReportCode = true;
    }

    public java.lang.String getReportClassDesc() {
        return _ReportClassDesc;
    }

    public void setReportClassDesc(java.lang.String value) {
        _ReportClassDesc = value;
    }

    public int getOSPDistributionCode() {
        return _OSPDistributionCode;
    }

    public void setOSPDistributionCode(int value) {
        _OSPDistributionCode = value;
        has_OSPDistributionCode = true;
    }

    public edu.mit.coeus.utils.xml.bean.award.impl.runtime.UnmarshallingEventHandler createUnmarshaller(edu.mit.coeus.utils.xml.bean.award.impl.runtime.UnmarshallingContext context) {
        return new edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(edu.mit.coeus.utils.xml.bean.award.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx5 = 0;
        final int len5 = ((_MailCopies == null)? 0 :_MailCopies.size());
        if (_AwardNumber!= null) {
            context.startElement("", "AwardNumber");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _AwardNumber), "AwardNumber");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_SequenceNumber) {
            context.startElement("", "SequenceNumber");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _SequenceNumber)), "SequenceNumber");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ReportClassCode) {
            context.startElement("", "ReportClassCode");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _ReportClassCode)), "ReportClassCode");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ReportClassDesc!= null) {
            context.startElement("", "ReportClassDesc");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _ReportClassDesc), "ReportClassDesc");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ReportCode) {
            context.startElement("", "ReportCode");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _ReportCode)), "ReportCode");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ReportCodeDesc!= null) {
            context.startElement("", "ReportCodeDesc");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _ReportCodeDesc), "ReportCodeDesc");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_FrequencyCode) {
            context.startElement("", "FrequencyCode");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _FrequencyCode)), "FrequencyCode");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_FrequencyCodeDesc!= null) {
            context.startElement("", "FrequencyCodeDesc");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _FrequencyCodeDesc), "FrequencyCodeDesc");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_FrequencyBaseCode) {
            context.startElement("", "FrequencyBaseCode");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _FrequencyBaseCode)), "FrequencyBaseCode");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_FrequencyBaseDesc!= null) {
            context.startElement("", "FrequencyBaseDesc");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _FrequencyBaseDesc), "FrequencyBaseDesc");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_OSPDistributionCode) {
            context.startElement("", "OSPDistributionCode");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _OSPDistributionCode)), "OSPDistributionCode");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_OSPDistributionDesc!= null) {
            context.startElement("", "OSPDistributionDesc");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _OSPDistributionDesc), "OSPDistributionDesc");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx5 != len5) {
            context.startElement("", "MailCopies");
            int idx_24 = idx5;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _MailCopies.get(idx_24 ++)), "MailCopies");
            context.endNamespaceDecls();
            int idx_25 = idx5;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _MailCopies.get(idx_25 ++)), "MailCopies");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _MailCopies.get(idx5 ++)), "MailCopies");
            context.endElement();
        }
        if (_DueDateModified!= null) {
            context.startElement("", "DueDateModified");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _DueDateModified), "DueDateModified");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_DueDate!= null) {
            context.startElement("", "DueDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDate(((java.util.Calendar) _DueDate)), "DueDate");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(edu.mit.coeus.utils.xml.bean.award.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx5 = 0;
        final int len5 = ((_MailCopies == null)? 0 :_MailCopies.size());
        while (idx5 != len5) {
            idx5 += 1;
        }
    }

    public void serializeURIs(edu.mit.coeus.utils.xml.bean.award.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx5 = 0;
        final int len5 = ((_MailCopies == null)? 0 :_MailCopies.size());
        while (idx5 != len5) {
            idx5 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (edu.mit.coeus.utils.xml.bean.award.ReportTermDetailsType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'"
+"com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameCla"
+"sst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar."
+"ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontent"
+"Modelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p"
+"\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fL"
+"org/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/s"
+"un/msv/util/StringPair;xq\u0000~\u0000\u0003q\u0000~\u0000\u001apsr\u0000#com.sun.msv.datatype."
+"xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.dat"
+"atype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.dataty"
+"pe.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.X"
+"SDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;"
+"L\u0000\btypeNameq\u0000~\u0000$L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/Wh"
+"iteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006st"
+"ringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserv"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExpr"
+"ession\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ej"
+"B\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000$L\u0000\fnamespaceURIq\u0000~\u0000$xpq\u0000~\u0000(q\u0000~\u0000\'sq\u0000~"
+"\u0000\u0013ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~"
+"\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0016xq\u0000~\u0000\u0003q\u0000~\u0000\u001apsq\u0000~\u0000\u001cppsr\u0000\"com.sun.msv.datat"
+"ype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000!q\u0000~\u0000\'t\u0000\u0005QNamesr\u00005com.sun.m"
+"sv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"*q\u0000~\u0000-sq\u0000~\u0000.q\u0000~\u00006q\u0000~\u0000\'sr\u0000#com.sun.msv.grammar.SimpleNameClas"
+"s\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000$L\u0000\fnamespaceURIq\u0000~\u0000$xr\u0000\u001dcom.sun"
+".msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.o"
+"rg/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expression"
+"$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0019\u0001psq\u0000~\u0000:t\u0000\u000bAwardNum"
+"bert\u0000\u0000q\u0000~\u0000@sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001cq\u0000~\u0000\u001apsr\u0000 com."
+"sun.msv.datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datat"
+"ype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/su"
+"n/msv/datatype/xsd/XSDatatypeImpl;xq\u0000~\u0000!q\u0000~\u0000\'t\u0000\u0003intq\u0000~\u00008sr\u0000*"
+"com.sun.msv.datatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com"
+".sun.msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012L"
+"java/lang/Object;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithVa"
+"lueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Da"
+"taTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFl"
+"agL\u0000\bbaseTypeq\u0000~\u0000KL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xs"
+"d/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000$xq\u0000~\u0000#ppq\u0000~\u00008\u0000\u0001sr\u0000*com.sun.m"
+"sv.datatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Oppq\u0000~\u00008\u0000\u0000s"
+"r\u0000!com.sun.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Jq\u0000~\u0000\'t\u0000"
+"\u0004longq\u0000~\u00008sq\u0000~\u0000Nppq\u0000~\u00008\u0000\u0001sq\u0000~\u0000Uppq\u0000~\u00008\u0000\u0000sr\u0000$com.sun.msv.data"
+"type.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Jq\u0000~\u0000\'t\u0000\u0007integerq\u0000~\u00008sr\u0000"
+",com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005s"
+"calexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstrai"
+"ntFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000Rppq\u0000~\u00008\u0001\u0000sr\u0000#com.sun.msv.datatype.xs"
+"d.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000!q\u0000~\u0000\'t\u0000\u0007decimalq\u0000~\u00008q\u0000~\u0000ct\u0000\u000efra"
+"ctionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000]t\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#"
+"\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000]t\u0000"
+"\fmaxInclusivesq\u0000~\u0000g\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000Xq\u0000~\u0000fsr\u0000\u0011java.lang.Integer\u0012\u00e2"
+"\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u0000h\u0080\u0000\u0000\u0000q\u0000~\u0000Xq\u0000~\u0000jsq\u0000~\u0000l\u007f\u00ff\u00ff\u00ffq\u0000~\u0000-sq\u0000~\u0000.q\u0000"
+"~\u0000Mq\u0000~\u0000\'sq\u0000~\u0000\u0013ppsq\u0000~\u00001q\u0000~\u0000\u001apq\u0000~\u00003q\u0000~\u0000<q\u0000~\u0000@sq\u0000~\u0000:t\u0000\u000eSequence"
+"Numberq\u0000~\u0000Dq\u0000~\u0000@sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Hsq\u0000~\u0000\u0013ppsq"
+"\u0000~\u00001q\u0000~\u0000\u001apq\u0000~\u00003q\u0000~\u0000<q\u0000~\u0000@sq\u0000~\u0000:t\u0000\u000fReportClassCodeq\u0000~\u0000Dq\u0000~\u0000@s"
+"q\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001fsq\u0000~\u0000\u0013ppsq\u0000~\u00001q\u0000~\u0000\u001apq\u0000~\u00003q\u0000"
+"~\u0000<q\u0000~\u0000@sq\u0000~\u0000:t\u0000\u000fReportClassDescq\u0000~\u0000Dq\u0000~\u0000@sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000"
+"\u001ap\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Hsq\u0000~\u0000\u0013ppsq\u0000~\u00001q\u0000~\u0000\u001apq\u0000~\u00003q\u0000~\u0000<q\u0000~\u0000@sq\u0000~\u0000:t\u0000\n"
+"ReportCodeq\u0000~\u0000Dq\u0000~\u0000@sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001fsq\u0000~\u0000\u0013"
+"ppsq\u0000~\u00001q\u0000~\u0000\u001apq\u0000~\u00003q\u0000~\u0000<q\u0000~\u0000@sq\u0000~\u0000:t\u0000\u000eReportCodeDescq\u0000~\u0000Dq\u0000~"
+"\u0000@sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Hsq\u0000~\u0000\u0013ppsq\u0000~\u00001q\u0000~\u0000\u001apq\u0000~\u0000"
+"3q\u0000~\u0000<q\u0000~\u0000@sq\u0000~\u0000:t\u0000\rFrequencyCodeq\u0000~\u0000Dq\u0000~\u0000@sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~"
+"\u0000\u001ap\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001fsq\u0000~\u0000\u0013ppsq\u0000~\u00001q\u0000~\u0000\u001apq\u0000~\u00003q\u0000~\u0000<q\u0000~\u0000@sq\u0000~\u0000:t\u0000"
+"\u0011FrequencyCodeDescq\u0000~\u0000Dq\u0000~\u0000@sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000ppq\u0000~"
+"\u0000Hsq\u0000~\u0000\u0013ppsq\u0000~\u00001q\u0000~\u0000\u001apq\u0000~\u00003q\u0000~\u0000<q\u0000~\u0000@sq\u0000~\u0000:t\u0000\u0011FrequencyBaseC"
+"odeq\u0000~\u0000Dq\u0000~\u0000@sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001fsq\u0000~\u0000\u0013ppsq\u0000~\u0000"
+"1q\u0000~\u0000\u001apq\u0000~\u00003q\u0000~\u0000<q\u0000~\u0000@sq\u0000~\u0000:t\u0000\u0011FrequencyBaseDescq\u0000~\u0000Dq\u0000~\u0000@sq"
+"\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Hsq\u0000~\u0000\u0013ppsq\u0000~\u00001q\u0000~\u0000\u001apq\u0000~\u00003q\u0000~"
+"\u0000<q\u0000~\u0000@sq\u0000~\u0000:t\u0000\u0013OSPDistributionCodeq\u0000~\u0000Dq\u0000~\u0000@sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q"
+"\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001fsq\u0000~\u0000\u0013ppsq\u0000~\u00001q\u0000~\u0000\u001apq\u0000~\u00003q\u0000~\u0000<q\u0000~\u0000@sq\u0000~\u0000:"
+"t\u0000\u0013OSPDistributionDescq\u0000~\u0000Dq\u0000~\u0000@sq\u0000~\u0000\u0013ppsr\u0000 com.sun.msv.gram"
+"mar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u001apsq\u0000~\u0000\u0015q\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0015"
+"pp\u0000sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u00bbq\u0000~\u0000\u001apsq\u0000~\u00001q\u0000~\u0000\u001apsr\u00002com.sun.msv.grammar.E"
+"xpression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000Apsr\u0000 com."
+"sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000;q\u0000~\u0000@sq\u0000~\u0000:t\u0000Ge"
+"du.mit.coeus.utils.xml.bean.award.ReportTermDetailsType.Mail"
+"CopiesTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~"
+"\u0000\u0013ppsq\u0000~\u00001q\u0000~\u0000\u001apq\u0000~\u00003q\u0000~\u0000<q\u0000~\u0000@sq\u0000~\u0000:t\u0000\nMailCopiesq\u0000~\u0000Dq\u0000~\u0000@"
+"sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~\u0000\u001ap\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001fsq\u0000~\u0000\u0013ppsq\u0000~\u00001q\u0000~\u0000\u001apq\u0000~\u00003q"
+"\u0000~\u0000<q\u0000~\u0000@sq\u0000~\u0000:t\u0000\u000fDueDateModifiedq\u0000~\u0000Dq\u0000~\u0000@sq\u0000~\u0000\u0013ppsq\u0000~\u0000\u0015q\u0000~"
+"\u0000\u001ap\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001cppsr\u0000!com.sun.msv.datatype.xsd.DateType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4"
+"\u00e5\u0002\u0000\u0000xq\u0000~\u0000!q\u0000~\u0000\'t\u0000\u0004dateq\u0000~\u00008q\u0000~\u0000-sq\u0000~\u0000.q\u0000~\u0000\u00ddq\u0000~\u0000\'sq\u0000~\u0000\u0013ppsq\u0000~"
+"\u00001q\u0000~\u0000\u001apq\u0000~\u00003q\u0000~\u0000<q\u0000~\u0000@sq\u0000~\u0000:t\u0000\u0007DueDateq\u0000~\u0000Dq\u0000~\u0000@sr\u0000\"com.sun"
+".msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun"
+"/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gra"
+"mmar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVe"
+"rsionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000>\u0001"
+"pq\u0000~\u0000\u000bq\u0000~\u0000\u00d8q\u0000~\u0000\u0012q\u0000~\u0000\u000eq\u0000~\u0000\bq\u0000~\u0000\u0006q\u0000~\u0000\u00bfq\u0000~\u0000\u000fq\u0000~\u0000\u0007q\u0000~\u0000\u00cfq\u0000~\u0000\u00d2q\u0000~\u0000"
+"\u00cbq\u0000~\u0000\u00b6q\u0000~\u0000\u00afq\u0000~\u0000\u00a8q\u0000~\u0000\u00a1q\u0000~\u0000\u009aq\u0000~\u0000\u0093q\u0000~\u0000\u008cq\u0000~\u0000\u0085q\u0000~\u0000~q\u0000~\u0000wq\u0000~\u0000pq\u0000~\u0000"
+"0q\u0000~\u0000\u00b3q\u0000~\u0000\u00a5q\u0000~\u0000\u0097q\u0000~\u0000\u0089q\u0000~\u0000{q\u0000~\u0000\tq\u0000~\u0000\u0014q\u0000~\u0000\u00dfq\u0000~\u0000\u00d6q\u0000~\u0000\u00bdq\u0000~\u0000\u00baq\u0000~\u0000"
+"\rq\u0000~\u0000\u0005q\u0000~\u0000\u0011q\u0000~\u0000\u00c2q\u0000~\u0000\u00acq\u0000~\u0000\u009eq\u0000~\u0000\u0090q\u0000~\u0000\u0082q\u0000~\u0000tq\u0000~\u0000Eq\u0000~\u0000\u00c1q\u0000~\u0000\u00d1q\u0000~\u0000"
+"\u00b5q\u0000~\u0000\u00a7q\u0000~\u0000\u00aeq\u0000~\u0000\u00a0q\u0000~\u0000\u0092q\u0000~\u0000\u0084q\u0000~\u0000vq\u0000~\u0000Gq\u0000~\u0000\u0099q\u0000~\u0000\u008bq\u0000~\u0000}q\u0000~\u0000\u001bq\u0000~\u0000"
+"\nq\u0000~\u0000\u0010q\u0000~\u0000\fx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class MailCopiesTypeImpl implements edu.mit.coeus.utils.xml.bean.award.ReportTermDetailsType.MailCopiesType, com.sun.xml.bind.JAXBObject, edu.mit.coeus.utils.xml.bean.award.impl.runtime.UnmarshallableObject, edu.mit.coeus.utils.xml.bean.award.impl.runtime.XMLSerializable, edu.mit.coeus.utils.xml.bean.award.impl.runtime.ValidatableObject
    {

        protected boolean has_ContactTypeCode;
        protected int _ContactTypeCode;
        protected java.lang.String _RolodexOrganization;
        protected java.lang.String _RolodexName;
        protected java.lang.String _RolodexId;
        protected java.lang.String _ContactTypeDesc;
        protected java.lang.String _NumberOfCopies;
        public final static java.lang.Class version = (edu.mit.coeus.utils.xml.bean.award.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (edu.mit.coeus.utils.xml.bean.award.ReportTermDetailsType.MailCopiesType.class);
        }

        public int getContactTypeCode() {
            return _ContactTypeCode;
        }

        public void setContactTypeCode(int value) {
            _ContactTypeCode = value;
            has_ContactTypeCode = true;
        }

        public java.lang.String getRolodexOrganization() {
            return _RolodexOrganization;
        }

        public void setRolodexOrganization(java.lang.String value) {
            _RolodexOrganization = value;
        }

        public java.lang.String getRolodexName() {
            return _RolodexName;
        }

        public void setRolodexName(java.lang.String value) {
            _RolodexName = value;
        }

        public java.lang.String getRolodexId() {
            return _RolodexId;
        }

        public void setRolodexId(java.lang.String value) {
            _RolodexId = value;
        }

        public java.lang.String getContactTypeDesc() {
            return _ContactTypeDesc;
        }

        public void setContactTypeDesc(java.lang.String value) {
            _ContactTypeDesc = value;
        }

        public java.lang.String getNumberOfCopies() {
            return _NumberOfCopies;
        }

        public void setNumberOfCopies(java.lang.String value) {
            _NumberOfCopies = value;
        }

        public edu.mit.coeus.utils.xml.bean.award.impl.runtime.UnmarshallingEventHandler createUnmarshaller(edu.mit.coeus.utils.xml.bean.award.impl.runtime.UnmarshallingContext context) {
            return new edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(edu.mit.coeus.utils.xml.bean.award.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            if (_ContactTypeDesc!= null) {
                context.startElement("", "ContactTypeDesc");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _ContactTypeDesc), "ContactTypeDesc");
                } catch (java.lang.Exception e) {
                    edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (has_ContactTypeCode) {
                context.startElement("", "ContactTypeCode");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _ContactTypeCode)), "ContactTypeCode");
                } catch (java.lang.Exception e) {
                    edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (_NumberOfCopies!= null) {
                context.startElement("", "NumberOfCopies");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _NumberOfCopies), "NumberOfCopies");
                } catch (java.lang.Exception e) {
                    edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (_RolodexId!= null) {
                context.startElement("", "RolodexId");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _RolodexId), "RolodexId");
                } catch (java.lang.Exception e) {
                    edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (_RolodexName!= null) {
                context.startElement("", "RolodexName");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _RolodexName), "RolodexName");
                } catch (java.lang.Exception e) {
                    edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (_RolodexOrganization!= null) {
                context.startElement("", "RolodexOrganization");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _RolodexOrganization), "RolodexOrganization");
                } catch (java.lang.Exception e) {
                    edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
        }

        public void serializeAttributes(edu.mit.coeus.utils.xml.bean.award.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public void serializeURIs(edu.mit.coeus.utils.xml.bean.award.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public java.lang.Class getPrimaryInterface() {
            return (edu.mit.coeus.utils.xml.bean.award.ReportTermDetailsType.MailCopiesType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom."
+"sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv."
+"grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/su"
+"n/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq"
+"\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000"
+"\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/"
+"datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/"
+"StringPair;xq\u0000~\u0000\u0003q\u0000~\u0000\u0011psr\u0000#com.sun.msv.datatype.xsd.StringTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.Bu"
+"iltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Concr"
+"eteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImp"
+"l\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq"
+"\u0000~\u0000\u001bL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProc"
+"essor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com."
+"sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"p\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlo"
+"calNameq\u0000~\u0000\u001bL\u0000\fnamespaceURIq\u0000~\u0000\u001bxpq\u0000~\u0000\u001fq\u0000~\u0000\u001esq\u0000~\u0000\nppsr\u0000 com."
+"sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameCla"
+"ssq\u0000~\u0000\rxq\u0000~\u0000\u0003q\u0000~\u0000\u0011psq\u0000~\u0000\u0013ppsr\u0000\"com.sun.msv.datatype.xsd.Qnam"
+"eType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0018q\u0000~\u0000\u001et\u0000\u0005QNamesr\u00005com.sun.msv.datatype."
+"xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000!q\u0000~\u0000$sq\u0000~\u0000%"
+"q\u0000~\u0000-q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002"
+"L\u0000\tlocalNameq\u0000~\u0000\u001bL\u0000\fnamespaceURIq\u0000~\u0000\u001bxr\u0000\u001dcom.sun.msv.grammar"
+".NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLS"
+"chema-instancesr\u00000com.sun.msv.grammar.Expression$EpsilonExpr"
+"ession\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0010\u0001psq\u0000~\u00001t\u0000\u000fContactTypeDesct\u0000\u0000q\u0000"
+"~\u00007sq\u0000~\u0000\nppsq\u0000~\u0000\fq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0011psr\u0000 com.sun.msv."
+"datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd."
+"IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/da"
+"tatype/xsd/XSDatatypeImpl;xq\u0000~\u0000\u0018q\u0000~\u0000\u001et\u0000\u0003intq\u0000~\u0000/sr\u0000*com.sun."
+"msv.datatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv"
+".datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lan"
+"g/Object;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConst"
+"raintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWi"
+"thFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbas"
+"eTypeq\u0000~\u0000BL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/Concre"
+"teType;L\u0000\tfacetNameq\u0000~\u0000\u001bxq\u0000~\u0000\u001appq\u0000~\u0000/\u0000\u0001sr\u0000*com.sun.msv.datat"
+"ype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Fppq\u0000~\u0000/\u0000\u0000sr\u0000!com.s"
+"un.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Aq\u0000~\u0000\u001et\u0000\u0004longq\u0000~"
+"\u0000/sq\u0000~\u0000Eppq\u0000~\u0000/\u0000\u0001sq\u0000~\u0000Lppq\u0000~\u0000/\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd"
+".IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Aq\u0000~\u0000\u001et\u0000\u0007integerq\u0000~\u0000/sr\u0000,com.sun"
+".msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;"
+"com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFacetT"
+"\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000Ippq\u0000~\u0000/\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.Number"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0018q\u0000~\u0000\u001et\u0000\u0007decimalq\u0000~\u0000/q\u0000~\u0000Zt\u0000\u000efractionDig"
+"its\u0000\u0000\u0000\u0000q\u0000~\u0000Tt\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005v"
+"aluexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000Tt\u0000\fmaxIncl"
+"usivesq\u0000~\u0000^\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000Oq\u0000~\u0000]sr\u0000\u0011java.lang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000"
+"\u0001I\u0000\u0005valuexq\u0000~\u0000_\u0080\u0000\u0000\u0000q\u0000~\u0000Oq\u0000~\u0000asq\u0000~\u0000c\u007f\u00ff\u00ff\u00ffq\u0000~\u0000$sq\u0000~\u0000%q\u0000~\u0000Dq\u0000~\u0000\u001e"
+"sq\u0000~\u0000\nppsq\u0000~\u0000(q\u0000~\u0000\u0011pq\u0000~\u0000*q\u0000~\u00003q\u0000~\u00007sq\u0000~\u00001t\u0000\u000fContactTypeCodeq"
+"\u0000~\u0000;q\u0000~\u00007sq\u0000~\u0000\nppsq\u0000~\u0000\fq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0016sq\u0000~\u0000\nppsq\u0000~\u0000(q\u0000~"
+"\u0000\u0011pq\u0000~\u0000*q\u0000~\u00003q\u0000~\u00007sq\u0000~\u00001t\u0000\u000eNumberOfCopiesq\u0000~\u0000;q\u0000~\u00007sq\u0000~\u0000\npps"
+"q\u0000~\u0000\fq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0016sq\u0000~\u0000\nppsq\u0000~\u0000(q\u0000~\u0000\u0011pq\u0000~\u0000*q\u0000~\u00003q\u0000~\u00007"
+"sq\u0000~\u00001t\u0000\tRolodexIdq\u0000~\u0000;q\u0000~\u00007sq\u0000~\u0000\nppsq\u0000~\u0000\fq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000ppq\u0000~"
+"\u0000\u0016sq\u0000~\u0000\nppsq\u0000~\u0000(q\u0000~\u0000\u0011pq\u0000~\u0000*q\u0000~\u00003q\u0000~\u00007sq\u0000~\u00001t\u0000\u000bRolodexNameq\u0000~"
+"\u0000;q\u0000~\u00007sq\u0000~\u0000\nppsq\u0000~\u0000\fq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0016sq\u0000~\u0000\nppsq\u0000~\u0000(q\u0000~\u0000\u0011"
+"pq\u0000~\u0000*q\u0000~\u00003q\u0000~\u00007sq\u0000~\u00001t\u0000\u0013RolodexOrganizationq\u0000~\u0000;q\u0000~\u00007sr\u0000\"co"
+"m.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lco"
+"m/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.ms"
+"v.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstr"
+"eamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp"
+"\u0000\u0000\u0000\u0017\u0001pq\u0000~\u0000\u000bq\u0000~\u0000kq\u0000~\u0000rq\u0000~\u0000yq\u0000~\u0000\u0006q\u0000~\u0000\u0080q\u0000~\u0000\u0012q\u0000~\u0000mq\u0000~\u0000tq\u0000~\u0000{q\u0000~\u0000"
+"\u0082q\u0000~\u0000\u0005q\u0000~\u0000\tq\u0000~\u0000>q\u0000~\u0000<q\u0000~\u0000\'q\u0000~\u0000gq\u0000~\u0000nq\u0000~\u0000uq\u0000~\u0000|q\u0000~\u0000\u0083q\u0000~\u0000\u0007q\u0000~\u0000"
+"\bx"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends edu.mit.coeus.utils.xml.bean.award.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(edu.mit.coeus.utils.xml.bean.award.impl.runtime.UnmarshallingContext context) {
                super(context, "-------------------");
            }

            protected Unmarshaller(edu.mit.coeus.utils.xml.bean.award.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  12 :
                            if (("RolodexName" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 13;
                                return ;
                            }
                            state = 15;
                            continue outer;
                        case  15 :
                            if (("RolodexOrganization" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 16;
                                return ;
                            }
                            state = 18;
                            continue outer;
                        case  6 :
                            if (("NumberOfCopies" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 7;
                                return ;
                            }
                            state = 9;
                            continue outer;
                        case  18 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  3 :
                            if (("ContactTypeCode" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 4;
                                return ;
                            }
                            state = 6;
                            continue outer;
                        case  9 :
                            if (("RolodexId" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 10;
                                return ;
                            }
                            state = 12;
                            continue outer;
                        case  0 :
                            if (("ContactTypeDesc" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 1;
                                return ;
                            }
                            state = 3;
                            continue outer;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  12 :
                            state = 15;
                            continue outer;
                        case  11 :
                            if (("RolodexId" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 12;
                                return ;
                            }
                            break;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  18 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  2 :
                            if (("ContactTypeDesc" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  14 :
                            if (("RolodexName" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 15;
                                return ;
                            }
                            break;
                        case  8 :
                            if (("NumberOfCopies" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 9;
                                return ;
                            }
                            break;
                        case  5 :
                            if (("ContactTypeCode" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 6;
                                return ;
                            }
                            break;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  17 :
                            if (("RolodexOrganization" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 18;
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  12 :
                            state = 15;
                            continue outer;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  18 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  0 :
                            state = 3;
                            continue outer;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  12 :
                            state = 15;
                            continue outer;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  18 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  0 :
                            state = 3;
                            continue outer;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  10 :
                                eatText1(value);
                                state = 11;
                                return ;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  1 :
                                eatText2(value);
                                state = 2;
                                return ;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  13 :
                                eatText3(value);
                                state = 14;
                                return ;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  18 :
                                revertToParentFromText(value);
                                return ;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  7 :
                                eatText4(value);
                                state = 8;
                                return ;
                            case  16 :
                                eatText5(value);
                                state = 17;
                                return ;
                            case  4 :
                                eatText6(value);
                                state = 5;
                                return ;
                            case  0 :
                                state = 3;
                                continue outer;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _RolodexId = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText2(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _ContactTypeDesc = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText3(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _RolodexName = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText4(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _NumberOfCopies = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText5(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _RolodexOrganization = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText6(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _ContactTypeCode = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_ContactTypeCode = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

        }

    }

    public class Unmarshaller
        extends edu.mit.coeus.utils.xml.bean.award.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(edu.mit.coeus.utils.xml.bean.award.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------------------------------------");
        }

        protected Unmarshaller(edu.mit.coeus.utils.xml.bean.award.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  33 :
                        if (("OSPDistributionDesc" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 34;
                            return ;
                        }
                        state = 36;
                        continue outer;
                    case  37 :
                        if (("ContactTypeDesc" == ___local)&&("" == ___uri)) {
                            _getMailCopies().add(((edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl.class), 38, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ContactTypeCode" == ___local)&&("" == ___uri)) {
                            _getMailCopies().add(((edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl.class), 38, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NumberOfCopies" == ___local)&&("" == ___uri)) {
                            _getMailCopies().add(((edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl.class), 38, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RolodexId" == ___local)&&("" == ___uri)) {
                            _getMailCopies().add(((edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl.class), 38, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RolodexName" == ___local)&&("" == ___uri)) {
                            _getMailCopies().add(((edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl.class), 38, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RolodexOrganization" == ___local)&&("" == ___uri)) {
                            _getMailCopies().add(((edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl.class), 38, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getMailCopies().add(((edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl.class), 38, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  45 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  42 :
                        if (("DueDate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 43;
                            return ;
                        }
                        state = 45;
                        continue outer;
                    case  21 :
                        if (("FrequencyCodeDesc" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  27 :
                        if (("FrequencyBaseDesc" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  6 :
                        if (("ReportClassCode" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  0 :
                        if (("AwardNumber" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  24 :
                        if (("FrequencyBaseCode" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  15 :
                        if (("ReportCodeDesc" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  12 :
                        if (("ReportCode" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  36 :
                        if (("MailCopies" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 37;
                            return ;
                        }
                        state = 39;
                        continue outer;
                    case  3 :
                        if (("SequenceNumber" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  18 :
                        if (("FrequencyCode" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  9 :
                        if (("ReportClassDesc" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  30 :
                        if (("OSPDistributionCode" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        state = 33;
                        continue outer;
                    case  39 :
                        if (("MailCopies" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 37;
                            return ;
                        }
                        if (("DueDateModified" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 40;
                            return ;
                        }
                        state = 42;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  35 :
                        if (("OSPDistributionDesc" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 36;
                            return ;
                        }
                        break;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  37 :
                        _getMailCopies().add(((edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl) spawnChildFromLeaveElement((edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl.class), 38, ___uri, ___local, ___qname)));
                        return ;
                    case  45 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  20 :
                        if (("FrequencyCode" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  41 :
                        if (("DueDateModified" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 42;
                            return ;
                        }
                        break;
                    case  38 :
                        if (("MailCopies" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 39;
                            return ;
                        }
                        break;
                    case  32 :
                        if (("OSPDistributionCode" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("ReportClassDesc" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  5 :
                        if (("SequenceNumber" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  26 :
                        if (("FrequencyBaseCode" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  29 :
                        if (("FrequencyBaseDesc" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  14 :
                        if (("ReportCode" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  23 :
                        if (("FrequencyCodeDesc" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  17 :
                        if (("ReportCodeDesc" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  8 :
                        if (("ReportClassCode" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("AwardNumber" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  44 :
                        if (("DueDate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 45;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  33 :
                        state = 36;
                        continue outer;
                    case  37 :
                        _getMailCopies().add(((edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl) spawnChildFromEnterAttribute((edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl.class), 38, ___uri, ___local, ___qname)));
                        return ;
                    case  45 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  33 :
                        state = 36;
                        continue outer;
                    case  37 :
                        _getMailCopies().add(((edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl) spawnChildFromLeaveAttribute((edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl.class), 38, ___uri, ___local, ___qname)));
                        return ;
                    case  45 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  33 :
                            state = 36;
                            continue outer;
                        case  31 :
                            eatText1(value);
                            state = 32;
                            return ;
                        case  37 :
                            _getMailCopies().add(((edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl) spawnChildFromText((edu.mit.coeus.utils.xml.bean.award.impl.ReportTermDetailsTypeImpl.MailCopiesTypeImpl.class), 38, value)));
                            return ;
                        case  45 :
                            revertToParentFromText(value);
                            return ;
                        case  42 :
                            state = 45;
                            continue outer;
                        case  10 :
                            eatText2(value);
                            state = 11;
                            return ;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  22 :
                            eatText3(value);
                            state = 23;
                            return ;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  1 :
                            eatText4(value);
                            state = 2;
                            return ;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  34 :
                            eatText5(value);
                            state = 35;
                            return ;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  40 :
                            eatText6(value);
                            state = 41;
                            return ;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  28 :
                            eatText7(value);
                            state = 29;
                            return ;
                        case  36 :
                            state = 39;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  19 :
                            eatText8(value);
                            state = 20;
                            return ;
                        case  16 :
                            eatText9(value);
                            state = 17;
                            return ;
                        case  7 :
                            eatText10(value);
                            state = 8;
                            return ;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  43 :
                            eatText11(value);
                            state = 44;
                            return ;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  39 :
                            state = 42;
                            continue outer;
                        case  25 :
                            eatText12(value);
                            state = 26;
                            return ;
                        case  4 :
                            eatText13(value);
                            state = 5;
                            return ;
                        case  13 :
                            eatText14(value);
                            state = 14;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _OSPDistributionCode = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_OSPDistributionCode = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ReportClassDesc = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _FrequencyCodeDesc = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AwardNumber = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _OSPDistributionDesc = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DueDateModified = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _FrequencyBaseDesc = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _FrequencyCode = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_FrequencyCode = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ReportCodeDesc = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ReportClassCode = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ReportClassCode = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DueDate = javax.xml.bind.DatatypeConverter.parseDate(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _FrequencyBaseCode = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_FrequencyBaseCode = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText13(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SequenceNumber = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_SequenceNumber = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText14(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ReportCode = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ReportCode = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
