//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.3-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.07.12 at 01:32:44 EDT 
//


package edu.mit.coeus.utils.xml.bean.proposal.nih.impl;

public class BudgetPeriodTypeImpl implements edu.mit.coeus.utils.xml.bean.proposal.nih.BudgetPeriodType, com.sun.xml.bind.JAXBObject, edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.UnmarshallableObject, edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.XMLSerializable, edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.ValidatableObject
{

    protected java.math.BigDecimal _PeriodCostsTotal;
    protected java.math.BigDecimal _OtherDirectTotal;
    protected com.sun.xml.bind.util.ListImpl _EquipmentCosts;
    protected edu.mit.coeus.utils.xml.bean.proposal.nih.NSFOtherPersonnelType _NSFOtherPersonnel;
    protected com.sun.xml.bind.util.ListImpl _ParticipantPatientCosts;
    protected java.math.BigDecimal _SalariesWagesTotal;
    protected com.sun.xml.bind.util.ListImpl _NSFSeniorPersonnel;
    protected java.math.BigDecimal _ModularPeriodAmount;
    protected java.math.BigDecimal _NSFCostSharingAmount;
    protected java.math.BigDecimal _TravelTotal;
    protected com.sun.xml.bind.util.ListImpl _SalariesAndWages;
    protected java.math.BigDecimal _EquipmentTotal;
    protected java.math.BigDecimal _Fee;
    protected java.math.BigDecimal _ParticipantPatientTotal;
    protected com.sun.xml.bind.util.ListImpl _TravelCosts;
    protected java.util.Calendar _EndDate;
    protected java.math.BigInteger _NSFTotalSeniorPersonnel;
    protected java.math.BigDecimal _NSFTotalOtherDirectCosts;
    protected java.util.Calendar _StartDate;
    protected java.math.BigDecimal _PeriodDirectCostsTotal;
    protected com.sun.xml.bind.util.ListImpl _ProgramIncomeDetails;
    protected java.math.BigDecimal _ProgramIncome;
    protected java.math.BigDecimal _IndirectCostsTotal;
    protected com.sun.xml.bind.util.ListImpl _OtherDirectCosts;
    protected java.math.BigInteger _BudgetPeriodID;
    public final static java.lang.Class version = (edu.mit.coeus.utils.xml.bean.proposal.nih.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (edu.mit.coeus.utils.xml.bean.proposal.nih.BudgetPeriodType.class);
    }

    public java.math.BigDecimal getPeriodCostsTotal() {
        return _PeriodCostsTotal;
    }

    public void setPeriodCostsTotal(java.math.BigDecimal value) {
        _PeriodCostsTotal = value;
    }

    public java.math.BigDecimal getOtherDirectTotal() {
        return _OtherDirectTotal;
    }

    public void setOtherDirectTotal(java.math.BigDecimal value) {
        _OtherDirectTotal = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getEquipmentCosts() {
        if (_EquipmentCosts == null) {
            _EquipmentCosts = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _EquipmentCosts;
    }

    public java.util.List getEquipmentCosts() {
        return _getEquipmentCosts();
    }

    public edu.mit.coeus.utils.xml.bean.proposal.nih.NSFOtherPersonnelType getNSFOtherPersonnel() {
        return _NSFOtherPersonnel;
    }

    public void setNSFOtherPersonnel(edu.mit.coeus.utils.xml.bean.proposal.nih.NSFOtherPersonnelType value) {
        _NSFOtherPersonnel = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getParticipantPatientCosts() {
        if (_ParticipantPatientCosts == null) {
            _ParticipantPatientCosts = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _ParticipantPatientCosts;
    }

    public java.util.List getParticipantPatientCosts() {
        return _getParticipantPatientCosts();
    }

    public java.math.BigDecimal getSalariesWagesTotal() {
        return _SalariesWagesTotal;
    }

    public void setSalariesWagesTotal(java.math.BigDecimal value) {
        _SalariesWagesTotal = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getNSFSeniorPersonnel() {
        if (_NSFSeniorPersonnel == null) {
            _NSFSeniorPersonnel = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _NSFSeniorPersonnel;
    }

    public java.util.List getNSFSeniorPersonnel() {
        return _getNSFSeniorPersonnel();
    }

    public java.math.BigDecimal getModularPeriodAmount() {
        return _ModularPeriodAmount;
    }

    public void setModularPeriodAmount(java.math.BigDecimal value) {
        _ModularPeriodAmount = value;
    }

    public java.math.BigDecimal getNSFCostSharingAmount() {
        return _NSFCostSharingAmount;
    }

    public void setNSFCostSharingAmount(java.math.BigDecimal value) {
        _NSFCostSharingAmount = value;
    }

    public java.math.BigDecimal getTravelTotal() {
        return _TravelTotal;
    }

    public void setTravelTotal(java.math.BigDecimal value) {
        _TravelTotal = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getSalariesAndWages() {
        if (_SalariesAndWages == null) {
            _SalariesAndWages = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _SalariesAndWages;
    }

    public java.util.List getSalariesAndWages() {
        return _getSalariesAndWages();
    }

    public java.math.BigDecimal getEquipmentTotal() {
        return _EquipmentTotal;
    }

    public void setEquipmentTotal(java.math.BigDecimal value) {
        _EquipmentTotal = value;
    }

    public java.math.BigDecimal getFee() {
        return _Fee;
    }

    public void setFee(java.math.BigDecimal value) {
        _Fee = value;
    }

    public java.math.BigDecimal getParticipantPatientTotal() {
        return _ParticipantPatientTotal;
    }

    public void setParticipantPatientTotal(java.math.BigDecimal value) {
        _ParticipantPatientTotal = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getTravelCosts() {
        if (_TravelCosts == null) {
            _TravelCosts = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _TravelCosts;
    }

    public java.util.List getTravelCosts() {
        return _getTravelCosts();
    }

    public java.util.Calendar getEndDate() {
        return _EndDate;
    }

    public void setEndDate(java.util.Calendar value) {
        _EndDate = value;
    }

    public java.math.BigInteger getNSFTotalSeniorPersonnel() {
        return _NSFTotalSeniorPersonnel;
    }

    public void setNSFTotalSeniorPersonnel(java.math.BigInteger value) {
        _NSFTotalSeniorPersonnel = value;
    }

    public java.math.BigDecimal getNSFTotalOtherDirectCosts() {
        return _NSFTotalOtherDirectCosts;
    }

    public void setNSFTotalOtherDirectCosts(java.math.BigDecimal value) {
        _NSFTotalOtherDirectCosts = value;
    }

    public java.util.Calendar getStartDate() {
        return _StartDate;
    }

    public void setStartDate(java.util.Calendar value) {
        _StartDate = value;
    }

    public java.math.BigDecimal getPeriodDirectCostsTotal() {
        return _PeriodDirectCostsTotal;
    }

    public void setPeriodDirectCostsTotal(java.math.BigDecimal value) {
        _PeriodDirectCostsTotal = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getProgramIncomeDetails() {
        if (_ProgramIncomeDetails == null) {
            _ProgramIncomeDetails = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _ProgramIncomeDetails;
    }

    public java.util.List getProgramIncomeDetails() {
        return _getProgramIncomeDetails();
    }

    public java.math.BigDecimal getProgramIncome() {
        return _ProgramIncome;
    }

    public void setProgramIncome(java.math.BigDecimal value) {
        _ProgramIncome = value;
    }

    public java.math.BigDecimal getIndirectCostsTotal() {
        return _IndirectCostsTotal;
    }

    public void setIndirectCostsTotal(java.math.BigDecimal value) {
        _IndirectCostsTotal = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getOtherDirectCosts() {
        if (_OtherDirectCosts == null) {
            _OtherDirectCosts = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _OtherDirectCosts;
    }

    public java.util.List getOtherDirectCosts() {
        return _getOtherDirectCosts();
    }

    public java.math.BigInteger getBudgetPeriodID() {
        return _BudgetPeriodID;
    }

    public void setBudgetPeriodID(java.math.BigInteger value) {
        _BudgetPeriodID = value;
    }

    public edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.UnmarshallingEventHandler createUnmarshaller(edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.UnmarshallingContext context) {
        return new edu.mit.coeus.utils.xml.bean.proposal.nih.impl.BudgetPeriodTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx3 = 0;
        final int len3 = ((_EquipmentCosts == null)? 0 :_EquipmentCosts.size());
        int idx5 = 0;
        final int len5 = ((_ParticipantPatientCosts == null)? 0 :_ParticipantPatientCosts.size());
        int idx7 = 0;
        final int len7 = ((_NSFSeniorPersonnel == null)? 0 :_NSFSeniorPersonnel.size());
        int idx11 = 0;
        final int len11 = ((_SalariesAndWages == null)? 0 :_SalariesAndWages.size());
        int idx15 = 0;
        final int len15 = ((_TravelCosts == null)? 0 :_TravelCosts.size());
        int idx21 = 0;
        final int len21 = ((_ProgramIncomeDetails == null)? 0 :_ProgramIncomeDetails.size());
        int idx24 = 0;
        final int len24 = ((_OtherDirectCosts == null)? 0 :_OtherDirectCosts.size());
        context.startElement("", "BudgetPeriodID");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _BudgetPeriodID)), "BudgetPeriodID");
        } catch (java.lang.Exception e) {
            edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "StartDate");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printDate(((java.util.Calendar) _StartDate)), "StartDate");
        } catch (java.lang.Exception e) {
            edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "EndDate");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printDate(((java.util.Calendar) _EndDate)), "EndDate");
        } catch (java.lang.Exception e) {
            edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "ProgramIncome");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _ProgramIncome)), "ProgramIncome");
        } catch (java.lang.Exception e) {
            edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "Fee");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _Fee)), "Fee");
        } catch (java.lang.Exception e) {
            edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        while (idx11 != len11) {
            context.startElement("", "SalariesAndWages");
            int idx_10 = idx11;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SalariesAndWages.get(idx_10 ++)), "SalariesAndWages");
            context.endNamespaceDecls();
            int idx_11 = idx11;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SalariesAndWages.get(idx_11 ++)), "SalariesAndWages");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _SalariesAndWages.get(idx11 ++)), "SalariesAndWages");
            context.endElement();
        }
        while (idx3 != len3) {
            if (_EquipmentCosts.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _EquipmentCosts.get(idx3 ++)), "EquipmentCosts");
            } else {
                context.startElement("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace", "EquipmentCosts");
                int idx_12 = idx3;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _EquipmentCosts.get(idx_12 ++)), "EquipmentCosts");
                context.endNamespaceDecls();
                int idx_13 = idx3;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _EquipmentCosts.get(idx_13 ++)), "EquipmentCosts");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _EquipmentCosts.get(idx3 ++)), "EquipmentCosts");
                context.endElement();
            }
        }
        while (idx15 != len15) {
            if (_TravelCosts.get(idx15) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _TravelCosts.get(idx15 ++)), "TravelCosts");
            } else {
                context.startElement("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace", "TravelCosts");
                int idx_14 = idx15;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _TravelCosts.get(idx_14 ++)), "TravelCosts");
                context.endNamespaceDecls();
                int idx_15 = idx15;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _TravelCosts.get(idx_15 ++)), "TravelCosts");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _TravelCosts.get(idx15 ++)), "TravelCosts");
                context.endElement();
            }
        }
        while (idx5 != len5) {
            if (_ParticipantPatientCosts.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _ParticipantPatientCosts.get(idx5 ++)), "ParticipantPatientCosts");
            } else {
                context.startElement("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace", "ParticipantPatientCosts");
                int idx_16 = idx5;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ParticipantPatientCosts.get(idx_16 ++)), "ParticipantPatientCosts");
                context.endNamespaceDecls();
                int idx_17 = idx5;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ParticipantPatientCosts.get(idx_17 ++)), "ParticipantPatientCosts");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _ParticipantPatientCosts.get(idx5 ++)), "ParticipantPatientCosts");
                context.endElement();
            }
        }
        while (idx24 != len24) {
            if (_OtherDirectCosts.get(idx24) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _OtherDirectCosts.get(idx24 ++)), "OtherDirectCosts");
            } else {
                context.startElement("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace", "OtherDirectCosts");
                int idx_18 = idx24;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _OtherDirectCosts.get(idx_18 ++)), "OtherDirectCosts");
                context.endNamespaceDecls();
                int idx_19 = idx24;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _OtherDirectCosts.get(idx_19 ++)), "OtherDirectCosts");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _OtherDirectCosts.get(idx24 ++)), "OtherDirectCosts");
                context.endElement();
            }
        }
        if (_SalariesWagesTotal!= null) {
            context.startElement("", "SalariesWagesTotal");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _SalariesWagesTotal)), "SalariesWagesTotal");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_EquipmentTotal!= null) {
            context.startElement("", "EquipmentTotal");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _EquipmentTotal)), "EquipmentTotal");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_TravelTotal!= null) {
            context.startElement("", "TravelTotal");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _TravelTotal)), "TravelTotal");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ParticipantPatientTotal!= null) {
            context.startElement("", "ParticipantPatientTotal");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _ParticipantPatientTotal)), "ParticipantPatientTotal");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_OtherDirectTotal!= null) {
            context.startElement("", "OtherDirectTotal");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _OtherDirectTotal)), "OtherDirectTotal");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PeriodDirectCostsTotal!= null) {
            context.startElement("", "PeriodDirectCostsTotal");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _PeriodDirectCostsTotal)), "PeriodDirectCostsTotal");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        context.startElement("", "IndirectCostsTotal");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _IndirectCostsTotal)), "IndirectCostsTotal");
        } catch (java.lang.Exception e) {
            edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (_PeriodCostsTotal!= null) {
            context.startElement("", "PeriodCostsTotal");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _PeriodCostsTotal)), "PeriodCostsTotal");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx21 != len21) {
            context.startElement("", "ProgramIncomeDetails");
            int idx_36 = idx21;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ProgramIncomeDetails.get(idx_36 ++)), "ProgramIncomeDetails");
            context.endNamespaceDecls();
            int idx_37 = idx21;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ProgramIncomeDetails.get(idx_37 ++)), "ProgramIncomeDetails");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ProgramIncomeDetails.get(idx21 ++)), "ProgramIncomeDetails");
            context.endElement();
        }
        while (idx7 != len7) {
            context.startElement("", "NSFSeniorPersonnel");
            int idx_38 = idx7;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _NSFSeniorPersonnel.get(idx_38 ++)), "NSFSeniorPersonnel");
            context.endNamespaceDecls();
            int idx_39 = idx7;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _NSFSeniorPersonnel.get(idx_39 ++)), "NSFSeniorPersonnel");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _NSFSeniorPersonnel.get(idx7 ++)), "NSFSeniorPersonnel");
            context.endElement();
        }
        if (_ModularPeriodAmount!= null) {
            context.startElement("", "ModularPeriodAmount");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _ModularPeriodAmount)), "ModularPeriodAmount");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_NSFTotalSeniorPersonnel!= null) {
            context.startElement("", "NSFTotalSeniorPersonnel");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _NSFTotalSeniorPersonnel)), "NSFTotalSeniorPersonnel");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_NSFOtherPersonnel!= null) {
            context.startElement("", "NSFOtherPersonnel");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _NSFOtherPersonnel), "NSFOtherPersonnel");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _NSFOtherPersonnel), "NSFOtherPersonnel");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _NSFOtherPersonnel), "NSFOtherPersonnel");
            context.endElement();
        }
        if (_NSFTotalOtherDirectCosts!= null) {
            context.startElement("", "NSFTotalOtherDirectCosts");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _NSFTotalOtherDirectCosts)), "NSFTotalOtherDirectCosts");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_NSFCostSharingAmount!= null) {
            context.startElement("", "NSFCostSharingAmount");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _NSFCostSharingAmount)), "NSFCostSharingAmount");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx3 = 0;
        final int len3 = ((_EquipmentCosts == null)? 0 :_EquipmentCosts.size());
        int idx5 = 0;
        final int len5 = ((_ParticipantPatientCosts == null)? 0 :_ParticipantPatientCosts.size());
        int idx7 = 0;
        final int len7 = ((_NSFSeniorPersonnel == null)? 0 :_NSFSeniorPersonnel.size());
        int idx11 = 0;
        final int len11 = ((_SalariesAndWages == null)? 0 :_SalariesAndWages.size());
        int idx15 = 0;
        final int len15 = ((_TravelCosts == null)? 0 :_TravelCosts.size());
        int idx21 = 0;
        final int len21 = ((_ProgramIncomeDetails == null)? 0 :_ProgramIncomeDetails.size());
        int idx24 = 0;
        final int len24 = ((_OtherDirectCosts == null)? 0 :_OtherDirectCosts.size());
        while (idx11 != len11) {
            idx11 += 1;
        }
        while (idx3 != len3) {
            if (_EquipmentCosts.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _EquipmentCosts.get(idx3 ++)), "EquipmentCosts");
            } else {
                idx3 += 1;
            }
        }
        while (idx15 != len15) {
            if (_TravelCosts.get(idx15) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _TravelCosts.get(idx15 ++)), "TravelCosts");
            } else {
                idx15 += 1;
            }
        }
        while (idx5 != len5) {
            if (_ParticipantPatientCosts.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ParticipantPatientCosts.get(idx5 ++)), "ParticipantPatientCosts");
            } else {
                idx5 += 1;
            }
        }
        while (idx24 != len24) {
            if (_OtherDirectCosts.get(idx24) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _OtherDirectCosts.get(idx24 ++)), "OtherDirectCosts");
            } else {
                idx24 += 1;
            }
        }
        while (idx21 != len21) {
            idx21 += 1;
        }
        while (idx7 != len7) {
            idx7 += 1;
        }
    }

    public void serializeURIs(edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx3 = 0;
        final int len3 = ((_EquipmentCosts == null)? 0 :_EquipmentCosts.size());
        int idx5 = 0;
        final int len5 = ((_ParticipantPatientCosts == null)? 0 :_ParticipantPatientCosts.size());
        int idx7 = 0;
        final int len7 = ((_NSFSeniorPersonnel == null)? 0 :_NSFSeniorPersonnel.size());
        int idx11 = 0;
        final int len11 = ((_SalariesAndWages == null)? 0 :_SalariesAndWages.size());
        int idx15 = 0;
        final int len15 = ((_TravelCosts == null)? 0 :_TravelCosts.size());
        int idx21 = 0;
        final int len21 = ((_ProgramIncomeDetails == null)? 0 :_ProgramIncomeDetails.size());
        int idx24 = 0;
        final int len24 = ((_OtherDirectCosts == null)? 0 :_OtherDirectCosts.size());
        while (idx11 != len11) {
            idx11 += 1;
        }
        while (idx3 != len3) {
            if (_EquipmentCosts.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _EquipmentCosts.get(idx3 ++)), "EquipmentCosts");
            } else {
                idx3 += 1;
            }
        }
        while (idx15 != len15) {
            if (_TravelCosts.get(idx15) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _TravelCosts.get(idx15 ++)), "TravelCosts");
            } else {
                idx15 += 1;
            }
        }
        while (idx5 != len5) {
            if (_ParticipantPatientCosts.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ParticipantPatientCosts.get(idx5 ++)), "ParticipantPatientCosts");
            } else {
                idx5 += 1;
            }
        }
        while (idx24 != len24) {
            if (_OtherDirectCosts.get(idx24) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _OtherDirectCosts.get(idx24 ++)), "OtherDirectCosts");
            } else {
                idx24 += 1;
            }
        }
        while (idx21 != len21) {
            idx21 += 1;
        }
        while (idx7 != len7) {
            idx7 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (edu.mit.coeus.utils.xml.bean.proposal.nih.BudgetPeriodType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv.grammar.trex.Element"
+"Pattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameCl"
+"ass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUn"
+"declaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bc"
+"om.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/da"
+"tatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/St"
+"ringPair;xq\u0000~\u0000\u0003ppsr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&"
+"6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeIm"
+"pl;xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com."
+"sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUr"
+"it\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000,L\u0000\nwhiteSpacet\u0000.Lcom/s"
+"un/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.o"
+"rg/2001/XMLSchemat\u0000\u0007integersr\u00005com.sun.msv.datatype.xsd.Whit"
+"eSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype."
+"xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com.sun.msv.datatype"
+".xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.d"
+"atatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000"
+"*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisF"
+"acetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000(L\u0000\fconcreteTyp"
+"et\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000,"
+"xq\u0000~\u0000+ppq\u0000~\u00003\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000)q\u0000~\u0000/t\u0000\u0007decimalq\u0000~\u00003q\u0000~\u0000:t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000sr\u0000"
+"0com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.su"
+"n.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000,L\u0000\fnamespac"
+"eURIq\u0000~\u0000,xpq\u0000~\u00000q\u0000~\u0000/sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002"
+"L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u001exq\u0000~\u0000\u0003q\u0000~\u0000@psq\u0000~\u0000\"ppsr\u0000\"com.sun."
+"msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000)q\u0000~\u0000/t\u0000\u0005QNameq\u0000~\u0000"
+"3q\u0000~\u0000>sq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000/sr\u0000#com.sun.msv.grammar.SimpleNameClas"
+"s\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000,L\u0000\fnamespaceURIq\u0000~\u0000,xr\u0000\u001dcom.sun"
+".msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.o"
+"rg/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expression"
+"$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000?\u0001q\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u000eBudg"
+"etPeriodIDt\u0000\u0000sq\u0000~\u0000\u001dpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\"ppsr\u0000!com.sun.msv.dataty"
+"pe.xsd.DateType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateT"
+"imeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000)q\u0000~\u0000/t\u0000\u0004dateq\u0000~\u00003q\u0000~\u0000>sq\u0000~\u0000Aq\u0000~\u0000"
+"]q\u0000~\u0000/sq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000Gq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\tStartDateq"
+"\u0000~\u0000Vsq\u0000~\u0000\u001dpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Ysq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000Gq\u0000~\u0000Nq\u0000~\u0000"
+"Rsq\u0000~\u0000Lt\u0000\u0007EndDateq\u0000~\u0000Vsq\u0000~\u0000\u001dpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\"ppsr\u0000\'com.sun.m"
+"sv.datatype.xsd.FinalComponent\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\nfinalValuexr\u0000\u001eco"
+"m.sun.msv.datatype.xsd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTypeq\u0000~\u0000(xq\u0000~\u0000"
+"+t\u00009http://era.nih.gov/Projectmgmt/SBIR/CGAP/common.namespac"
+"et\u0000\fCurrencyTypeq\u0000~\u00003q\u0000~\u0000:\u0000\u0000\u0000\u0000q\u0000~\u0000>sq\u0000~\u0000Aq\u0000~\u0000;q\u0000~\u0000osq\u0000~\u0000Cpps"
+"q\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000Gq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\rProgramIncomeq\u0000~\u0000Vsq\u0000~\u0000\u001dp"
+"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000ksq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000Gq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u0003F"
+"eeq\u0000~\u0000Vsq\u0000~\u0000Cppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~"
+"\u0000\u0003q\u0000~\u0000@psq\u0000~\u0000\u001dq\u0000~\u0000@p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001dpp\u0000sq\u0000~\u0000Cppsq\u0000~\u0000}q\u0000~\u0000@psq"
+"\u0000~\u0000Eq\u0000~\u0000@psr\u00002com.sun.msv.grammar.Expression$AnyStringExpres"
+"sion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000Sq\u0000~\u0000\u0087sr\u0000 com.sun.msv.grammar.AnyNa"
+"meClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Mq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000>edu.mit.coeus.utils.xm"
+"l.bean.proposal.nih.SalariesAndWagesTypet\u0000+http://java.sun.c"
+"om/jaxb/xjc/dummy-elementssq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000Gq\u0000~\u0000Nq\u0000~\u0000"
+"Rsq\u0000~\u0000Lt\u0000\u0010SalariesAndWagesq\u0000~\u0000Vq\u0000~\u0000Rsq\u0000~\u0000Cppsq\u0000~\u0000}q\u0000~\u0000@psq\u0000~"
+"\u0000Cq\u0000~\u0000@psq\u0000~\u0000\u001dq\u0000~\u0000@p\u0000sq\u0000~\u0000Cppsq\u0000~\u0000}q\u0000~\u0000@psq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000\u0087q\u0000"
+"~\u0000\u0089q\u0000~\u0000Rsq\u0000~\u0000Lt\u00008edu.mit.coeus.utils.xml.bean.proposal.rar.E"
+"quipmentCostsq\u0000~\u0000\u008csq\u0000~\u0000\u001dq\u0000~\u0000@p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001dpp\u0000sq\u0000~\u0000Cppsq\u0000~"
+"\u0000}q\u0000~\u0000@psq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000\u0087q\u0000~\u0000\u0089q\u0000~\u0000Rsq\u0000~\u0000Lt\u0000<edu.mit.coeus.ut"
+"ils.xml.bean.proposal.rar.EquipmentCostsTypeq\u0000~\u0000\u008csq\u0000~\u0000Cppsq\u0000"
+"~\u0000Eq\u0000~\u0000@pq\u0000~\u0000Gq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u000eEquipmentCostst\u0000Ehttp://era"
+".nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespaceq"
+"\u0000~\u0000Rsq\u0000~\u0000Cppsq\u0000~\u0000\u0000q\u0000~\u0000@psq\u0000~\u0000Cq\u0000~\u0000@psq\u0000~\u0000\u001dq\u0000~\u0000@p\u0000sq\u0000~\u0000Cppsq\u0000"
+"~\u0000}q\u0000~\u0000@psq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000\u0087q\u0000~\u0000\u0089q\u0000~\u0000Rsq\u0000~\u0000Lt\u00005edu.mit.coeus.u"
+"tils.xml.bean.proposal.rar.TravelCostsq\u0000~\u0000\u008csq\u0000~\u0000\u001dq\u0000~\u0000@p\u0000sq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u001dpp\u0000sq\u0000~\u0000Cppsq\u0000~\u0000}q\u0000~\u0000@psq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000\u0087q\u0000~\u0000\u0089q\u0000~\u0000R"
+"sq\u0000~\u0000Lt\u00009edu.mit.coeus.utils.xml.bean.proposal.rar.TravelCos"
+"tsTypeq\u0000~\u0000\u008csq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000Gq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u000bTrave"
+"lCostsq\u0000~\u0000\u00a6sq\u0000~\u0000Cppsq\u0000~\u0000Cq\u0000~\u0000@psq\u0000~\u0000\u001dq\u0000~\u0000@p\u0000sq\u0000~\u0000Cppsq\u0000~\u0000}q\u0000"
+"~\u0000@psq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000\u0087q\u0000~\u0000\u0089q\u0000~\u0000Rsq\u0000~\u0000Lq\u0000~\u0000\u00afq\u0000~\u0000\u008csq\u0000~\u0000\u001dq\u0000~\u0000@p\u0000"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001dpp\u0000sq\u0000~\u0000Cppsq\u0000~\u0000}q\u0000~\u0000@psq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000\u0087q\u0000~\u0000\u0089q"
+"\u0000~\u0000Rsq\u0000~\u0000Lq\u0000~\u0000\u00b7q\u0000~\u0000\u008csq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000Gq\u0000~\u0000Nq\u0000~\u0000Rq\u0000~\u0000\u00ba"
+"q\u0000~\u0000Rq\u0000~\u0000Rsq\u0000~\u0000Cppsq\u0000~\u0000}q\u0000~\u0000@psq\u0000~\u0000Cq\u0000~\u0000@psq\u0000~\u0000\u001dq\u0000~\u0000@p\u0000sq\u0000~\u0000"
+"Cppsq\u0000~\u0000}q\u0000~\u0000@psq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000\u0087q\u0000~\u0000\u0089q\u0000~\u0000Rsq\u0000~\u0000Lt\u0000Aedu.mit.c"
+"oeus.utils.xml.bean.proposal.rar.ParticipantPatientCostsq\u0000~\u0000"
+"\u008csq\u0000~\u0000\u001dq\u0000~\u0000@p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001dpp\u0000sq\u0000~\u0000Cppsq\u0000~\u0000}q\u0000~\u0000@psq\u0000~\u0000Eq\u0000~"
+"\u0000@pq\u0000~\u0000\u0087q\u0000~\u0000\u0089q\u0000~\u0000Rsq\u0000~\u0000Lt\u0000Eedu.mit.coeus.utils.xml.bean.prop"
+"osal.rar.ParticipantPatientCostsTypeq\u0000~\u0000\u008csq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000@"
+"pq\u0000~\u0000Gq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u0017ParticipantPatientCostsq\u0000~\u0000\u00a6q\u0000~\u0000Rsq"
+"\u0000~\u0000Cppsq\u0000~\u0000}q\u0000~\u0000@psq\u0000~\u0000Cq\u0000~\u0000@psq\u0000~\u0000\u001dq\u0000~\u0000@p\u0000sq\u0000~\u0000Cppsq\u0000~\u0000}q\u0000~"
+"\u0000@psq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000\u0087q\u0000~\u0000\u0089q\u0000~\u0000Rsq\u0000~\u0000Lt\u0000:edu.mit.coeus.utils.x"
+"ml.bean.proposal.rar.OtherDirectCostsq\u0000~\u0000\u008csq\u0000~\u0000\u001dq\u0000~\u0000@p\u0000sq\u0000~\u0000"
+"\u0000ppsq\u0000~\u0000\u001dpp\u0000sq\u0000~\u0000Cppsq\u0000~\u0000}q\u0000~\u0000@psq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000\u0087q\u0000~\u0000\u0089q\u0000~\u0000Rs"
+"q\u0000~\u0000Lt\u0000>edu.mit.coeus.utils.xml.bean.proposal.rar.OtherDirec"
+"tCostsTypeq\u0000~\u0000\u008csq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000Gq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u0010O"
+"therDirectCostsq\u0000~\u0000\u00a6q\u0000~\u0000Rsq\u0000~\u0000Cppsq\u0000~\u0000\u001dq\u0000~\u0000@p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000ks"
+"q\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000Gq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u0012SalariesWagesTota"
+"lq\u0000~\u0000Vq\u0000~\u0000Rsq\u0000~\u0000Cppsq\u0000~\u0000\u001dq\u0000~\u0000@p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000ksq\u0000~\u0000Cppsq\u0000~\u0000Eq"
+"\u0000~\u0000@pq\u0000~\u0000Gq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u000eEquipmentTotalq\u0000~\u0000Vq\u0000~\u0000Rsq\u0000~\u0000Cp"
+"psq\u0000~\u0000\u001dq\u0000~\u0000@p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000ksq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000Gq\u0000~\u0000Nq\u0000~"
+"\u0000Rsq\u0000~\u0000Lt\u0000\u000bTravelTotalq\u0000~\u0000Vq\u0000~\u0000Rsq\u0000~\u0000Cppsq\u0000~\u0000\u001dq\u0000~\u0000@p\u0000sq\u0000~\u0000\u0000p"
+"pq\u0000~\u0000ksq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000Gq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u0017Participan"
+"tPatientTotalq\u0000~\u0000Vq\u0000~\u0000Rsq\u0000~\u0000Cppsq\u0000~\u0000\u001dq\u0000~\u0000@p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000ksq\u0000"
+"~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000Gq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u0010OtherDirectTotalq\u0000~"
+"\u0000Vq\u0000~\u0000Rsq\u0000~\u0000Cppsq\u0000~\u0000\u001dq\u0000~\u0000@p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000ksq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000@"
+"pq\u0000~\u0000Gq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u0016PeriodDirectCostsTotalq\u0000~\u0000Vq\u0000~\u0000Rsq\u0000"
+"~\u0000\u001dpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000ksq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000Gq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000L"
+"t\u0000\u0012IndirectCostsTotalq\u0000~\u0000Vsq\u0000~\u0000Cppsq\u0000~\u0000\u001dq\u0000~\u0000@p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000k"
+"sq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000Gq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u0010PeriodCostsTotal"
+"q\u0000~\u0000Vq\u0000~\u0000Rsq\u0000~\u0000Cppsq\u0000~\u0000}q\u0000~\u0000@psq\u0000~\u0000\u001dq\u0000~\u0000@p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001dpp\u0000"
+"sq\u0000~\u0000Cppsq\u0000~\u0000}q\u0000~\u0000@psq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000\u0087q\u0000~\u0000\u0089q\u0000~\u0000Rsq\u0000~\u0000Lt\u0000Sedu."
+"mit.coeus.utils.xml.bean.proposal.nih.BudgetPeriodType.Progr"
+"amIncomeDetailsTypeq\u0000~\u0000\u008csq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000Gq\u0000~\u0000Nq\u0000~\u0000Rs"
+"q\u0000~\u0000Lt\u0000\u0014ProgramIncomeDetailsq\u0000~\u0000Vq\u0000~\u0000Rsq\u0000~\u0000Cppsq\u0000~\u0000}q\u0000~\u0000@psq"
+"\u0000~\u0000\u001dq\u0000~\u0000@p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001dpp\u0000sq\u0000~\u0000Cppsq\u0000~\u0000}q\u0000~\u0000@psq\u0000~\u0000Eq\u0000~\u0000@p"
+"q\u0000~\u0000\u0087q\u0000~\u0000\u0089q\u0000~\u0000Rsq\u0000~\u0000Lt\u0000@edu.mit.coeus.utils.xml.bean.proposa"
+"l.nih.NSFSeniorPersonnelTypeq\u0000~\u0000\u008csq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000Gq\u0000"
+"~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u0012NSFSeniorPersonnelq\u0000~\u0000Vq\u0000~\u0000Rsq\u0000~\u0000Cppsq\u0000~\u0000\u001dq"
+"\u0000~\u0000@p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000ksq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000Gq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000L"
+"t\u0000\u0013ModularPeriodAmountq\u0000~\u0000Vq\u0000~\u0000Rsq\u0000~\u0000Cppsq\u0000~\u0000\u001dq\u0000~\u0000@p\u0000sq\u0000~\u0000\u0000p"
+"pq\u0000~\u0000%sq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000Gq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u0017NSFTotalSe"
+"niorPersonnelq\u0000~\u0000Vq\u0000~\u0000Rsq\u0000~\u0000Cppsq\u0000~\u0000\u001dq\u0000~\u0000@p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001dpp"
+"\u0000sq\u0000~\u0000Cppsq\u0000~\u0000}q\u0000~\u0000@psq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000\u0087q\u0000~\u0000\u0089q\u0000~\u0000Rsq\u0000~\u0000Lt\u0000?edu"
+".mit.coeus.utils.xml.bean.proposal.nih.NSFOtherPersonnelType"
+"q\u0000~\u0000\u008csq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000Gq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u0011NSFOtherPer"
+"sonnelq\u0000~\u0000Vq\u0000~\u0000Rsq\u0000~\u0000Cppsq\u0000~\u0000\u001dq\u0000~\u0000@p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000ksq\u0000~\u0000Cppsq"
+"\u0000~\u0000Eq\u0000~\u0000@pq\u0000~\u0000Gq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u0018NSFTotalOtherDirectCostsq\u0000"
+"~\u0000Vq\u0000~\u0000Rsq\u0000~\u0000Cppsq\u0000~\u0000\u001dq\u0000~\u0000@p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000ksq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000"
+"@pq\u0000~\u0000Gq\u0000~\u0000Nq\u0000~\u0000Rsq\u0000~\u0000Lt\u0000\u0014NSFCostSharingAmountq\u0000~\u0000Vq\u0000~\u0000Rsr\u0000\""
+"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/L"
+"com/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun."
+"msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rs"
+"treamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;"
+"xp\u0000\u0000\u0000\u0088\u0001pq\u0000~\u0000\fq\u0000~\u0000\u0010q\u0000~\u0001Pq\u0000~\u0000\tq\u0000~\u0000\u001aq\u0000~\u0000\u0018q\u0000~\u0000\u00a8q\u0000~\u0000\u0013q\u0000~\u0000\nq\u0000~\u0000\u001cq\u0000"
+"~\u0000\u00bcq\u0000~\u0000Xq\u0000~\u0000dq\u0000~\u0000\u0017q\u0000~\u0000\u000fq\u0000~\u0000!q\u0000~\u0000\u0015q\u0000~\u0001Rq\u0000~\u0000\u0012q\u0000~\u0001Wq\u0000~\u0000\u00e3q\u0000~\u0000\u0093q\u0000"
+"~\u0000\u00a9q\u0000~\u0000\u00bdq\u0000~\u0000\u00ceq\u0000~\u0001>q\u0000~\u00010q\u0000~\u0001<q\u0000~\u0001.q\u0000~\u0000\u007fq\u0000~\u0000\u00ebq\u0000~\u0000\u0081q\u0000~\u0000\u009bq\u0000~\u0000\u00b1q\u0000"
+"~\u0000\u00c4q\u0000~\u0000\u00d6q\u0000~\u0001Yq\u0000~\u0000\u00eeq\u0000~\u0000\u00e6q\u0000~\u0000\u0084q\u0000~\u0000\u0096q\u0000~\u0000\u009eq\u0000~\u0000\u00acq\u0000~\u0000\u00b4q\u0000~\u0000\u00c0q\u0000~\u0000\u00c7q\u0000"
+"~\u0000\u00d1q\u0000~\u0000\u00d9q\u0000~\u0001Aq\u0000~\u00013q\u0000~\u0000\u0014q\u0000~\u0001\\q\u0000~\u0000\bq\u0000~\u0000\u0011q\u0000~\u0000\u00e1q\u0000~\u0000\u00ccq\u0000~\u0000\u0091q\u0000~\u0000\u000bq\u0000"
+"~\u0000\u0019q\u0000~\u0000\u00e2q\u0000~\u0000\u0092q\u0000~\u0000\u00cdq\u0000~\u0000\u0005q\u0000~\u0000\rq\u0000~\u0001(q\u0000~\u0001!q\u0000~\u0001\u001bq\u0000~\u0001\u0014q\u0000~\u0001\rq\u0000~\u0001\u0006q\u0000"
+"~\u0000\u00ffq\u0000~\u0000\u00f8q\u0000~\u0000jq\u0000~\u0000wq\u0000~\u0001Kq\u0000~\u0001fq\u0000~\u0001mq\u0000~\u0001@q\u0000~\u00012q\u0000~\u0000\u00edq\u0000~\u0000\u00e5q\u0000~\u0000\u0083q\u0000"
+"~\u0000\u0095q\u0000~\u0000\u009dq\u0000~\u0000\u001bq\u0000~\u0000\u00abq\u0000~\u0000\u00b3q\u0000~\u0000\u00bfq\u0000~\u0000\u00c6q\u0000~\u0000\u00d0q\u0000~\u0000\u00d8q\u0000~\u0000\u0016q\u0000~\u0001[q\u0000~\u0000\u000eq\u0000"
+"~\u0001Eq\u0000~\u00017q\u0000~\u0001)q\u0000~\u0001\"q\u0000~\u0001\u001cq\u0000~\u0001\u0015q\u0000~\u0001\u000eq\u0000~\u0001&q\u0000~\u0001\u0019q\u0000~\u0001\u0012q\u0000~\u0001\u000bq\u0000~\u0001\u0004q\u0000"
+"~\u0000\u00fdq\u0000~\u0000\u00f6q\u0000~\u0001\u0007q\u0000~\u0001\u0000q\u0000~\u0000\u00f9q\u0000~\u0000\u00f2q\u0000~\u0000Dq\u0000~\u0000_q\u0000~\u0000eq\u0000~\u0000rq\u0000~\u0000xq\u0000~\u0000\u008dq\u0000"
+"~\u0000\u00a2q\u0000~\u0000\u00b8q\u0000~\u0000\u00caq\u0000~\u0000\u00ddq\u0000~\u0001;q\u0000~\u0001-q\u0000~\u0000|q\u0000~\u0000\u00a7q\u0000~\u0001Lq\u0000~\u0001Iq\u0000~\u0001Sq\u0000~\u0001`q\u0000"
+"~\u0000\u0007q\u0000~\u0001gq\u0000~\u0001dq\u0000~\u0001nq\u0000~\u0001kq\u0000~\u0000\u0006x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class ProgramIncomeDetailsTypeImpl implements edu.mit.coeus.utils.xml.bean.proposal.nih.BudgetPeriodType.ProgramIncomeDetailsType, com.sun.xml.bind.JAXBObject, edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.UnmarshallableObject, edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.XMLSerializable, edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.ValidatableObject
    {

        protected java.math.BigDecimal _AnticipatedAmount;
        protected java.lang.String _Sources;
        public final static java.lang.Class version = (edu.mit.coeus.utils.xml.bean.proposal.nih.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (edu.mit.coeus.utils.xml.bean.proposal.nih.BudgetPeriodType.ProgramIncomeDetailsType.class);
        }

        public java.math.BigDecimal getAnticipatedAmount() {
            return _AnticipatedAmount;
        }

        public void setAnticipatedAmount(java.math.BigDecimal value) {
            _AnticipatedAmount = value;
        }

        public java.lang.String getSources() {
            return _Sources;
        }

        public void setSources(java.lang.String value) {
            _Sources = value;
        }

        public edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.UnmarshallingEventHandler createUnmarshaller(edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.UnmarshallingContext context) {
            return new edu.mit.coeus.utils.xml.bean.proposal.nih.impl.BudgetPeriodTypeImpl.ProgramIncomeDetailsTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            context.startElement("", "AnticipatedAmount");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _AnticipatedAmount)), "AnticipatedAmount");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
            context.startElement("", "Sources");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Sources), "Sources");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }

        public void serializeAttributes(edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public void serializeURIs(edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public java.lang.Class getPrimaryInterface() {
            return (edu.mit.coeus.utils.xml.bean.proposal.nih.BudgetPeriodType.ProgramIncomeDetailsType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsr\u0000\'com.sun.msv.grammar.trex.ElementPatt"
+"ern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;"
+"xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndecl"
+"aredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.s"
+"un.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/dataty"
+"pe/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/String"
+"Pair;xq\u0000~\u0000\u0003ppsr\u0000\'com.sun.msv.datatype.xsd.FinalComponent\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\nfinalValuexr\u0000\u001ecom.sun.msv.datatype.xsd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;"
+"xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnam"
+"espaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0013L\u0000\nwhiteSpacet"
+"\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u00009http://"
+"era.nih.gov/Projectmgmt/SBIR/CGAP/common.namespacet\u0000\fCurrenc"
+"yTypesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collap"
+"se\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcesso"
+"r\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0012t"
+"\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007decimalq\u0000~\u0000\u001a\u0000\u0000\u0000\u0000sr\u00000com"
+".sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bcom.sun.ms"
+"v.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0013L\u0000\fnamespaceURI"
+"q\u0000~\u0000\u0013xpq\u0000~\u0000 q\u0000~\u0000\u0016sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003e"
+"xpq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003q\u0000~\u0000$psq\u0000~\u0000\u000bppsr\u0000\"com.sun.msv."
+"datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001cq\u0000~\u0000\u001ft\u0000\u0005QNameq\u0000~\u0000\u001aq\u0000~"
+"\u0000\"sq\u0000~\u0000%q\u0000~\u0000.q\u0000~\u0000\u001fsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0013L\u0000\fnamespaceURIq\u0000~\u0000\u0013xr\u0000\u001dcom.sun.msv"
+".grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2"
+"001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expression$Eps"
+"ilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000#\u0001q\u0000~\u00006sq\u0000~\u00000t\u0000\u0011Anticipa"
+"tedAmountt\u0000\u0000sq\u0000~\u0000\u0006pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bq\u0000~\u0000$psr\u0000#com.sun.msv.dat"
+"atype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000\u001cq\u0000~\u0000\u001ft\u0000"
+"\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Pres"
+"erve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0019\u0001q\u0000~\u0000\"sq\u0000~\u0000%q\u0000~\u0000@q\u0000~\u0000\u001fsq\u0000~\u0000\'ppsq\u0000~\u0000)q\u0000~"
+"\u0000$pq\u0000~\u0000+q\u0000~\u00002q\u0000~\u00006sq\u0000~\u00000t\u0000\u0007Sourcesq\u0000~\u0000:sr\u0000\"com.sun.msv.gramm"
+"ar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gramm"
+"ar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expre"
+"ssionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006pa"
+"rentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0005\u0001pq\u0000~\u0000\u0005q\u0000~\u0000"
+"<q\u0000~\u0000(q\u0000~\u0000Dq\u0000~\u0000\nx"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.UnmarshallingContext context) {
                super(context, "-------");
            }

            protected Unmarshaller(edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return edu.mit.coeus.utils.xml.bean.proposal.nih.impl.BudgetPeriodTypeImpl.ProgramIncomeDetailsTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            if (("AnticipatedAmount" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 1;
                                return ;
                            }
                            break;
                        case  6 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  3 :
                            if (("Sources" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 4;
                                return ;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  5 :
                            if (("Sources" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 6;
                                return ;
                            }
                            break;
                        case  6 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  2 :
                            if (("AnticipatedAmount" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  6 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  6 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  4 :
                                eatText1(value);
                                state = 5;
                                return ;
                            case  6 :
                                revertToParentFromText(value);
                                return ;
                            case  1 :
                                eatText2(value);
                                state = 2;
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _Sources = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText2(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _AnticipatedAmount = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

        }

    }

    public class Unmarshaller
        extends edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.UnmarshallingContext context) {
            super(context, "---------------------------------------------------------------------------");
        }

        protected Unmarshaller(edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return edu.mit.coeus.utils.xml.bean.proposal.nih.impl.BudgetPeriodTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        if (("SalariesAndWages" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        if (("EquipmentCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            _getEquipmentCosts().add(((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.EquipmentCostsImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.EquipmentCostsImpl.class), 19, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("EquipmentCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 73;
                            return ;
                        }
                        state = 19;
                        continue outer;
                    case  46 :
                        if (("PeriodCostsTotal" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 47;
                            return ;
                        }
                        state = 49;
                        continue outer;
                    case  73 :
                        if (("Description" == ___local)&&("" == ___uri)) {
                            _getEquipmentCosts().add(((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.EquipmentCostsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.EquipmentCostsTypeImpl.class), 74, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  40 :
                        if (("PeriodDirectCostsTotal" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 41;
                            return ;
                        }
                        state = 43;
                        continue outer;
                    case  67 :
                        if (("NSFCostSharingAmount" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 68;
                            return ;
                        }
                        state = 70;
                        continue outer;
                    case  3 :
                        if (("StartDate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        break;
                    case  15 :
                        if (("SalariesAndWages" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  22 :
                        if (("ParticipantPatientCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            _getParticipantPatientCosts().add(((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.ParticipantPatientCostsImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.ParticipantPatientCostsImpl.class), 22, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ParticipantPatientCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 20;
                            return ;
                        }
                        if (("OtherDirectCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            _getOtherDirectCosts().add(((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.OtherDirectCostsImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.OtherDirectCostsImpl.class), 25, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OtherDirectCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 23;
                            return ;
                        }
                        state = 25;
                        continue outer;
                    case  49 :
                        if (("ProgramIncomeDetails" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 50;
                            return ;
                        }
                        state = 52;
                        continue outer;
                    case  61 :
                        if (("NSFOtherPersonnel" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 62;
                            return ;
                        }
                        state = 64;
                        continue outer;
                    case  6 :
                        if (("EndDate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        break;
                    case  71 :
                        if (("Type" == ___local)&&("" == ___uri)) {
                            _getTravelCosts().add(((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.TravelCostsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.TravelCostsTypeImpl.class), 72, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  64 :
                        if (("NSFTotalOtherDirectCosts" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 65;
                            return ;
                        }
                        state = 67;
                        continue outer;
                    case  19 :
                        if (("EquipmentCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            _getEquipmentCosts().add(((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.EquipmentCostsImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.EquipmentCostsImpl.class), 19, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("EquipmentCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 73;
                            return ;
                        }
                        if (("TravelCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            _getTravelCosts().add(((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.TravelCostsImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.TravelCostsImpl.class), 19, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TravelCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 71;
                            return ;
                        }
                        if (("ParticipantPatientCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            _getParticipantPatientCosts().add(((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.ParticipantPatientCostsImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.ParticipantPatientCostsImpl.class), 22, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ParticipantPatientCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 20;
                            return ;
                        }
                        state = 22;
                        continue outer;
                    case  62 :
                        if (("PostDocCount" == ___local)&&("" == ___uri)) {
                            _NSFOtherPersonnel = ((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl.class), 63, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PostDocFunds" == ___local)&&("" == ___uri)) {
                            _NSFOtherPersonnel = ((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl.class), 63, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OtherProfCount" == ___local)&&("" == ___uri)) {
                            _NSFOtherPersonnel = ((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl.class), 63, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OtherProfFunds" == ___local)&&("" == ___uri)) {
                            _NSFOtherPersonnel = ((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl.class), 63, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("GradCount" == ___local)&&("" == ___uri)) {
                            _NSFOtherPersonnel = ((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl.class), 63, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("GradFunds" == ___local)&&("" == ___uri)) {
                            _NSFOtherPersonnel = ((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl.class), 63, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("UnderGradCount" == ___local)&&("" == ___uri)) {
                            _NSFOtherPersonnel = ((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl.class), 63, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("UnderGradFunds" == ___local)&&("" == ___uri)) {
                            _NSFOtherPersonnel = ((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl.class), 63, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ClericalCount" == ___local)&&("" == ___uri)) {
                            _NSFOtherPersonnel = ((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl.class), 63, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ClericalFunds" == ___local)&&("" == ___uri)) {
                            _NSFOtherPersonnel = ((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl.class), 63, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OtherCount" == ___local)&&("" == ___uri)) {
                            _NSFOtherPersonnel = ((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl.class), 63, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OtherLAFunds" == ___local)&&("" == ___uri)) {
                            _NSFOtherPersonnel = ((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl.class), 63, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OtherFunds" == ___local)&&("" == ___uri)) {
                            _NSFOtherPersonnel = ((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl.class), 63, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _NSFOtherPersonnel = ((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl.class), 63, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  34 :
                        if (("ParticipantPatientTotal" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 35;
                            return ;
                        }
                        state = 37;
                        continue outer;
                    case  53 :
                        if (("Rownumber" == ___local)&&("" == ___uri)) {
                            _getNSFSeniorPersonnel().add(((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFSeniorPersonnelTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFSeniorPersonnelTypeImpl.class), 54, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("personID" == ___local)&&("" == ___uri)) {
                            _getNSFSeniorPersonnel().add(((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFSeniorPersonnelTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFSeniorPersonnelTypeImpl.class), 54, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  55 :
                        if (("NSFSeniorPersonnel" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 53;
                            return ;
                        }
                        if (("ModularPeriodAmount" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 56;
                            return ;
                        }
                        state = 58;
                        continue outer;
                    case  20 :
                        if (("Type" == ___local)&&("" == ___uri)) {
                            _getParticipantPatientCosts().add(((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.ParticipantPatientCostsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.ParticipantPatientCostsTypeImpl.class), 21, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  25 :
                        if (("OtherDirectCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            _getOtherDirectCosts().add(((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.OtherDirectCostsImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.OtherDirectCostsImpl.class), 25, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OtherDirectCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 23;
                            return ;
                        }
                        if (("SalariesWagesTotal" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 26;
                            return ;
                        }
                        state = 28;
                        continue outer;
                    case  0 :
                        if (("BudgetPeriodID" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        break;
                    case  52 :
                        if (("ProgramIncomeDetails" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 50;
                            return ;
                        }
                        if (("NSFSeniorPersonnel" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 53;
                            return ;
                        }
                        state = 55;
                        continue outer;
                    case  31 :
                        if (("TravelTotal" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 32;
                            return ;
                        }
                        state = 34;
                        continue outer;
                    case  9 :
                        if (("ProgramIncome" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        break;
                    case  50 :
                        if (("AnticipatedAmount" == ___local)&&("" == ___uri)) {
                            _getProgramIncomeDetails().add(((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.BudgetPeriodTypeImpl.ProgramIncomeDetailsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.BudgetPeriodTypeImpl.ProgramIncomeDetailsTypeImpl.class), 51, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  16 :
                        if (("Name" == ___local)&&("" == ___uri)) {
                            _getSalariesAndWages().add(((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.SalariesAndWagesTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.SalariesAndWagesTypeImpl.class), 17, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  12 :
                        if (("Fee" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        break;
                    case  58 :
                        if (("NSFTotalSeniorPersonnel" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 59;
                            return ;
                        }
                        state = 61;
                        continue outer;
                    case  23 :
                        if (("Type" == ___local)&&("" == ___uri)) {
                            _getOtherDirectCosts().add(((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.OtherDirectCostsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.OtherDirectCostsTypeImpl.class), 24, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  28 :
                        if (("EquipmentTotal" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 29;
                            return ;
                        }
                        state = 31;
                        continue outer;
                    case  43 :
                        if (("IndirectCostsTotal" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 44;
                            return ;
                        }
                        break;
                    case  70 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  37 :
                        if (("OtherDirectTotal" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 38;
                            return ;
                        }
                        state = 40;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  51 :
                        if (("ProgramIncomeDetails" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 52;
                            return ;
                        }
                        break;
                    case  69 :
                        if (("NSFCostSharingAmount" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 70;
                            return ;
                        }
                        break;
                    case  18 :
                        state = 19;
                        continue outer;
                    case  11 :
                        if (("ProgramIncome" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  46 :
                        state = 49;
                        continue outer;
                    case  40 :
                        state = 43;
                        continue outer;
                    case  67 :
                        state = 70;
                        continue outer;
                    case  24 :
                        if (("OtherDirectCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            context.popAttributes();
                            state = 25;
                            return ;
                        }
                        break;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  22 :
                        state = 25;
                        continue outer;
                    case  63 :
                        if (("NSFOtherPersonnel" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 64;
                            return ;
                        }
                        break;
                    case  49 :
                        state = 52;
                        continue outer;
                    case  42 :
                        if (("PeriodDirectCostsTotal" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 43;
                            return ;
                        }
                        break;
                    case  54 :
                        if (("NSFSeniorPersonnel" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 55;
                            return ;
                        }
                        break;
                    case  61 :
                        state = 64;
                        continue outer;
                    case  17 :
                        if (("SalariesAndWages" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  74 :
                        if (("EquipmentCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            context.popAttributes();
                            state = 19;
                            return ;
                        }
                        break;
                    case  60 :
                        if (("NSFTotalSeniorPersonnel" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 61;
                            return ;
                        }
                        break;
                    case  36 :
                        if (("ParticipantPatientTotal" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 37;
                            return ;
                        }
                        break;
                    case  64 :
                        state = 67;
                        continue outer;
                    case  19 :
                        state = 22;
                        continue outer;
                    case  30 :
                        if (("EquipmentTotal" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 31;
                            return ;
                        }
                        break;
                    case  62 :
                        _NSFOtherPersonnel = ((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl) spawnChildFromLeaveElement((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl.class), 63, ___uri, ___local, ___qname));
                        return ;
                    case  33 :
                        if (("TravelTotal" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 34;
                            return ;
                        }
                        break;
                    case  72 :
                        if (("TravelCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            context.popAttributes();
                            state = 19;
                            return ;
                        }
                        break;
                    case  34 :
                        state = 37;
                        continue outer;
                    case  66 :
                        if (("NSFTotalOtherDirectCosts" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 67;
                            return ;
                        }
                        break;
                    case  57 :
                        if (("ModularPeriodAmount" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 58;
                            return ;
                        }
                        break;
                    case  39 :
                        if (("OtherDirectTotal" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 40;
                            return ;
                        }
                        break;
                    case  55 :
                        state = 58;
                        continue outer;
                    case  25 :
                        state = 28;
                        continue outer;
                    case  52 :
                        state = 55;
                        continue outer;
                    case  31 :
                        state = 34;
                        continue outer;
                    case  2 :
                        if (("BudgetPeriodID" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  21 :
                        if (("ParticipantPatientCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            context.popAttributes();
                            state = 22;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("StartDate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("Fee" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  58 :
                        state = 61;
                        continue outer;
                    case  45 :
                        if (("IndirectCostsTotal" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 46;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("EndDate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  27 :
                        if (("SalariesWagesTotal" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 28;
                            return ;
                        }
                        break;
                    case  28 :
                        state = 31;
                        continue outer;
                    case  48 :
                        if (("PeriodCostsTotal" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 49;
                            return ;
                        }
                        break;
                    case  70 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  37 :
                        state = 40;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        state = 19;
                        continue outer;
                    case  46 :
                        state = 49;
                        continue outer;
                    case  40 :
                        state = 43;
                        continue outer;
                    case  67 :
                        state = 70;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  22 :
                        state = 25;
                        continue outer;
                    case  49 :
                        state = 52;
                        continue outer;
                    case  61 :
                        state = 64;
                        continue outer;
                    case  64 :
                        state = 67;
                        continue outer;
                    case  19 :
                        state = 22;
                        continue outer;
                    case  62 :
                        _NSFOtherPersonnel = ((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl) spawnChildFromEnterAttribute((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl.class), 63, ___uri, ___local, ___qname));
                        return ;
                    case  34 :
                        state = 37;
                        continue outer;
                    case  55 :
                        state = 58;
                        continue outer;
                    case  25 :
                        state = 28;
                        continue outer;
                    case  52 :
                        state = 55;
                        continue outer;
                    case  31 :
                        state = 34;
                        continue outer;
                    case  58 :
                        state = 61;
                        continue outer;
                    case  28 :
                        state = 31;
                        continue outer;
                    case  70 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  37 :
                        state = 40;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        state = 19;
                        continue outer;
                    case  46 :
                        state = 49;
                        continue outer;
                    case  40 :
                        state = 43;
                        continue outer;
                    case  67 :
                        state = 70;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  22 :
                        state = 25;
                        continue outer;
                    case  49 :
                        state = 52;
                        continue outer;
                    case  61 :
                        state = 64;
                        continue outer;
                    case  64 :
                        state = 67;
                        continue outer;
                    case  19 :
                        state = 22;
                        continue outer;
                    case  62 :
                        _NSFOtherPersonnel = ((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl) spawnChildFromLeaveAttribute((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl.class), 63, ___uri, ___local, ___qname));
                        return ;
                    case  34 :
                        state = 37;
                        continue outer;
                    case  55 :
                        state = 58;
                        continue outer;
                    case  25 :
                        state = 28;
                        continue outer;
                    case  52 :
                        state = 55;
                        continue outer;
                    case  31 :
                        state = 34;
                        continue outer;
                    case  58 :
                        state = 61;
                        continue outer;
                    case  28 :
                        state = 31;
                        continue outer;
                    case  70 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  37 :
                        state = 40;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  18 :
                            state = 19;
                            continue outer;
                        case  59 :
                            eatText1(value);
                            state = 60;
                            return ;
                        case  46 :
                            state = 49;
                            continue outer;
                        case  40 :
                            state = 43;
                            continue outer;
                        case  67 :
                            state = 70;
                            continue outer;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  32 :
                            eatText2(value);
                            state = 33;
                            return ;
                        case  22 :
                            state = 25;
                            continue outer;
                        case  49 :
                            state = 52;
                            continue outer;
                        case  61 :
                            state = 64;
                            continue outer;
                        case  29 :
                            eatText3(value);
                            state = 30;
                            return ;
                        case  7 :
                            eatText4(value);
                            state = 8;
                            return ;
                        case  64 :
                            state = 67;
                            continue outer;
                        case  19 :
                            state = 22;
                            continue outer;
                        case  68 :
                            eatText5(value);
                            state = 69;
                            return ;
                        case  47 :
                            eatText6(value);
                            state = 48;
                            return ;
                        case  38 :
                            eatText7(value);
                            state = 39;
                            return ;
                        case  62 :
                            _NSFOtherPersonnel = ((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl) spawnChildFromText((edu.mit.coeus.utils.xml.bean.proposal.nih.impl.NSFOtherPersonnelTypeImpl.class), 63, value));
                            return ;
                        case  34 :
                            state = 37;
                            continue outer;
                        case  56 :
                            eatText8(value);
                            state = 57;
                            return ;
                        case  55 :
                            state = 58;
                            continue outer;
                        case  25 :
                            state = 28;
                            continue outer;
                        case  10 :
                            eatText9(value);
                            state = 11;
                            return ;
                        case  52 :
                            state = 55;
                            continue outer;
                        case  31 :
                            state = 34;
                            continue outer;
                        case  4 :
                            eatText10(value);
                            state = 5;
                            return ;
                        case  1 :
                            eatText11(value);
                            state = 2;
                            return ;
                        case  58 :
                            state = 61;
                            continue outer;
                        case  35 :
                            eatText12(value);
                            state = 36;
                            return ;
                        case  65 :
                            eatText13(value);
                            state = 66;
                            return ;
                        case  28 :
                            state = 31;
                            continue outer;
                        case  13 :
                            eatText14(value);
                            state = 14;
                            return ;
                        case  41 :
                            eatText15(value);
                            state = 42;
                            return ;
                        case  70 :
                            revertToParentFromText(value);
                            return ;
                        case  44 :
                            eatText16(value);
                            state = 45;
                            return ;
                        case  26 :
                            eatText17(value);
                            state = 27;
                            return ;
                        case  37 :
                            state = 40;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _NSFTotalSeniorPersonnel = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _TravelTotal = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _EquipmentTotal = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _EndDate = javax.xml.bind.DatatypeConverter.parseDate(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _NSFCostSharingAmount = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PeriodCostsTotal = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _OtherDirectTotal = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ModularPeriodAmount = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ProgramIncome = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _StartDate = javax.xml.bind.DatatypeConverter.parseDate(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _BudgetPeriodID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ParticipantPatientTotal = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText13(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _NSFTotalOtherDirectCosts = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText14(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Fee = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText15(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PeriodDirectCostsTotal = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText16(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IndirectCostsTotal = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText17(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SalariesWagesTotal = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
