//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.12.13 at 02:14:23 EST 
//


package edu.mit.coeus.utils.xml.bean.award.impl;

public class SpecialReviewTypeImpl implements edu.mit.coeus.utils.xml.bean.award.SpecialReviewType, com.sun.xml.bind.JAXBObject, edu.mit.coeus.utils.xml.bean.award.impl.runtime.UnmarshallableObject, edu.mit.coeus.utils.xml.bean.award.impl.runtime.XMLSerializable, edu.mit.coeus.utils.xml.bean.award.impl.runtime.ValidatableObject
{

    protected java.util.Calendar _ApplicationDate;
    protected java.lang.String _ApplicationDateModified;
    protected java.lang.String _ProtocolNumber;
    protected java.lang.String _ApprovalDateModified;
    protected java.lang.String _ApprovalTypeDesc;
    protected boolean has_SequenceNumber;
    protected int _SequenceNumber;
    protected java.lang.String _Comments;
    protected boolean has_ApprovalType;
    protected int _ApprovalType;
    protected java.util.Calendar _ApprovalDate;
    protected java.lang.String _AwardNumber;
    protected java.lang.String _ReviewTypeDesc;
    protected boolean has_ReviewType;
    protected int _ReviewType;
    public final static java.lang.Class version = (edu.mit.coeus.utils.xml.bean.award.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (edu.mit.coeus.utils.xml.bean.award.SpecialReviewType.class);
    }

    public java.util.Calendar getApplicationDate() {
        return _ApplicationDate;
    }

    public void setApplicationDate(java.util.Calendar value) {
        _ApplicationDate = value;
    }

    public java.lang.String getApplicationDateModified() {
        return _ApplicationDateModified;
    }

    public void setApplicationDateModified(java.lang.String value) {
        _ApplicationDateModified = value;
    }

    public java.lang.String getProtocolNumber() {
        return _ProtocolNumber;
    }

    public void setProtocolNumber(java.lang.String value) {
        _ProtocolNumber = value;
    }

    public java.lang.String getApprovalDateModified() {
        return _ApprovalDateModified;
    }

    public void setApprovalDateModified(java.lang.String value) {
        _ApprovalDateModified = value;
    }

    public java.lang.String getApprovalTypeDesc() {
        return _ApprovalTypeDesc;
    }

    public void setApprovalTypeDesc(java.lang.String value) {
        _ApprovalTypeDesc = value;
    }

    public int getSequenceNumber() {
        return _SequenceNumber;
    }

    public void setSequenceNumber(int value) {
        _SequenceNumber = value;
        has_SequenceNumber = true;
    }

    public java.lang.String getComments() {
        return _Comments;
    }

    public void setComments(java.lang.String value) {
        _Comments = value;
    }

    public int getApprovalType() {
        return _ApprovalType;
    }

    public void setApprovalType(int value) {
        _ApprovalType = value;
        has_ApprovalType = true;
    }

    public java.util.Calendar getApprovalDate() {
        return _ApprovalDate;
    }

    public void setApprovalDate(java.util.Calendar value) {
        _ApprovalDate = value;
    }

    public java.lang.String getAwardNumber() {
        return _AwardNumber;
    }

    public void setAwardNumber(java.lang.String value) {
        _AwardNumber = value;
    }

    public java.lang.String getReviewTypeDesc() {
        return _ReviewTypeDesc;
    }

    public void setReviewTypeDesc(java.lang.String value) {
        _ReviewTypeDesc = value;
    }

    public int getReviewType() {
        return _ReviewType;
    }

    public void setReviewType(int value) {
        _ReviewType = value;
        has_ReviewType = true;
    }

    public edu.mit.coeus.utils.xml.bean.award.impl.runtime.UnmarshallingEventHandler createUnmarshaller(edu.mit.coeus.utils.xml.bean.award.impl.runtime.UnmarshallingContext context) {
        return new edu.mit.coeus.utils.xml.bean.award.impl.SpecialReviewTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(edu.mit.coeus.utils.xml.bean.award.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_AwardNumber!= null) {
            context.startElement("", "AwardNumber");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _AwardNumber), "AwardNumber");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_SequenceNumber) {
            context.startElement("", "SequenceNumber");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _SequenceNumber)), "SequenceNumber");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ReviewType) {
            context.startElement("", "ReviewType");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _ReviewType)), "ReviewType");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ReviewTypeDesc!= null) {
            context.startElement("", "ReviewTypeDesc");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _ReviewTypeDesc), "ReviewTypeDesc");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ApprovalType) {
            context.startElement("", "ApprovalType");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _ApprovalType)), "ApprovalType");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ApprovalTypeDesc!= null) {
            context.startElement("", "ApprovalTypeDesc");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _ApprovalTypeDesc), "ApprovalTypeDesc");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ProtocolNumber!= null) {
            context.startElement("", "ProtocolNumber");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _ProtocolNumber), "ProtocolNumber");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ApplicationDateModified!= null) {
            context.startElement("", "ApplicationDateModified");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _ApplicationDateModified), "ApplicationDateModified");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ApplicationDate!= null) {
            context.startElement("", "ApplicationDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDate(((java.util.Calendar) _ApplicationDate)), "ApplicationDate");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ApprovalDateModified!= null) {
            context.startElement("", "ApprovalDateModified");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _ApprovalDateModified), "ApprovalDateModified");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ApprovalDate!= null) {
            context.startElement("", "ApprovalDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDate(((java.util.Calendar) _ApprovalDate)), "ApprovalDate");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Comments!= null) {
            context.startElement("", "Comments");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Comments), "Comments");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(edu.mit.coeus.utils.xml.bean.award.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(edu.mit.coeus.utils.xml.bean.award.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (edu.mit.coeus.utils.xml.bean.award.SpecialReviewType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.gram"
+"mar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex"
+".ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gramma"
+"r/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001a"
+"ignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java"
+".lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv"
+".grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Dat"
+"atype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;x"
+"q\u0000~\u0000\u0003q\u0000~\u0000\u0017psr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003"
+"L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000!L\u0000\nwhite"
+"Spacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 h"
+"ttp://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.data"
+"type.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun."
+"msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.su"
+"n.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003p"
+"psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000!"
+"L\u0000\fnamespaceURIq\u0000~\u0000!xpq\u0000~\u0000%q\u0000~\u0000$sq\u0000~\u0000\u0010ppsr\u0000 com.sun.msv.gram"
+"mar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0013xq\u0000~\u0000"
+"\u0003q\u0000~\u0000\u0017psq\u0000~\u0000\u0019ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001eq\u0000~\u0000$t\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpa"
+"ceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\'q\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u00003q\u0000~\u0000$sr"
+"\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalName"
+"q\u0000~\u0000!L\u0000\fnamespaceURIq\u0000~\u0000!xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instan"
+"cesr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0016\u0001psq\u0000~\u00007t\u0000\u000bAwardNumbert\u0000\u0000q\u0000~\u0000=sq\u0000~\u0000\u0010ppsq\u0000~\u0000"
+"\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0019q\u0000~\u0000\u0017psr\u0000 com.sun.msv.datatype.xsd.Int"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedTy"
+"pe\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDat"
+"atypeImpl;xq\u0000~\u0000\u001eq\u0000~\u0000$t\u0000\u0003intq\u0000~\u00005sr\u0000*com.sun.msv.datatype.xsd"
+".MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.Ra"
+"ngeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;xr\u00009com"
+".sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7"
+"\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000HL\u0000\fcon"
+"creteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetN"
+"ameq\u0000~\u0000!xq\u0000~\u0000 ppq\u0000~\u00005\u0000\u0001sr\u0000*com.sun.msv.datatype.xsd.MinInclu"
+"siveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Lppq\u0000~\u00005\u0000\u0000sr\u0000!com.sun.msv.datatype."
+"xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Gq\u0000~\u0000$t\u0000\u0004longq\u0000~\u00005sq\u0000~\u0000Kppq\u0000~\u00005\u0000"
+"\u0001sq\u0000~\u0000Rppq\u0000~\u00005\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Gq\u0000~\u0000$t\u0000\u0007integerq\u0000~\u00005sr\u0000,com.sun.msv.datatype.xs"
+"d.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.data"
+"type.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000O"
+"ppq\u0000~\u00005\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"q\u0000~\u0000\u001eq\u0000~\u0000$t\u0000\u0007decimalq\u0000~\u00005q\u0000~\u0000`t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000Zt\u0000\fm"
+"inInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lan"
+"g.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000Zt\u0000\fmaxInclusivesq\u0000~\u0000d\u007f\u00ff\u00ff\u00ff\u00ff"
+"\u00ff\u00ff\u00ffq\u0000~\u0000Uq\u0000~\u0000csr\u0000\u0011java.lang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u0000e\u0080"
+"\u0000\u0000\u0000q\u0000~\u0000Uq\u0000~\u0000gsq\u0000~\u0000i\u007f\u00ff\u00ff\u00ffq\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u0000Jq\u0000~\u0000$sq\u0000~\u0000\u0010ppsq\u0000~\u0000.q\u0000"
+"~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\u000eSequenceNumberq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010pp"
+"sq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Esq\u0000~\u0000\u0010ppsq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000"
+"=sq\u0000~\u00007t\u0000\nReviewTypeq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppq"
+"\u0000~\u0000\u001csq\u0000~\u0000\u0010ppsq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\u000eReviewTypeDe"
+"scq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Esq\u0000~\u0000\u0010ppsq\u0000~\u0000."
+"q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\fApprovalTypeq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010pp"
+"sq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001csq\u0000~\u0000\u0010ppsq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000"
+"=sq\u0000~\u00007t\u0000\u0010ApprovalTypeDescq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000"
+"~\u0000\u0000ppq\u0000~\u0000\u001csq\u0000~\u0000\u0010ppsq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\u000eProtoc"
+"olNumberq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001csq\u0000~\u0000\u0010pp"
+"sq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0017ApplicationDateModifiedq"
+"\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0019ppsr\u0000!com.sun.ms"
+"v.datatype.xsd.DateType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.x"
+"sd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000\u001eq\u0000~\u0000$t\u0000\u0004dateq\u0000~\u00005q\u0000~\u0000*sq"
+"\u0000~\u0000+q\u0000~\u0000\u00a2q\u0000~\u0000$sq\u0000~\u0000\u0010ppsq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\u000fAp"
+"plicationDateq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001csq\u0000"
+"~\u0000\u0010ppsq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\u0014ApprovalDateModifie"
+"dq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010ppsq\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u009esq\u0000~\u0000\u0010ppsq\u0000~\u0000.q"
+"\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000=sq\u0000~\u00007t\u0000\fApprovalDateq\u0000~\u0000Aq\u0000~\u0000=sq\u0000~\u0000\u0010pps"
+"q\u0000~\u0000\u0012q\u0000~\u0000\u0017p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001csq\u0000~\u0000\u0010ppsq\u0000~\u0000.q\u0000~\u0000\u0017pq\u0000~\u00000q\u0000~\u00009q\u0000~\u0000="
+"sq\u0000~\u00007t\u0000\bCommentsq\u0000~\u0000Aq\u0000~\u0000=sr\u0000\"com.sun.msv.grammar.Expressio"
+"nPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expressio"
+"nPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Cl"
+"osedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/"
+"sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000/\u0001pq\u0000~\u0000\u0011q\u0000~\u0000xq\u0000~\u0000\u0086q\u0000~\u0000\u008dq"
+"\u0000~\u0000\u0094q\u0000~\u0000\u00a8q\u0000~\u0000\u00b6q\u0000~\u0000\nq\u0000~\u0000\u009dq\u0000~\u0000\u00b1q\u0000~\u0000\u0018q\u0000~\u0000zq\u0000~\u0000\u0088q\u0000~\u0000\u008fq\u0000~\u0000\u0096q\u0000~\u0000\u00aaq"
+"\u0000~\u0000\u00b8q\u0000~\u0000\u000fq\u0000~\u0000\fq\u0000~\u0000Dq\u0000~\u0000sq\u0000~\u0000\u0081q\u0000~\u0000\tq\u0000~\u0000\rq\u0000~\u0000Bq\u0000~\u0000qq\u0000~\u0000-q\u0000~\u0000mq"
+"\u0000~\u0000tq\u0000~\u0000{q\u0000~\u0000\u0082q\u0000~\u0000\u007fq\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0097q\u0000~\u0000\u00a4q\u0000~\u0000\u00abq\u0000~\u0000\u0007q\u0000~\u0000\bq\u0000~\u0000\u00b2q"
+"\u0000~\u0000\u00b9q\u0000~\u0000\u000eq\u0000~\u0000\u0006q\u0000~\u0000\u009bq\u0000~\u0000\u00afq\u0000~\u0000\u000bq\u0000~\u0000\u0005x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends edu.mit.coeus.utils.xml.bean.award.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(edu.mit.coeus.utils.xml.bean.award.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------------------------");
        }

        protected Unmarshaller(edu.mit.coeus.utils.xml.bean.award.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return edu.mit.coeus.utils.xml.bean.award.impl.SpecialReviewTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  24 :
                        if (("ApplicationDate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  30 :
                        if (("ApprovalDate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        state = 33;
                        continue outer;
                    case  18 :
                        if (("ProtocolNumber" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  12 :
                        if (("ApprovalType" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  15 :
                        if (("ApprovalTypeDesc" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  27 :
                        if (("ApprovalDateModified" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  33 :
                        if (("Comments" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 34;
                            return ;
                        }
                        state = 36;
                        continue outer;
                    case  9 :
                        if (("ReviewTypeDesc" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  36 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  6 :
                        if (("ReviewType" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  21 :
                        if (("ApplicationDateModified" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  0 :
                        if (("AwardNumber" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        if (("SequenceNumber" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  20 :
                        if (("ProtocolNumber" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  17 :
                        if (("ApprovalTypeDesc" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  29 :
                        if (("ApprovalDateModified" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  26 :
                        if (("ApplicationDate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  8 :
                        if (("ReviewType" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  36 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  32 :
                        if (("ApprovalDate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("ApprovalType" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  11 :
                        if (("ReviewTypeDesc" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("SequenceNumber" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("AwardNumber" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  23 :
                        if (("ApplicationDateModified" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  35 :
                        if (("Comments" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 36;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  24 :
                        state = 27;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  36 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  24 :
                        state = 27;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  36 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  22 :
                            eatText1(value);
                            state = 23;
                            return ;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  34 :
                            eatText2(value);
                            state = 35;
                            return ;
                        case  4 :
                            eatText3(value);
                            state = 5;
                            return ;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  7 :
                            eatText4(value);
                            state = 8;
                            return ;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  31 :
                            eatText5(value);
                            state = 32;
                            return ;
                        case  25 :
                            eatText6(value);
                            state = 26;
                            return ;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  33 :
                            state = 36;
                            continue outer;
                        case  13 :
                            eatText7(value);
                            state = 14;
                            return ;
                        case  28 :
                            eatText8(value);
                            state = 29;
                            return ;
                        case  19 :
                            eatText9(value);
                            state = 20;
                            return ;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  36 :
                            revertToParentFromText(value);
                            return ;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  16 :
                            eatText10(value);
                            state = 17;
                            return ;
                        case  10 :
                            eatText11(value);
                            state = 11;
                            return ;
                        case  1 :
                            eatText12(value);
                            state = 2;
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ApplicationDateModified = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Comments = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SequenceNumber = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_SequenceNumber = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ReviewType = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ReviewType = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ApprovalDate = javax.xml.bind.DatatypeConverter.parseDate(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ApplicationDate = javax.xml.bind.DatatypeConverter.parseDate(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ApprovalType = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ApprovalType = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ApprovalDateModified = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ProtocolNumber = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ApprovalTypeDesc = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ReviewTypeDesc = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AwardNumber = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
