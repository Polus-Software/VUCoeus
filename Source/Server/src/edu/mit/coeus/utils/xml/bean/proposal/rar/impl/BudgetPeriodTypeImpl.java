//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.3-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.07.12 at 01:32:44 EDT 
//


package edu.mit.coeus.utils.xml.bean.proposal.rar.impl;

public class BudgetPeriodTypeImpl implements edu.mit.coeus.utils.xml.bean.proposal.rar.BudgetPeriodType, com.sun.xml.bind.JAXBObject, edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.UnmarshallableObject, edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.XMLSerializable, edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _TravelCosts;
    protected java.math.BigDecimal _PeriodCostsTotal;
    protected java.util.Calendar _EndDate;
    protected java.math.BigDecimal _OtherDirectTotal;
    protected com.sun.xml.bind.util.ListImpl _EquipmentCosts;
    protected java.util.Calendar _StartDate;
    protected com.sun.xml.bind.util.ListImpl _ParticipantPatientCosts;
    protected java.math.BigDecimal _PeriodDirectCostsTotal;
    protected java.math.BigDecimal _SalariesWagesTotal;
    protected java.math.BigDecimal _IndirectCostsTotal;
    protected java.math.BigDecimal _ProgramIncome;
    protected java.math.BigDecimal _TravelTotal;
    protected com.sun.xml.bind.util.ListImpl _OtherDirectCosts;
    protected com.sun.xml.bind.util.ListImpl _SalariesAndWages;
    protected java.math.BigDecimal _ParticipantPatientTotal;
    protected java.math.BigInteger _BudgetPeriodID;
    protected java.math.BigDecimal _Fee;
    protected java.math.BigDecimal _EquipmentTotal;
    public final static java.lang.Class version = (edu.mit.coeus.utils.xml.bean.proposal.rar.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (edu.mit.coeus.utils.xml.bean.proposal.rar.BudgetPeriodType.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getTravelCosts() {
        if (_TravelCosts == null) {
            _TravelCosts = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _TravelCosts;
    }

    public java.util.List getTravelCosts() {
        return _getTravelCosts();
    }

    public java.math.BigDecimal getPeriodCostsTotal() {
        return _PeriodCostsTotal;
    }

    public void setPeriodCostsTotal(java.math.BigDecimal value) {
        _PeriodCostsTotal = value;
    }

    public java.util.Calendar getEndDate() {
        return _EndDate;
    }

    public void setEndDate(java.util.Calendar value) {
        _EndDate = value;
    }

    public java.math.BigDecimal getOtherDirectTotal() {
        return _OtherDirectTotal;
    }

    public void setOtherDirectTotal(java.math.BigDecimal value) {
        _OtherDirectTotal = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getEquipmentCosts() {
        if (_EquipmentCosts == null) {
            _EquipmentCosts = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _EquipmentCosts;
    }

    public java.util.List getEquipmentCosts() {
        return _getEquipmentCosts();
    }

    public java.util.Calendar getStartDate() {
        return _StartDate;
    }

    public void setStartDate(java.util.Calendar value) {
        _StartDate = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getParticipantPatientCosts() {
        if (_ParticipantPatientCosts == null) {
            _ParticipantPatientCosts = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _ParticipantPatientCosts;
    }

    public java.util.List getParticipantPatientCosts() {
        return _getParticipantPatientCosts();
    }

    public java.math.BigDecimal getPeriodDirectCostsTotal() {
        return _PeriodDirectCostsTotal;
    }

    public void setPeriodDirectCostsTotal(java.math.BigDecimal value) {
        _PeriodDirectCostsTotal = value;
    }

    public java.math.BigDecimal getSalariesWagesTotal() {
        return _SalariesWagesTotal;
    }

    public void setSalariesWagesTotal(java.math.BigDecimal value) {
        _SalariesWagesTotal = value;
    }

    public java.math.BigDecimal getIndirectCostsTotal() {
        return _IndirectCostsTotal;
    }

    public void setIndirectCostsTotal(java.math.BigDecimal value) {
        _IndirectCostsTotal = value;
    }

    public java.math.BigDecimal getProgramIncome() {
        return _ProgramIncome;
    }

    public void setProgramIncome(java.math.BigDecimal value) {
        _ProgramIncome = value;
    }

    public java.math.BigDecimal getTravelTotal() {
        return _TravelTotal;
    }

    public void setTravelTotal(java.math.BigDecimal value) {
        _TravelTotal = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getOtherDirectCosts() {
        if (_OtherDirectCosts == null) {
            _OtherDirectCosts = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _OtherDirectCosts;
    }

    public java.util.List getOtherDirectCosts() {
        return _getOtherDirectCosts();
    }

    protected com.sun.xml.bind.util.ListImpl _getSalariesAndWages() {
        if (_SalariesAndWages == null) {
            _SalariesAndWages = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _SalariesAndWages;
    }

    public java.util.List getSalariesAndWages() {
        return _getSalariesAndWages();
    }

    public java.math.BigDecimal getParticipantPatientTotal() {
        return _ParticipantPatientTotal;
    }

    public void setParticipantPatientTotal(java.math.BigDecimal value) {
        _ParticipantPatientTotal = value;
    }

    public java.math.BigInteger getBudgetPeriodID() {
        return _BudgetPeriodID;
    }

    public void setBudgetPeriodID(java.math.BigInteger value) {
        _BudgetPeriodID = value;
    }

    public java.math.BigDecimal getFee() {
        return _Fee;
    }

    public void setFee(java.math.BigDecimal value) {
        _Fee = value;
    }

    public java.math.BigDecimal getEquipmentTotal() {
        return _EquipmentTotal;
    }

    public void setEquipmentTotal(java.math.BigDecimal value) {
        _EquipmentTotal = value;
    }

    public edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.UnmarshallingEventHandler createUnmarshaller(edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.UnmarshallingContext context) {
        return new edu.mit.coeus.utils.xml.bean.proposal.rar.impl.BudgetPeriodTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_TravelCosts == null)? 0 :_TravelCosts.size());
        int idx5 = 0;
        final int len5 = ((_EquipmentCosts == null)? 0 :_EquipmentCosts.size());
        int idx7 = 0;
        final int len7 = ((_ParticipantPatientCosts == null)? 0 :_ParticipantPatientCosts.size());
        int idx13 = 0;
        final int len13 = ((_OtherDirectCosts == null)? 0 :_OtherDirectCosts.size());
        int idx14 = 0;
        final int len14 = ((_SalariesAndWages == null)? 0 :_SalariesAndWages.size());
        context.startElement("", "BudgetPeriodID");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _BudgetPeriodID)), "BudgetPeriodID");
        } catch (java.lang.Exception e) {
            edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "StartDate");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printDate(((java.util.Calendar) _StartDate)), "StartDate");
        } catch (java.lang.Exception e) {
            edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "EndDate");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printDate(((java.util.Calendar) _EndDate)), "EndDate");
        } catch (java.lang.Exception e) {
            edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "ProgramIncome");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _ProgramIncome)), "ProgramIncome");
        } catch (java.lang.Exception e) {
            edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "Fee");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _Fee)), "Fee");
        } catch (java.lang.Exception e) {
            edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        while (idx14 != len14) {
            if (_SalariesAndWages.get(idx14) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _SalariesAndWages.get(idx14 ++)), "SalariesAndWages");
            } else {
                context.startElement("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace", "SalariesAndWages");
                int idx_10 = idx14;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SalariesAndWages.get(idx_10 ++)), "SalariesAndWages");
                context.endNamespaceDecls();
                int idx_11 = idx14;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SalariesAndWages.get(idx_11 ++)), "SalariesAndWages");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _SalariesAndWages.get(idx14 ++)), "SalariesAndWages");
                context.endElement();
            }
        }
        while (idx5 != len5) {
            if (_EquipmentCosts.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _EquipmentCosts.get(idx5 ++)), "EquipmentCosts");
            } else {
                context.startElement("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace", "EquipmentCosts");
                int idx_12 = idx5;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _EquipmentCosts.get(idx_12 ++)), "EquipmentCosts");
                context.endNamespaceDecls();
                int idx_13 = idx5;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _EquipmentCosts.get(idx_13 ++)), "EquipmentCosts");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _EquipmentCosts.get(idx5 ++)), "EquipmentCosts");
                context.endElement();
            }
        }
        while (idx1 != len1) {
            if (_TravelCosts.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _TravelCosts.get(idx1 ++)), "TravelCosts");
            } else {
                context.startElement("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace", "TravelCosts");
                int idx_14 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _TravelCosts.get(idx_14 ++)), "TravelCosts");
                context.endNamespaceDecls();
                int idx_15 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _TravelCosts.get(idx_15 ++)), "TravelCosts");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _TravelCosts.get(idx1 ++)), "TravelCosts");
                context.endElement();
            }
        }
        while (idx7 != len7) {
            if (_ParticipantPatientCosts.get(idx7) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _ParticipantPatientCosts.get(idx7 ++)), "ParticipantPatientCosts");
            } else {
                context.startElement("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace", "ParticipantPatientCosts");
                int idx_16 = idx7;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ParticipantPatientCosts.get(idx_16 ++)), "ParticipantPatientCosts");
                context.endNamespaceDecls();
                int idx_17 = idx7;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ParticipantPatientCosts.get(idx_17 ++)), "ParticipantPatientCosts");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _ParticipantPatientCosts.get(idx7 ++)), "ParticipantPatientCosts");
                context.endElement();
            }
        }
        while (idx13 != len13) {
            if (_OtherDirectCosts.get(idx13) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _OtherDirectCosts.get(idx13 ++)), "OtherDirectCosts");
            } else {
                context.startElement("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace", "OtherDirectCosts");
                int idx_18 = idx13;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _OtherDirectCosts.get(idx_18 ++)), "OtherDirectCosts");
                context.endNamespaceDecls();
                int idx_19 = idx13;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _OtherDirectCosts.get(idx_19 ++)), "OtherDirectCosts");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _OtherDirectCosts.get(idx13 ++)), "OtherDirectCosts");
                context.endElement();
            }
        }
        if (_SalariesWagesTotal!= null) {
            context.startElement("", "SalariesWagesTotal");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _SalariesWagesTotal)), "SalariesWagesTotal");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_EquipmentTotal!= null) {
            context.startElement("", "EquipmentTotal");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _EquipmentTotal)), "EquipmentTotal");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_TravelTotal!= null) {
            context.startElement("", "TravelTotal");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _TravelTotal)), "TravelTotal");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_ParticipantPatientTotal!= null) {
            context.startElement("", "ParticipantPatientTotal");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _ParticipantPatientTotal)), "ParticipantPatientTotal");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_OtherDirectTotal!= null) {
            context.startElement("", "OtherDirectTotal");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _OtherDirectTotal)), "OtherDirectTotal");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PeriodDirectCostsTotal!= null) {
            context.startElement("", "PeriodDirectCostsTotal");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _PeriodDirectCostsTotal)), "PeriodDirectCostsTotal");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        context.startElement("", "IndirectCostsTotal");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _IndirectCostsTotal)), "IndirectCostsTotal");
        } catch (java.lang.Exception e) {
            edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (_PeriodCostsTotal!= null) {
            context.startElement("", "PeriodCostsTotal");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _PeriodCostsTotal)), "PeriodCostsTotal");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_TravelCosts == null)? 0 :_TravelCosts.size());
        int idx5 = 0;
        final int len5 = ((_EquipmentCosts == null)? 0 :_EquipmentCosts.size());
        int idx7 = 0;
        final int len7 = ((_ParticipantPatientCosts == null)? 0 :_ParticipantPatientCosts.size());
        int idx13 = 0;
        final int len13 = ((_OtherDirectCosts == null)? 0 :_OtherDirectCosts.size());
        int idx14 = 0;
        final int len14 = ((_SalariesAndWages == null)? 0 :_SalariesAndWages.size());
        while (idx14 != len14) {
            if (_SalariesAndWages.get(idx14) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SalariesAndWages.get(idx14 ++)), "SalariesAndWages");
            } else {
                idx14 += 1;
            }
        }
        while (idx5 != len5) {
            if (_EquipmentCosts.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _EquipmentCosts.get(idx5 ++)), "EquipmentCosts");
            } else {
                idx5 += 1;
            }
        }
        while (idx1 != len1) {
            if (_TravelCosts.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _TravelCosts.get(idx1 ++)), "TravelCosts");
            } else {
                idx1 += 1;
            }
        }
        while (idx7 != len7) {
            if (_ParticipantPatientCosts.get(idx7) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ParticipantPatientCosts.get(idx7 ++)), "ParticipantPatientCosts");
            } else {
                idx7 += 1;
            }
        }
        while (idx13 != len13) {
            if (_OtherDirectCosts.get(idx13) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _OtherDirectCosts.get(idx13 ++)), "OtherDirectCosts");
            } else {
                idx13 += 1;
            }
        }
    }

    public void serializeURIs(edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_TravelCosts == null)? 0 :_TravelCosts.size());
        int idx5 = 0;
        final int len5 = ((_EquipmentCosts == null)? 0 :_EquipmentCosts.size());
        int idx7 = 0;
        final int len7 = ((_ParticipantPatientCosts == null)? 0 :_ParticipantPatientCosts.size());
        int idx13 = 0;
        final int len13 = ((_OtherDirectCosts == null)? 0 :_OtherDirectCosts.size());
        int idx14 = 0;
        final int len14 = ((_SalariesAndWages == null)? 0 :_SalariesAndWages.size());
        while (idx14 != len14) {
            if (_SalariesAndWages.get(idx14) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SalariesAndWages.get(idx14 ++)), "SalariesAndWages");
            } else {
                idx14 += 1;
            }
        }
        while (idx5 != len5) {
            if (_EquipmentCosts.get(idx5) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _EquipmentCosts.get(idx5 ++)), "EquipmentCosts");
            } else {
                idx5 += 1;
            }
        }
        while (idx1 != len1) {
            if (_TravelCosts.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _TravelCosts.get(idx1 ++)), "TravelCosts");
            } else {
                idx1 += 1;
            }
        }
        while (idx7 != len7) {
            if (_ParticipantPatientCosts.get(idx7) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ParticipantPatientCosts.get(idx7 ++)), "ParticipantPatientCosts");
            } else {
                idx7 += 1;
            }
        }
        while (idx13 != len13) {
            if (_OtherDirectCosts.get(idx13) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _OtherDirectCosts.get(idx13 ++)), "OtherDirectCosts");
            } else {
                idx13 += 1;
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (edu.mit.coeus.utils.xml.bean.proposal.rar.BudgetPeriodType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv.grammar.trex.Ele"
+"mentPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/Na"
+"meClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aigno"
+"reUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000pps"
+"r\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxn"
+"g/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/uti"
+"l/StringPair;xq\u0000~\u0000\u0003ppsr\u0000$com.sun.msv.datatype.xsd.IntegerTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099"
+"\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDataty"
+"peImpl;xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'"
+"com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespa"
+"ceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000%L\u0000\nwhiteSpacet\u0000.Lc"
+"om/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www."
+"w3.org/2001/XMLSchemat\u0000\u0007integersr\u00005com.sun.msv.datatype.xsd."
+"WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datat"
+"ype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000,com.sun.msv.data"
+"type.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.m"
+"sv.datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000"
+"\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000"
+"\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000!L\u0000\fconcret"
+"eTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq"
+"\u0000~\u0000%xq\u0000~\u0000$ppq\u0000~\u0000,\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\"q\u0000~\u0000(t\u0000\u0007decimalq\u0000~\u0000,q\u0000~\u00003t\u0000\u000efractionDigits\u0000\u0000\u0000"
+"\u0000sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\u001bco"
+"m.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000%L\u0000\fname"
+"spaceURIq\u0000~\u0000%xpq\u0000~\u0000)q\u0000~\u0000(sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0017xq\u0000~\u0000\u0003q\u0000~\u00009psq\u0000~\u0000\u001bppsr\u0000\"com."
+"sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\"q\u0000~\u0000(t\u0000\u0005QName"
+"q\u0000~\u0000,q\u0000~\u00007sq\u0000~\u0000:q\u0000~\u0000Cq\u0000~\u0000(sr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000%L\u0000\fnamespaceURIq\u0000~\u0000%xr\u0000\u001dcom"
+".sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www."
+"w3.org/2001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expres"
+"sion$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u00008\u0001q\u0000~\u0000Ksq\u0000~\u0000Et\u0000\u000e"
+"BudgetPeriodIDt\u0000\u0000sq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001bppsr\u0000!com.sun.msv.da"
+"tatype.xsd.DateType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.D"
+"ateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000\"q\u0000~\u0000(t\u0000\u0004dateq\u0000~\u0000,q\u0000~\u00007sq\u0000~\u0000:"
+"q\u0000~\u0000Vq\u0000~\u0000(sq\u0000~\u0000<ppsq\u0000~\u0000>q\u0000~\u00009pq\u0000~\u0000@q\u0000~\u0000Gq\u0000~\u0000Ksq\u0000~\u0000Et\u0000\tStartD"
+"ateq\u0000~\u0000Osq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Rsq\u0000~\u0000<ppsq\u0000~\u0000>q\u0000~\u00009pq\u0000~\u0000@q\u0000~\u0000G"
+"q\u0000~\u0000Ksq\u0000~\u0000Et\u0000\u0007EndDateq\u0000~\u0000Osq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001bppsr\u0000\'com.s"
+"un.msv.datatype.xsd.FinalComponent\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\nfinalValuexr"
+"\u0000\u001ecom.sun.msv.datatype.xsd.Proxy\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTypeq\u0000~\u0000!x"
+"q\u0000~\u0000$t\u00009http://era.nih.gov/Projectmgmt/SBIR/CGAP/common.name"
+"spacet\u0000\fCurrencyTypeq\u0000~\u0000,q\u0000~\u00003\u0000\u0000\u0000\u0000q\u0000~\u00007sq\u0000~\u0000:q\u0000~\u00004q\u0000~\u0000hsq\u0000~\u0000"
+"<ppsq\u0000~\u0000>q\u0000~\u00009pq\u0000~\u0000@q\u0000~\u0000Gq\u0000~\u0000Ksq\u0000~\u0000Et\u0000\rProgramIncomeq\u0000~\u0000Osq\u0000"
+"~\u0000\u0016pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000dsq\u0000~\u0000<ppsq\u0000~\u0000>q\u0000~\u00009pq\u0000~\u0000@q\u0000~\u0000Gq\u0000~\u0000Ksq\u0000~\u0000E"
+"t\u0000\u0003Feeq\u0000~\u0000Osq\u0000~\u0000<ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002"
+"xq\u0000~\u0000\u0003q\u0000~\u00009psq\u0000~\u0000<q\u0000~\u00009psq\u0000~\u0000\u0016q\u0000~\u00009p\u0000sq\u0000~\u0000<ppsq\u0000~\u0000vq\u0000~\u00009psq\u0000"
+"~\u0000>q\u0000~\u00009psr\u00002com.sun.msv.grammar.Expression$AnyStringExpress"
+"ion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000Lq\u0000~\u0000\u007fsr\u0000 com.sun.msv.grammar.AnyNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Fq\u0000~\u0000Ksq\u0000~\u0000Et\u0000:edu.mit.coeus.utils.xml"
+".bean.proposal.rar.SalariesAndWagest\u0000+http://java.sun.com/ja"
+"xb/xjc/dummy-elementssq\u0000~\u0000\u0016q\u0000~\u00009p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000<pps"
+"q\u0000~\u0000vq\u0000~\u00009psq\u0000~\u0000>q\u0000~\u00009pq\u0000~\u0000\u007fq\u0000~\u0000\u0081q\u0000~\u0000Ksq\u0000~\u0000Et\u0000>edu.mit.coeus"
+".utils.xml.bean.proposal.rar.SalariesAndWagesTypeq\u0000~\u0000\u0084sq\u0000~\u0000<"
+"ppsq\u0000~\u0000>q\u0000~\u00009pq\u0000~\u0000@q\u0000~\u0000Gq\u0000~\u0000Ksq\u0000~\u0000Et\u0000\u0010SalariesAndWagest\u0000Ehtt"
+"p://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.nam"
+"espaceq\u0000~\u0000Ksq\u0000~\u0000<ppsq\u0000~\u0000vq\u0000~\u00009psq\u0000~\u0000<q\u0000~\u00009psq\u0000~\u0000\u0016q\u0000~\u00009p\u0000sq\u0000~"
+"\u0000<ppsq\u0000~\u0000vq\u0000~\u00009psq\u0000~\u0000>q\u0000~\u00009pq\u0000~\u0000\u007fq\u0000~\u0000\u0081q\u0000~\u0000Ksq\u0000~\u0000Et\u00008edu.mit."
+"coeus.utils.xml.bean.proposal.rar.EquipmentCostsq\u0000~\u0000\u0084sq\u0000~\u0000\u0016q"
+"\u0000~\u00009p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000<ppsq\u0000~\u0000vq\u0000~\u00009psq\u0000~\u0000>q\u0000~\u00009pq\u0000~\u0000\u007f"
+"q\u0000~\u0000\u0081q\u0000~\u0000Ksq\u0000~\u0000Et\u0000<edu.mit.coeus.utils.xml.bean.proposal.rar"
+".EquipmentCostsTypeq\u0000~\u0000\u0084sq\u0000~\u0000<ppsq\u0000~\u0000>q\u0000~\u00009pq\u0000~\u0000@q\u0000~\u0000Gq\u0000~\u0000Ks"
+"q\u0000~\u0000Et\u0000\u000eEquipmentCostsq\u0000~\u0000\u0091q\u0000~\u0000Ksq\u0000~\u0000<ppsq\u0000~\u0000\u0000q\u0000~\u00009psq\u0000~\u0000<q\u0000"
+"~\u00009psq\u0000~\u0000\u0016q\u0000~\u00009p\u0000sq\u0000~\u0000<ppsq\u0000~\u0000vq\u0000~\u00009psq\u0000~\u0000>q\u0000~\u00009pq\u0000~\u0000\u007fq\u0000~\u0000\u0081q"
+"\u0000~\u0000Ksq\u0000~\u0000Et\u00005edu.mit.coeus.utils.xml.bean.proposal.rar.Trave"
+"lCostsq\u0000~\u0000\u0084sq\u0000~\u0000\u0016q\u0000~\u00009p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000<ppsq\u0000~\u0000vq\u0000~\u00009"
+"psq\u0000~\u0000>q\u0000~\u00009pq\u0000~\u0000\u007fq\u0000~\u0000\u0081q\u0000~\u0000Ksq\u0000~\u0000Et\u00009edu.mit.coeus.utils.xml"
+".bean.proposal.rar.TravelCostsTypeq\u0000~\u0000\u0084sq\u0000~\u0000<ppsq\u0000~\u0000>q\u0000~\u00009pq"
+"\u0000~\u0000@q\u0000~\u0000Gq\u0000~\u0000Ksq\u0000~\u0000Et\u0000\u000bTravelCostsq\u0000~\u0000\u0091sq\u0000~\u0000<ppsq\u0000~\u0000<q\u0000~\u00009ps"
+"q\u0000~\u0000\u0016q\u0000~\u00009p\u0000sq\u0000~\u0000<ppsq\u0000~\u0000vq\u0000~\u00009psq\u0000~\u0000>q\u0000~\u00009pq\u0000~\u0000\u007fq\u0000~\u0000\u0081q\u0000~\u0000Ks"
+"q\u0000~\u0000Eq\u0000~\u0000\u00afq\u0000~\u0000\u0084sq\u0000~\u0000\u0016q\u0000~\u00009p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000<ppsq\u0000~\u0000vq"
+"\u0000~\u00009psq\u0000~\u0000>q\u0000~\u00009pq\u0000~\u0000\u007fq\u0000~\u0000\u0081q\u0000~\u0000Ksq\u0000~\u0000Eq\u0000~\u0000\u00b7q\u0000~\u0000\u0084sq\u0000~\u0000<ppsq\u0000~"
+"\u0000>q\u0000~\u00009pq\u0000~\u0000@q\u0000~\u0000Gq\u0000~\u0000Kq\u0000~\u0000\u00baq\u0000~\u0000Kq\u0000~\u0000Ksq\u0000~\u0000<ppsq\u0000~\u0000vq\u0000~\u00009psq"
+"\u0000~\u0000<q\u0000~\u00009psq\u0000~\u0000\u0016q\u0000~\u00009p\u0000sq\u0000~\u0000<ppsq\u0000~\u0000vq\u0000~\u00009psq\u0000~\u0000>q\u0000~\u00009pq\u0000~\u0000\u007f"
+"q\u0000~\u0000\u0081q\u0000~\u0000Ksq\u0000~\u0000Et\u0000Aedu.mit.coeus.utils.xml.bean.proposal.rar"
+".ParticipantPatientCostsq\u0000~\u0000\u0084sq\u0000~\u0000\u0016q\u0000~\u00009p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016pp\u0000s"
+"q\u0000~\u0000<ppsq\u0000~\u0000vq\u0000~\u00009psq\u0000~\u0000>q\u0000~\u00009pq\u0000~\u0000\u007fq\u0000~\u0000\u0081q\u0000~\u0000Ksq\u0000~\u0000Et\u0000Eedu.m"
+"it.coeus.utils.xml.bean.proposal.rar.ParticipantPatientCosts"
+"Typeq\u0000~\u0000\u0084sq\u0000~\u0000<ppsq\u0000~\u0000>q\u0000~\u00009pq\u0000~\u0000@q\u0000~\u0000Gq\u0000~\u0000Ksq\u0000~\u0000Et\u0000\u0017Partici"
+"pantPatientCostsq\u0000~\u0000\u0091q\u0000~\u0000Ksq\u0000~\u0000<ppsq\u0000~\u0000vq\u0000~\u00009psq\u0000~\u0000<q\u0000~\u00009psq"
+"\u0000~\u0000\u0016q\u0000~\u00009p\u0000sq\u0000~\u0000<ppsq\u0000~\u0000vq\u0000~\u00009psq\u0000~\u0000>q\u0000~\u00009pq\u0000~\u0000\u007fq\u0000~\u0000\u0081q\u0000~\u0000Ksq"
+"\u0000~\u0000Et\u0000:edu.mit.coeus.utils.xml.bean.proposal.rar.OtherDirect"
+"Costsq\u0000~\u0000\u0084sq\u0000~\u0000\u0016q\u0000~\u00009p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000<ppsq\u0000~\u0000vq\u0000~\u00009p"
+"sq\u0000~\u0000>q\u0000~\u00009pq\u0000~\u0000\u007fq\u0000~\u0000\u0081q\u0000~\u0000Ksq\u0000~\u0000Et\u0000>edu.mit.coeus.utils.xml."
+"bean.proposal.rar.OtherDirectCostsTypeq\u0000~\u0000\u0084sq\u0000~\u0000<ppsq\u0000~\u0000>q\u0000~"
+"\u00009pq\u0000~\u0000@q\u0000~\u0000Gq\u0000~\u0000Ksq\u0000~\u0000Et\u0000\u0010OtherDirectCostsq\u0000~\u0000\u0091q\u0000~\u0000Ksq\u0000~\u0000<p"
+"psq\u0000~\u0000\u0016q\u0000~\u00009p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000dsq\u0000~\u0000<ppsq\u0000~\u0000>q\u0000~\u00009pq\u0000~\u0000@q\u0000~\u0000Gq\u0000~"
+"\u0000Ksq\u0000~\u0000Et\u0000\u0012SalariesWagesTotalq\u0000~\u0000Oq\u0000~\u0000Ksq\u0000~\u0000<ppsq\u0000~\u0000\u0016q\u0000~\u00009p\u0000"
+"sq\u0000~\u0000\u0000ppq\u0000~\u0000dsq\u0000~\u0000<ppsq\u0000~\u0000>q\u0000~\u00009pq\u0000~\u0000@q\u0000~\u0000Gq\u0000~\u0000Ksq\u0000~\u0000Et\u0000\u000eEqu"
+"ipmentTotalq\u0000~\u0000Oq\u0000~\u0000Ksq\u0000~\u0000<ppsq\u0000~\u0000\u0016q\u0000~\u00009p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000dsq\u0000~\u0000"
+"<ppsq\u0000~\u0000>q\u0000~\u00009pq\u0000~\u0000@q\u0000~\u0000Gq\u0000~\u0000Ksq\u0000~\u0000Et\u0000\u000bTravelTotalq\u0000~\u0000Oq\u0000~\u0000K"
+"sq\u0000~\u0000<ppsq\u0000~\u0000\u0016q\u0000~\u00009p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000dsq\u0000~\u0000<ppsq\u0000~\u0000>q\u0000~\u00009pq\u0000~\u0000@q"
+"\u0000~\u0000Gq\u0000~\u0000Ksq\u0000~\u0000Et\u0000\u0017ParticipantPatientTotalq\u0000~\u0000Oq\u0000~\u0000Ksq\u0000~\u0000<pps"
+"q\u0000~\u0000\u0016q\u0000~\u00009p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000dsq\u0000~\u0000<ppsq\u0000~\u0000>q\u0000~\u00009pq\u0000~\u0000@q\u0000~\u0000Gq\u0000~\u0000K"
+"sq\u0000~\u0000Et\u0000\u0010OtherDirectTotalq\u0000~\u0000Oq\u0000~\u0000Ksq\u0000~\u0000<ppsq\u0000~\u0000\u0016q\u0000~\u00009p\u0000sq\u0000~"
+"\u0000\u0000ppq\u0000~\u0000dsq\u0000~\u0000<ppsq\u0000~\u0000>q\u0000~\u00009pq\u0000~\u0000@q\u0000~\u0000Gq\u0000~\u0000Ksq\u0000~\u0000Et\u0000\u0016PeriodD"
+"irectCostsTotalq\u0000~\u0000Oq\u0000~\u0000Ksq\u0000~\u0000\u0016pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000dsq\u0000~\u0000<ppsq\u0000~\u0000"
+">q\u0000~\u00009pq\u0000~\u0000@q\u0000~\u0000Gq\u0000~\u0000Ksq\u0000~\u0000Et\u0000\u0012IndirectCostsTotalq\u0000~\u0000Osq\u0000~\u0000<"
+"ppsq\u0000~\u0000\u0016q\u0000~\u00009p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000dsq\u0000~\u0000<ppsq\u0000~\u0000>q\u0000~\u00009pq\u0000~\u0000@q\u0000~\u0000Gq\u0000"
+"~\u0000Ksq\u0000~\u0000Et\u0000\u0010PeriodCostsTotalq\u0000~\u0000Oq\u0000~\u0000Ksr\u0000\"com.sun.msv.gramma"
+"r.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gramma"
+"r/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expres"
+"sionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006par"
+"entt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000g\u0001pq\u0000~\u0000\u00eeq\u0000~\u0000\u0005"
+"q\u0000~\u0000\fq\u0000~\u0000\u00a7q\u0000~\u0000\u000eq\u0000~\u0000\u0013q\u0000~\u0000\u00c4q\u0000~\u0000\u00b1q\u0000~\u0000\u009cq\u0000~\u0000\u0086q\u0000~\u0000\u00d6q\u0000~\u0000\u00ebq\u0000~\u0000\u00bdq\u0000~\u0000\u00a9"
+"q\u0000~\u0000\u0094q\u0000~\u0000yq\u0000~\u0000\u00ceq\u0000~\u0000\u00e3q\u0000~\u0000\tq\u0000~\u0000\u0093q\u0000~\u0000xq\u0000~\u0000\u0092q\u0000~\u0000uq\u0000~\u0000\u00cdq\u0000~\u0000\u00ccq\u0000~\u0000\u00e2"
+"q\u0000~\u0000\u00e1q\u0000~\u0000\rq\u0000~\u0000\u0007q\u0000~\u0000\u000fq\u0000~\u0000\u000bq\u0000~\u0000\u00d8q\u0000~\u0000\u00d0q\u0000~\u0000\u00c6q\u0000~\u0000\u00bfq\u0000~\u0000\u00b3q\u0000~\u0000\u00abq\u0000~\u0000\u009e"
+"q\u0000~\u0000\u0096q\u0000~\u0000\u0088q\u0000~\u0000{q\u0000~\u0000\u00e5q\u0000~\u0000\u00edq\u0000~\u0000\u0011q\u0000~\u0000\u0015q\u0000~\u0000\nq\u0000~\u0000\u0012q\u0000~\u0000pq\u0000~\u0000cq\u0000~\u0000\u00f8"
+"q\u0000~\u0000\u00ffq\u0000~\u0001\u0006q\u0000~\u0001\rq\u0000~\u0001\u0014q\u0000~\u0001\u001bq\u0000~\u0001!q\u0000~\u0000\u0006q\u0000~\u0001(q\u0000~\u0000\u00ddq\u0000~\u0000\u00caq\u0000~\u0000\u00b8q\u0000~\u0000\u00a3"
+"q\u0000~\u0000\u008dq\u0000~\u0000qq\u0000~\u0000kq\u0000~\u0000^q\u0000~\u0000Xq\u0000~\u0000=q\u0000~\u0000]q\u0000~\u0000Qq\u0000~\u0000\u0010q\u0000~\u0000\u00f2q\u0000~\u0000\u00f9q\u0000~\u0001\u0000"
+"q\u0000~\u0001\u0007q\u0000~\u0001\u000eq\u0000~\u0001\u0015q\u0000~\u0001\u001cq\u0000~\u0001\"q\u0000~\u0001)q\u0000~\u0000\u001aq\u0000~\u0000\u0014q\u0000~\u0000\u00bcq\u0000~\u0000\u00f6q\u0000~\u0000\u00fdq\u0000~\u0001\u0004"
+"q\u0000~\u0001\u000bq\u0000~\u0001\u0012q\u0000~\u0001\u0019q\u0000~\u0001&q\u0000~\u0000\bq\u0000~\u0000\u00a8q\u0000~\u0000\u00d9q\u0000~\u0000\u00d1q\u0000~\u0000\u00c7q\u0000~\u0000\u00c0q\u0000~\u0000\u00b4q\u0000~\u0000\u00ac"
+"q\u0000~\u0000\u009fq\u0000~\u0000\u0097q\u0000~\u0000\u0089q\u0000~\u0000|q\u0000~\u0000\u00e6x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.UnmarshallingContext context) {
            super(context, "------------------------------------------------------");
        }

        protected Unmarshaller(edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return edu.mit.coeus.utils.xml.bean.proposal.rar.impl.BudgetPeriodTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  51 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  15 :
                        if (("SalariesAndWages" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            _getSalariesAndWages().add(((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.SalariesAndWagesImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.SalariesAndWagesImpl.class), 18, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SalariesAndWages" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  36 :
                        if (("ParticipantPatientTotal" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 37;
                            return ;
                        }
                        state = 39;
                        continue outer;
                    case  52 :
                        if (("Type" == ___local)&&("" == ___uri)) {
                            _getTravelCosts().add(((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.TravelCostsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.TravelCostsTypeImpl.class), 53, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("BudgetPeriodID" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        break;
                    case  30 :
                        if (("EquipmentTotal" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        state = 33;
                        continue outer;
                    case  6 :
                        if (("EndDate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        break;
                    case  23 :
                        if (("Type" == ___local)&&("" == ___uri)) {
                            _getParticipantPatientCosts().add(((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.ParticipantPatientCostsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.ParticipantPatientCostsTypeImpl.class), 24, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  9 :
                        if (("ProgramIncome" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        break;
                    case  21 :
                        if (("EquipmentCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            _getEquipmentCosts().add(((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.EquipmentCostsImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.EquipmentCostsImpl.class), 21, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("EquipmentCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 19;
                            return ;
                        }
                        if (("TravelCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            _getTravelCosts().add(((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.TravelCostsImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.TravelCostsImpl.class), 21, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TravelCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 52;
                            return ;
                        }
                        if (("ParticipantPatientCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            _getParticipantPatientCosts().add(((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.ParticipantPatientCostsImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.ParticipantPatientCostsImpl.class), 22, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ParticipantPatientCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 23;
                            return ;
                        }
                        state = 22;
                        continue outer;
                    case  19 :
                        if (("Description" == ___local)&&("" == ___uri)) {
                            _getEquipmentCosts().add(((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.EquipmentCostsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.EquipmentCostsTypeImpl.class), 20, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  22 :
                        if (("ParticipantPatientCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            _getParticipantPatientCosts().add(((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.ParticipantPatientCostsImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.ParticipantPatientCostsImpl.class), 22, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ParticipantPatientCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 23;
                            return ;
                        }
                        if (("OtherDirectCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            _getOtherDirectCosts().add(((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.OtherDirectCostsImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.OtherDirectCostsImpl.class), 25, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OtherDirectCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 26;
                            return ;
                        }
                        state = 25;
                        continue outer;
                    case  18 :
                        if (("SalariesAndWages" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            _getSalariesAndWages().add(((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.SalariesAndWagesImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.SalariesAndWagesImpl.class), 18, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SalariesAndWages" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        if (("EquipmentCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            _getEquipmentCosts().add(((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.EquipmentCostsImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.EquipmentCostsImpl.class), 21, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("EquipmentCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  45 :
                        if (("IndirectCostsTotal" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 46;
                            return ;
                        }
                        break;
                    case  42 :
                        if (("PeriodDirectCostsTotal" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 43;
                            return ;
                        }
                        state = 45;
                        continue outer;
                    case  25 :
                        if (("OtherDirectCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            _getOtherDirectCosts().add(((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.OtherDirectCostsImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.OtherDirectCostsImpl.class), 25, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OtherDirectCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 26;
                            return ;
                        }
                        if (("SalariesWagesTotal" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  26 :
                        if (("Type" == ___local)&&("" == ___uri)) {
                            _getOtherDirectCosts().add(((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.OtherDirectCostsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.OtherDirectCostsTypeImpl.class), 27, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  39 :
                        if (("OtherDirectTotal" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 40;
                            return ;
                        }
                        state = 42;
                        continue outer;
                    case  3 :
                        if (("StartDate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        break;
                    case  16 :
                        if (("Name" == ___local)&&("" == ___uri)) {
                            _getSalariesAndWages().add(((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.SalariesAndWagesTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.proposal.rar.impl.SalariesAndWagesTypeImpl.class), 17, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  48 :
                        if (("PeriodCostsTotal" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 49;
                            return ;
                        }
                        state = 51;
                        continue outer;
                    case  12 :
                        if (("Fee" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        break;
                    case  33 :
                        if (("TravelTotal" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 34;
                            return ;
                        }
                        state = 36;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  51 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  14 :
                        if (("Fee" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  29 :
                        if (("SalariesWagesTotal" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("ProgramIncome" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  20 :
                        if (("EquipmentCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  24 :
                        if (("ParticipantPatientCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            context.popAttributes();
                            state = 22;
                            return ;
                        }
                        break;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  47 :
                        if (("IndirectCostsTotal" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 48;
                            return ;
                        }
                        break;
                    case  35 :
                        if (("TravelTotal" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 36;
                            return ;
                        }
                        break;
                    case  21 :
                        state = 22;
                        continue outer;
                    case  53 :
                        if (("TravelCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  32 :
                        if (("EquipmentTotal" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("StartDate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  22 :
                        state = 25;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  38 :
                        if (("ParticipantPatientTotal" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 39;
                            return ;
                        }
                        break;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  25 :
                        state = 30;
                        continue outer;
                    case  2 :
                        if (("BudgetPeriodID" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  27 :
                        if (("OtherDirectCosts" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            context.popAttributes();
                            state = 25;
                            return ;
                        }
                        break;
                    case  41 :
                        if (("OtherDirectTotal" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 42;
                            return ;
                        }
                        break;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  50 :
                        if (("PeriodCostsTotal" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 51;
                            return ;
                        }
                        break;
                    case  44 :
                        if (("PeriodDirectCostsTotal" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 45;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("EndDate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  17 :
                        if (("SalariesAndWages" == ___local)&&("http://era.nih.gov/Projectmgmt/SBIR/CGAP/researchandrelated.namespace" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  33 :
                        state = 36;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  51 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  21 :
                        state = 22;
                        continue outer;
                    case  22 :
                        state = 25;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  25 :
                        state = 30;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  51 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  21 :
                        state = 22;
                        continue outer;
                    case  22 :
                        state = 25;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  25 :
                        state = 30;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  37 :
                            eatText1(value);
                            state = 38;
                            return ;
                        case  51 :
                            revertToParentFromText(value);
                            return ;
                        case  4 :
                            eatText2(value);
                            state = 5;
                            return ;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  36 :
                            state = 39;
                            continue outer;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  21 :
                            state = 22;
                            continue outer;
                        case  31 :
                            eatText3(value);
                            state = 32;
                            return ;
                        case  40 :
                            eatText4(value);
                            state = 41;
                            return ;
                        case  22 :
                            state = 25;
                            continue outer;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  42 :
                            state = 45;
                            continue outer;
                        case  25 :
                            state = 30;
                            continue outer;
                        case  46 :
                            eatText5(value);
                            state = 47;
                            return ;
                        case  34 :
                            eatText6(value);
                            state = 35;
                            return ;
                        case  10 :
                            eatText7(value);
                            state = 11;
                            return ;
                        case  39 :
                            state = 42;
                            continue outer;
                        case  49 :
                            eatText8(value);
                            state = 50;
                            return ;
                        case  1 :
                            eatText9(value);
                            state = 2;
                            return ;
                        case  48 :
                            state = 51;
                            continue outer;
                        case  43 :
                            eatText10(value);
                            state = 44;
                            return ;
                        case  28 :
                            eatText11(value);
                            state = 29;
                            return ;
                        case  7 :
                            eatText12(value);
                            state = 8;
                            return ;
                        case  13 :
                            eatText13(value);
                            state = 14;
                            return ;
                        case  33 :
                            state = 36;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ParticipantPatientTotal = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _StartDate = javax.xml.bind.DatatypeConverter.parseDate(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _EquipmentTotal = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _OtherDirectTotal = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IndirectCostsTotal = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _TravelTotal = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ProgramIncome = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PeriodCostsTotal = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _BudgetPeriodID = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PeriodDirectCostsTotal = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SalariesWagesTotal = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _EndDate = javax.xml.bind.DatatypeConverter.parseDate(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText13(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Fee = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
