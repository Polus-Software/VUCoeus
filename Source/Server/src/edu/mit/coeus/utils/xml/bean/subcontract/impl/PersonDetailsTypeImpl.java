//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.06.05 at 06:30:57 PM GMT+05:30 
//


package edu.mit.coeus.utils.xml.bean.subcontract.impl;

public class PersonDetailsTypeImpl implements edu.mit.coeus.utils.xml.bean.subcontract.PersonDetailsType, com.sun.xml.bind.JAXBObject, edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.UnmarshallableObject, edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.XMLSerializable, edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.ValidatableObject
{

    protected java.lang.String _IsMedicalStaff;
    protected java.lang.String _CountryOfCitizenship;
    protected java.lang.String _HandicapType;
    protected java.lang.String _VeteranType;
    protected java.lang.String _IsSupportStaff;
    protected java.lang.String _LastName;
    protected java.lang.String _DirectoryDepartment;
    protected java.lang.String _EmailAddress;
    protected java.lang.String _IdVerified;
    protected java.lang.String _School;
    protected java.lang.String _IsOnSabbatical;
    protected java.lang.String _IsServiceStaff;
    protected java.lang.String _Race;
    protected java.lang.String _Salutation;
    protected java.util.Calendar _DateOfBirth;
    protected java.lang.String _DirectoryTitle;
    protected java.lang.String _PersonId;
    protected java.lang.String _Gender;
    protected java.lang.String _VacationAccural;
    protected java.lang.String _IsOtherAccademicGroup;
    protected java.lang.String _AddressLine1;
    protected java.lang.String _AddressLine2;
    protected java.lang.String _IdProvided;
    protected java.lang.String _AddressLine3;
    protected java.lang.String _VisaType;
    protected java.lang.String _Major;
    protected boolean has_Age;
    protected int _Age;
    protected java.lang.String _HomeUnit;
    protected java.lang.String _PagerNumber;
    protected java.lang.String _HasVisa;
    protected java.lang.String _IsFaculty;
    protected java.lang.String _UserName;
    protected java.lang.String _EducationLevel;
    protected java.lang.String _PriorName;
    protected java.util.Calendar _VisaRenewalDate;
    protected java.lang.String _FaxNumber;
    protected java.lang.String _IsVeteran;
    protected java.lang.String _FullName;
    protected java.lang.String _EraCommonsUserName;
    protected java.lang.String _FirstName;
    protected java.lang.String _CountryCode;
    protected java.lang.String _DepartmentName;
    protected java.lang.String _UpdateUser;
    protected java.lang.String _IsGraduateStudentStaff;
    protected java.lang.String _SSN;
    protected java.util.Calendar _UpdateTimestamp;
    protected java.lang.String _SecondryOfficeLocation;
    protected java.lang.String _PrimaryTitle;
    protected java.lang.String _IsResearchStaff;
    protected java.lang.String _YearGraduated;
    protected java.lang.String _City;
    protected java.lang.String _Status;
    protected java.lang.String _MobilePhoneNumber;
    protected java.lang.String _PostalCode;
    protected java.lang.String _County;
    protected java.lang.String _MiddleName;
    protected java.lang.String _State;
    protected java.lang.String _OfficePhone;
    protected java.lang.String _IsHandicapped;
    protected java.lang.String _Degree;
    protected java.lang.String _SecondryOfficePhone;
    protected java.lang.String _OfficeLocation;
    protected boolean has_AgeByFiscalYear;
    protected int _AgeByFiscalYear;
    public final static java.lang.Class version = (edu.mit.coeus.utils.xml.bean.subcontract.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (edu.mit.coeus.utils.xml.bean.subcontract.PersonDetailsType.class);
    }

    public java.lang.String getIsMedicalStaff() {
        return _IsMedicalStaff;
    }

    public void setIsMedicalStaff(java.lang.String value) {
        _IsMedicalStaff = value;
    }

    public java.lang.String getCountryOfCitizenship() {
        return _CountryOfCitizenship;
    }

    public void setCountryOfCitizenship(java.lang.String value) {
        _CountryOfCitizenship = value;
    }

    public java.lang.String getHandicapType() {
        return _HandicapType;
    }

    public void setHandicapType(java.lang.String value) {
        _HandicapType = value;
    }

    public java.lang.String getVeteranType() {
        return _VeteranType;
    }

    public void setVeteranType(java.lang.String value) {
        _VeteranType = value;
    }

    public java.lang.String getIsSupportStaff() {
        return _IsSupportStaff;
    }

    public void setIsSupportStaff(java.lang.String value) {
        _IsSupportStaff = value;
    }

    public java.lang.String getLastName() {
        return _LastName;
    }

    public void setLastName(java.lang.String value) {
        _LastName = value;
    }

    public java.lang.String getDirectoryDepartment() {
        return _DirectoryDepartment;
    }

    public void setDirectoryDepartment(java.lang.String value) {
        _DirectoryDepartment = value;
    }

    public java.lang.String getEmailAddress() {
        return _EmailAddress;
    }

    public void setEmailAddress(java.lang.String value) {
        _EmailAddress = value;
    }

    public java.lang.String getIdVerified() {
        return _IdVerified;
    }

    public void setIdVerified(java.lang.String value) {
        _IdVerified = value;
    }

    public java.lang.String getSchool() {
        return _School;
    }

    public void setSchool(java.lang.String value) {
        _School = value;
    }

    public java.lang.String getIsOnSabbatical() {
        return _IsOnSabbatical;
    }

    public void setIsOnSabbatical(java.lang.String value) {
        _IsOnSabbatical = value;
    }

    public java.lang.String getIsServiceStaff() {
        return _IsServiceStaff;
    }

    public void setIsServiceStaff(java.lang.String value) {
        _IsServiceStaff = value;
    }

    public java.lang.String getRace() {
        return _Race;
    }

    public void setRace(java.lang.String value) {
        _Race = value;
    }

    public java.lang.String getSalutation() {
        return _Salutation;
    }

    public void setSalutation(java.lang.String value) {
        _Salutation = value;
    }

    public java.util.Calendar getDateOfBirth() {
        return _DateOfBirth;
    }

    public void setDateOfBirth(java.util.Calendar value) {
        _DateOfBirth = value;
    }

    public java.lang.String getDirectoryTitle() {
        return _DirectoryTitle;
    }

    public void setDirectoryTitle(java.lang.String value) {
        _DirectoryTitle = value;
    }

    public java.lang.String getPersonId() {
        return _PersonId;
    }

    public void setPersonId(java.lang.String value) {
        _PersonId = value;
    }

    public java.lang.String getGender() {
        return _Gender;
    }

    public void setGender(java.lang.String value) {
        _Gender = value;
    }

    public java.lang.String getVacationAccural() {
        return _VacationAccural;
    }

    public void setVacationAccural(java.lang.String value) {
        _VacationAccural = value;
    }

    public java.lang.String getIsOtherAccademicGroup() {
        return _IsOtherAccademicGroup;
    }

    public void setIsOtherAccademicGroup(java.lang.String value) {
        _IsOtherAccademicGroup = value;
    }

    public java.lang.String getAddressLine1() {
        return _AddressLine1;
    }

    public void setAddressLine1(java.lang.String value) {
        _AddressLine1 = value;
    }

    public java.lang.String getAddressLine2() {
        return _AddressLine2;
    }

    public void setAddressLine2(java.lang.String value) {
        _AddressLine2 = value;
    }

    public java.lang.String getIdProvided() {
        return _IdProvided;
    }

    public void setIdProvided(java.lang.String value) {
        _IdProvided = value;
    }

    public java.lang.String getAddressLine3() {
        return _AddressLine3;
    }

    public void setAddressLine3(java.lang.String value) {
        _AddressLine3 = value;
    }

    public java.lang.String getVisaType() {
        return _VisaType;
    }

    public void setVisaType(java.lang.String value) {
        _VisaType = value;
    }

    public java.lang.String getMajor() {
        return _Major;
    }

    public void setMajor(java.lang.String value) {
        _Major = value;
    }

    public int getAge() {
        return _Age;
    }

    public void setAge(int value) {
        _Age = value;
        has_Age = true;
    }

    public java.lang.String getHomeUnit() {
        return _HomeUnit;
    }

    public void setHomeUnit(java.lang.String value) {
        _HomeUnit = value;
    }

    public java.lang.String getPagerNumber() {
        return _PagerNumber;
    }

    public void setPagerNumber(java.lang.String value) {
        _PagerNumber = value;
    }

    public java.lang.String getHasVisa() {
        return _HasVisa;
    }

    public void setHasVisa(java.lang.String value) {
        _HasVisa = value;
    }

    public java.lang.String getIsFaculty() {
        return _IsFaculty;
    }

    public void setIsFaculty(java.lang.String value) {
        _IsFaculty = value;
    }

    public java.lang.String getUserName() {
        return _UserName;
    }

    public void setUserName(java.lang.String value) {
        _UserName = value;
    }

    public java.lang.String getEducationLevel() {
        return _EducationLevel;
    }

    public void setEducationLevel(java.lang.String value) {
        _EducationLevel = value;
    }

    public java.lang.String getPriorName() {
        return _PriorName;
    }

    public void setPriorName(java.lang.String value) {
        _PriorName = value;
    }

    public java.util.Calendar getVisaRenewalDate() {
        return _VisaRenewalDate;
    }

    public void setVisaRenewalDate(java.util.Calendar value) {
        _VisaRenewalDate = value;
    }

    public java.lang.String getFaxNumber() {
        return _FaxNumber;
    }

    public void setFaxNumber(java.lang.String value) {
        _FaxNumber = value;
    }

    public java.lang.String getIsVeteran() {
        return _IsVeteran;
    }

    public void setIsVeteran(java.lang.String value) {
        _IsVeteran = value;
    }

    public java.lang.String getFullName() {
        return _FullName;
    }

    public void setFullName(java.lang.String value) {
        _FullName = value;
    }

    public java.lang.String getEraCommonsUserName() {
        return _EraCommonsUserName;
    }

    public void setEraCommonsUserName(java.lang.String value) {
        _EraCommonsUserName = value;
    }

    public java.lang.String getFirstName() {
        return _FirstName;
    }

    public void setFirstName(java.lang.String value) {
        _FirstName = value;
    }

    public java.lang.String getCountryCode() {
        return _CountryCode;
    }

    public void setCountryCode(java.lang.String value) {
        _CountryCode = value;
    }

    public java.lang.String getDepartmentName() {
        return _DepartmentName;
    }

    public void setDepartmentName(java.lang.String value) {
        _DepartmentName = value;
    }

    public java.lang.String getUpdateUser() {
        return _UpdateUser;
    }

    public void setUpdateUser(java.lang.String value) {
        _UpdateUser = value;
    }

    public java.lang.String getIsGraduateStudentStaff() {
        return _IsGraduateStudentStaff;
    }

    public void setIsGraduateStudentStaff(java.lang.String value) {
        _IsGraduateStudentStaff = value;
    }

    public java.lang.String getSSN() {
        return _SSN;
    }

    public void setSSN(java.lang.String value) {
        _SSN = value;
    }

    public java.util.Calendar getUpdateTimestamp() {
        return _UpdateTimestamp;
    }

    public void setUpdateTimestamp(java.util.Calendar value) {
        _UpdateTimestamp = value;
    }

    public java.lang.String getSecondryOfficeLocation() {
        return _SecondryOfficeLocation;
    }

    public void setSecondryOfficeLocation(java.lang.String value) {
        _SecondryOfficeLocation = value;
    }

    public java.lang.String getPrimaryTitle() {
        return _PrimaryTitle;
    }

    public void setPrimaryTitle(java.lang.String value) {
        _PrimaryTitle = value;
    }

    public java.lang.String getIsResearchStaff() {
        return _IsResearchStaff;
    }

    public void setIsResearchStaff(java.lang.String value) {
        _IsResearchStaff = value;
    }

    public java.lang.String getYearGraduated() {
        return _YearGraduated;
    }

    public void setYearGraduated(java.lang.String value) {
        _YearGraduated = value;
    }

    public java.lang.String getCity() {
        return _City;
    }

    public void setCity(java.lang.String value) {
        _City = value;
    }

    public java.lang.String getStatus() {
        return _Status;
    }

    public void setStatus(java.lang.String value) {
        _Status = value;
    }

    public java.lang.String getMobilePhoneNumber() {
        return _MobilePhoneNumber;
    }

    public void setMobilePhoneNumber(java.lang.String value) {
        _MobilePhoneNumber = value;
    }

    public java.lang.String getPostalCode() {
        return _PostalCode;
    }

    public void setPostalCode(java.lang.String value) {
        _PostalCode = value;
    }

    public java.lang.String getCounty() {
        return _County;
    }

    public void setCounty(java.lang.String value) {
        _County = value;
    }

    public java.lang.String getMiddleName() {
        return _MiddleName;
    }

    public void setMiddleName(java.lang.String value) {
        _MiddleName = value;
    }

    public java.lang.String getState() {
        return _State;
    }

    public void setState(java.lang.String value) {
        _State = value;
    }

    public java.lang.String getOfficePhone() {
        return _OfficePhone;
    }

    public void setOfficePhone(java.lang.String value) {
        _OfficePhone = value;
    }

    public java.lang.String getIsHandicapped() {
        return _IsHandicapped;
    }

    public void setIsHandicapped(java.lang.String value) {
        _IsHandicapped = value;
    }

    public java.lang.String getDegree() {
        return _Degree;
    }

    public void setDegree(java.lang.String value) {
        _Degree = value;
    }

    public java.lang.String getSecondryOfficePhone() {
        return _SecondryOfficePhone;
    }

    public void setSecondryOfficePhone(java.lang.String value) {
        _SecondryOfficePhone = value;
    }

    public java.lang.String getOfficeLocation() {
        return _OfficeLocation;
    }

    public void setOfficeLocation(java.lang.String value) {
        _OfficeLocation = value;
    }

    public int getAgeByFiscalYear() {
        return _AgeByFiscalYear;
    }

    public void setAgeByFiscalYear(int value) {
        _AgeByFiscalYear = value;
        has_AgeByFiscalYear = true;
    }

    public edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.UnmarshallingEventHandler createUnmarshaller(edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.UnmarshallingContext context) {
        return new edu.mit.coeus.utils.xml.bean.subcontract.impl.PersonDetailsTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_PersonId!= null) {
            context.startElement("", "PersonId");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PersonId), "PersonId");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_SSN!= null) {
            context.startElement("", "SSN");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _SSN), "SSN");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_LastName!= null) {
            context.startElement("", "LastName");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _LastName), "LastName");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_FirstName!= null) {
            context.startElement("", "FirstName");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _FirstName), "FirstName");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MiddleName!= null) {
            context.startElement("", "MiddleName");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MiddleName), "MiddleName");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_FullName!= null) {
            context.startElement("", "FullName");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _FullName), "FullName");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PriorName!= null) {
            context.startElement("", "PriorName");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PriorName), "PriorName");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_UserName!= null) {
            context.startElement("", "UserName");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _UserName), "UserName");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_EmailAddress!= null) {
            context.startElement("", "EmailAddress");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _EmailAddress), "EmailAddress");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_DateOfBirth!= null) {
            context.startElement("", "DateOfBirth");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDate(((java.util.Calendar) _DateOfBirth)), "DateOfBirth");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_Age) {
            context.startElement("", "Age");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _Age)), "Age");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_AgeByFiscalYear) {
            context.startElement("", "AgeByFiscalYear");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _AgeByFiscalYear)), "AgeByFiscalYear");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Gender!= null) {
            context.startElement("", "Gender");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Gender), "Gender");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Race!= null) {
            context.startElement("", "Race");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Race), "Race");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_EducationLevel!= null) {
            context.startElement("", "EducationLevel");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _EducationLevel), "EducationLevel");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Degree!= null) {
            context.startElement("", "Degree");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Degree), "Degree");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Major!= null) {
            context.startElement("", "Major");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Major), "Major");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_IsHandicapped!= null) {
            context.startElement("", "IsHandicapped");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _IsHandicapped), "IsHandicapped");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_HandicapType!= null) {
            context.startElement("", "HandicapType");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _HandicapType), "HandicapType");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_IsVeteran!= null) {
            context.startElement("", "IsVeteran");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _IsVeteran), "IsVeteran");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_VeteranType!= null) {
            context.startElement("", "VeteranType");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _VeteranType), "VeteranType");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_VisaType!= null) {
            context.startElement("", "VisaType");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _VisaType), "VisaType");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_VisaRenewalDate!= null) {
            context.startElement("", "VisaRenewalDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDate(((java.util.Calendar) _VisaRenewalDate)), "VisaRenewalDate");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_HasVisa!= null) {
            context.startElement("", "HasVisa");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _HasVisa), "HasVisa");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_OfficeLocation!= null) {
            context.startElement("", "OfficeLocation");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _OfficeLocation), "OfficeLocation");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_OfficePhone!= null) {
            context.startElement("", "OfficePhone");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _OfficePhone), "OfficePhone");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_SecondryOfficeLocation!= null) {
            context.startElement("", "SecondryOfficeLocation");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _SecondryOfficeLocation), "SecondryOfficeLocation");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_SecondryOfficePhone!= null) {
            context.startElement("", "SecondryOfficePhone");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _SecondryOfficePhone), "SecondryOfficePhone");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_School!= null) {
            context.startElement("", "School");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _School), "School");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_YearGraduated!= null) {
            context.startElement("", "YearGraduated");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _YearGraduated), "YearGraduated");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_DirectoryDepartment!= null) {
            context.startElement("", "DirectoryDepartment");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _DirectoryDepartment), "DirectoryDepartment");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Salutation!= null) {
            context.startElement("", "Salutation");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Salutation), "Salutation");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CountryOfCitizenship!= null) {
            context.startElement("", "CountryOfCitizenship");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _CountryOfCitizenship), "CountryOfCitizenship");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PrimaryTitle!= null) {
            context.startElement("", "PrimaryTitle");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PrimaryTitle), "PrimaryTitle");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_DirectoryTitle!= null) {
            context.startElement("", "DirectoryTitle");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _DirectoryTitle), "DirectoryTitle");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_HomeUnit!= null) {
            context.startElement("", "HomeUnit");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _HomeUnit), "HomeUnit");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_IsFaculty!= null) {
            context.startElement("", "IsFaculty");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _IsFaculty), "IsFaculty");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_IsGraduateStudentStaff!= null) {
            context.startElement("", "IsGraduateStudentStaff");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _IsGraduateStudentStaff), "IsGraduateStudentStaff");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_IsResearchStaff!= null) {
            context.startElement("", "IsResearchStaff");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _IsResearchStaff), "IsResearchStaff");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_IsServiceStaff!= null) {
            context.startElement("", "IsServiceStaff");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _IsServiceStaff), "IsServiceStaff");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_IsSupportStaff!= null) {
            context.startElement("", "IsSupportStaff");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _IsSupportStaff), "IsSupportStaff");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_IsOtherAccademicGroup!= null) {
            context.startElement("", "IsOtherAccademicGroup");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _IsOtherAccademicGroup), "IsOtherAccademicGroup");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_IsMedicalStaff!= null) {
            context.startElement("", "IsMedicalStaff");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _IsMedicalStaff), "IsMedicalStaff");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_VacationAccural!= null) {
            context.startElement("", "VacationAccural");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _VacationAccural), "VacationAccural");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_IsOnSabbatical!= null) {
            context.startElement("", "IsOnSabbatical");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _IsOnSabbatical), "IsOnSabbatical");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_IdProvided!= null) {
            context.startElement("", "IdProvided");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _IdProvided), "IdProvided");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_IdVerified!= null) {
            context.startElement("", "IdVerified");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _IdVerified), "IdVerified");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_UpdateTimestamp!= null) {
            context.startElement("", "UpdateTimestamp");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDate(((java.util.Calendar) _UpdateTimestamp)), "UpdateTimestamp");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_UpdateUser!= null) {
            context.startElement("", "UpdateUser");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _UpdateUser), "UpdateUser");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_AddressLine1 != null) {
            context.startElement("", "AddressLine1");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _AddressLine1), "AddressLine1");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_AddressLine2 != null) {
            context.startElement("", "AddressLine2");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _AddressLine2), "AddressLine2");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_AddressLine3 != null) {
            context.startElement("", "AddressLine3");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _AddressLine3), "AddressLine3");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_City!= null) {
            context.startElement("", "City");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _City), "City");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_County!= null) {
            context.startElement("", "County");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _County), "County");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_State!= null) {
            context.startElement("", "State");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _State), "State");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PostalCode!= null) {
            context.startElement("", "PostalCode");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PostalCode), "PostalCode");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CountryCode!= null) {
            context.startElement("", "CountryCode");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _CountryCode), "CountryCode");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_FaxNumber!= null) {
            context.startElement("", "FaxNumber");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _FaxNumber), "FaxNumber");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PagerNumber!= null) {
            context.startElement("", "PagerNumber");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PagerNumber), "PagerNumber");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_MobilePhoneNumber!= null) {
            context.startElement("", "MobilePhoneNumber");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _MobilePhoneNumber), "MobilePhoneNumber");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_EraCommonsUserName!= null) {
            context.startElement("", "EraCommonsUserName");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _EraCommonsUserName), "EraCommonsUserName");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Status!= null) {
            context.startElement("", "Status");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Status), "Status");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_DepartmentName!= null) {
            context.startElement("", "DepartmentName");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _DepartmentName), "DepartmentName");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (edu.mit.coeus.utils.xml.bean.subcontract.PersonDetailsType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.ElementPatt"
+"ern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;"
+"xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndecl"
+"aredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolea"
+"n\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.Dat"
+"aExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exc"
+"eptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003q\u0000~\u0000Jps"
+"r\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlways"
+"Validxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'co"
+"m.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespace"
+"Urit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000TL\u0000\nwhiteSpacet\u0000.Lcom"
+"/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3"
+".org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.Whi"
+"teSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype"
+".xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.gramma"
+"r.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun"
+".msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000TL\u0000\fnamespace"
+"URIq\u0000~\u0000Txpq\u0000~\u0000Xq\u0000~\u0000Wsq\u0000~\u0000Cppsr\u0000 com.sun.msv.grammar.Attribut"
+"eExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000Fxq\u0000~\u0000\u0003q\u0000~\u0000Jpsq\u0000~\u0000"
+"Lppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Qq\u0000"
+"~\u0000Wt\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$"
+"Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Zq\u0000~\u0000]sq\u0000~\u0000^q\u0000~\u0000fq\u0000~\u0000Wsr\u0000#com.sun.ms"
+"v.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000TL\u0000\fname"
+"spaceURIq\u0000~\u0000Txr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt"
+"\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u00000com.su"
+"n.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003s"
+"q\u0000~\u0000I\u0001q\u0000~\u0000psq\u0000~\u0000jt\u0000\bPersonIdt\u0000\u0000q\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000"
+"~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u0003SSNq\u0000~"
+"\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000J"
+"pq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\bLastNameq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~"
+"\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000"
+"\tFirstNameq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000C"
+"ppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\nMiddleNameq\u0000~\u0000tq\u0000~\u0000psq"
+"\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~"
+"\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\bFullNameq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000"
+"\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\tPriorNam"
+"eq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq"
+"\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\bUserNameq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000"
+"Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~"
+"\u0000jt\u0000\fEmailAddressq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000Lq\u0000~\u0000Jpsr\u0000!com.sun.msv.datatype.xsd.DateType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)"
+"com.sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000Qq\u0000"
+"~\u0000Wt\u0000\u0004dateq\u0000~\u0000hq\u0000~\u0000]sq\u0000~\u0000^q\u0000~\u0000\u00b4q\u0000~\u0000Wsq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000"
+"cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u000bDateOfBirthq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000J"
+"p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000Lq\u0000~\u0000Jpsr\u0000 com.sun.msv.datatype.xsd.IntType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090"
+"&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeI"
+"mpl;xq\u0000~\u0000Qq\u0000~\u0000Wt\u0000\u0003intq\u0000~\u0000hsr\u0000*com.sun.msv.datatype.xsd.MaxIn"
+"clusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.RangeFac"
+"et\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;xr\u00009com.sun.m"
+"sv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000x"
+"r\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fi"
+"sFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000\u00c0L\u0000\fconcreteT"
+"ypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~"
+"\u0000Txq\u0000~\u0000Sppq\u0000~\u0000h\u0000\u0001sr\u0000*com.sun.msv.datatype.xsd.MinInclusiveFa"
+"cet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u00c4ppq\u0000~\u0000h\u0000\u0000sr\u0000!com.sun.msv.datatype.xsd.Lo"
+"ngType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u00bfq\u0000~\u0000Wt\u0000\u0004longq\u0000~\u0000hsq\u0000~\u0000\u00c3ppq\u0000~\u0000h\u0000\u0001sq\u0000~\u0000"
+"\u00cappq\u0000~\u0000h\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u00bfq\u0000~\u0000Wt\u0000\u0007integerq\u0000~\u0000hsr\u0000,com.sun.msv.datatype.xsd.Frac"
+"tionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.x"
+"sd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000\u00c7ppq\u0000~\u0000"
+"h\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Qq"
+"\u0000~\u0000Wt\u0000\u0007decimalq\u0000~\u0000hq\u0000~\u0000\u00d8t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000\u00d2t\u0000\fminIncl"
+"usivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Numb"
+"er\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000\u00d2t\u0000\fmaxInclusivesq\u0000~\u0000\u00dc\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~"
+"\u0000\u00cdq\u0000~\u0000\u00dbsr\u0000\u0011java.lang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u0000\u00dd\u0080\u0000\u0000\u0000q\u0000~"
+"\u0000\u00cdq\u0000~\u0000\u00dfsq\u0000~\u0000\u00e1\u007f\u00ff\u00ff\u00ffq\u0000~\u0000]sq\u0000~\u0000^q\u0000~\u0000\u00c2q\u0000~\u0000Wsq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000"
+"~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u0003Ageq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~"
+"\u0000\u0000ppq\u0000~\u0000\u00bdsq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u000fAgeByFi"
+"scalYearq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cpp"
+"sq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u0006Genderq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cpp"
+"sq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000"
+"psq\u0000~\u0000jt\u0000\u0004Raceq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq"
+"\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u000eEducationLevelq\u0000~\u0000"
+"tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jp"
+"q\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u0006Degreeq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp"
+"\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u0005Ma"
+"jorq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000"
+"aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\rIsHandicappedq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000C"
+"ppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000"
+"~\u0000psq\u0000~\u0000jt\u0000\fHandicapTypeq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000"
+"\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\tIsVetera"
+"nq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq"
+"\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u000bVeteranTypeq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq"
+"\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000ps"
+"q\u0000~\u0000jt\u0000\bVisaTypeq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00b0"
+"sq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u000fVisaRenewalDateq"
+"\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~"
+"\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u0007HasVisaq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000"
+"~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt"
+"\u0000\u000eOfficeLocationq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000O"
+"sq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u000bOfficePhoneq\u0000~\u0000t"
+"q\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq"
+"\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u0016SecondryOfficeLocationq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000"
+"Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq"
+"\u0000~\u0000psq\u0000~\u0000jt\u0000\u0013SecondryOfficePhoneq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000"
+"Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u0006"
+"Schoolq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq"
+"\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\rYearGraduatedq\u0000~\u0000tq\u0000~\u0000psq\u0000"
+"~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000"
+"lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u0013DirectoryDepartmentq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000"
+"~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt"
+"\u0000\nSalutationq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~"
+"\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u0014CountryOfCitizenship"
+"q\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000"
+"~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\fPrimaryTitleq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq"
+"\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000ps"
+"q\u0000~\u0000jt\u0000\u000eDirectoryTitleq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000p"
+"pq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\bHomeUnitq\u0000"
+"~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000"
+"Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\tIsFacultyq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq"
+"\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000j"
+"t\u0000\u0016IsGraduateStudentStaffq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~"
+"\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u000fIsResea"
+"rchStaffq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cpp"
+"sq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u000eIsServiceStaffq\u0000~\u0000tq\u0000~\u0000p"
+"sq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq"
+"\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u000eIsSupportStaffq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000"
+"Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u0015"
+"IsOtherAccademicGroupq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000pp"
+"q\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u000eIsMedicalSt"
+"affq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000"
+"aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u000fVacationAccuralq\u0000~\u0000tq\u0000~\u0000psq\u0000~"
+"\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000l"
+"q\u0000~\u0000psq\u0000~\u0000jt\u0000\u000eIsOnSabbaticalq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000s"
+"q\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\nIdPr"
+"ovidedq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq"
+"\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\nIdVerifiedq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000C"
+"ppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00b0sq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000"
+"~\u0000psq\u0000~\u0000jt\u0000\u000fUpdateTimestampq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq"
+"\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\nUpdat"
+"eUserq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000"
+"~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\fAddressLine1q\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000"
+"Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq"
+"\u0000~\u0000psq\u0000~\u0000jt\u0000\fAddressLine2q\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~"
+"\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\fAddress"
+"Line3q\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000"
+"~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u0004Cityq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000"
+"Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~"
+"\u0000jt\u0000\u0006Countyq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000"
+"Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u0005Stateq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000C"
+"ppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000"
+"~\u0000psq\u0000~\u0000jt\u0000\nPostalCodeq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000p"
+"pq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u000bCountryCod"
+"eq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq"
+"\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\tFaxNumberq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~"
+"\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000"
+"~\u0000jt\u0000\u000bPagerNumberq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000"
+"Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u0011MobilePhoneNumb"
+"erq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000a"
+"q\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u0012EraCommonsUserNameq\u0000~\u0000tq\u0000~\u0000psq"
+"\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~"
+"\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u0006Statusq\u0000~\u0000tq\u0000~\u0000psq\u0000~\u0000Cppsq\u0000~\u0000Eq\u0000~\u0000Jp\u0000sq\u0000~\u0000\u0000p"
+"pq\u0000~\u0000Osq\u0000~\u0000Cppsq\u0000~\u0000aq\u0000~\u0000Jpq\u0000~\u0000cq\u0000~\u0000lq\u0000~\u0000psq\u0000~\u0000jt\u0000\u000eDepartment"
+"Nameq\u0000~\u0000tq\u0000~\u0000psr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedH"
+"ash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef"
+"\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/gramm"
+"ar/ExpressionPool;xp\u0000\u0000\u0000\u00fb\u0001pq\u0000~\u0000\tq\u0000~\u0000:q\u0000~\u0000\u0012q\u0000~\u0001\u00e5q\u0000~\u0000\u00adq\u0000~\u00016q\u0000~\u0000"
+"\u001cq\u0000~\u0000 q\u0000~\u0000\"q\u0000~\u00007q\u0000~\u0000\u000fq\u0000~\u0000\u0016q\u0000~\u0000/q\u0000~\u0000\u00ebq\u0000~\u0000\u00bcq\u0000~\u0000=q\u0000~\u00009q\u0000~\u00002q\u0000~\u0000"
+"$q\u0000~\u0000\u000bq\u0000~\u0000\u0015q\u0000~\u0000Aq\u0000~\u0000\u001aq\u0000~\u0000\u0018q\u0000~\u0000\rq\u0000~\u0000!q\u0000~\u00000q\u0000~\u0000\bq\u0000~\u0000(q\u0000~\u00008q\u0000~\u0000"
+"#q\u0000~\u0000>q\u0000~\u0000Bq\u0000~\u0000+q\u0000~\u0000,q\u0000~\u0000\u0013q\u0000~\u0000@q\u0000~\u0000?q\u0000~\u00001q\u0000~\u0000-q\u0000~\u00005q\u0000~\u0000\u001dq\u0000~\u0000"
+")q\u0000~\u0000&q\u0000~\u0000\u00e9q\u0000~\u0000\u00baq\u0000~\u0000\u0006q\u0000~\u0000\u0010q\u0000~\u0000\u000eq\u0000~\u0000\u0017q\u0000~\u0001\u00e7q\u0000~\u0000\u00afq\u0000~\u00018q\u0000~\u00006q\u0000~\u0000"
+"\u001bq\u0000~\u0000\u0014q\u0000~\u0000\u0007q\u0000~\u00003q\u0000~\u0002+q\u0000~\u0002$q\u0000~\u0002\u001dq\u0000~\u0002\u0016q\u0000~\u0002\u000fq\u0000~\u0002\bq\u0000~\u0002\u0001q\u0000~\u0001\u00faq\u0000~\u0001"
+"\u00f3q\u0000~\u0001\u00ecq\u0000~\u0001\u00deq\u0000~\u0001\u00d7q\u0000~\u0001\u00d0q\u0000~\u0001\u00c9q\u0000~\u0001\u00c2q\u0000~\u0001\u00bbq\u0000~\u0001\u00b4q\u0000~\u0001\u00adq\u0000~\u0001\u00a6q\u0000~\u0001\u009fq\u0000~\u0001"
+"\u0098q\u0000~\u0001\u0091q\u0000~\u0001\u008aq\u0000~\u0001\u0083q\u0000~\u0001|q\u0000~\u0001uq\u0000~\u0001nq\u0000~\u0001gq\u0000~\u0000\u0098q\u0000~\u0000\u0091q\u0000~\u0000\u008aq\u0000~\u0000\u0083q\u0000~\u0000"
+"|q\u0000~\u0000uq\u0000~\u0000Dq\u0000~\u0000\u00feq\u0000~\u0001\u0005q\u0000~\u0001\fq\u0000~\u0001\u0013q\u0000~\u0001\u001aq\u0000~\u0001!q\u0000~\u0001(q\u0000~\u0001/q\u0000~\u0001=q\u0000~\u0001"
+"Dq\u0000~\u0001Kq\u0000~\u0001Rq\u0000~\u0001Yq\u0000~\u0001`q\u0000~\u0000\u00f7q\u0000~\u0000\u00f0q\u0000~\u0000\u00a6q\u0000~\u0000\u009fq\u0000~\u0002.q\u0000~\u0002\'q\u0000~\u0002 q\u0000~\u0002"
+"\u0019q\u0000~\u0002\u0012q\u0000~\u0002\u000bq\u0000~\u0002\u0004q\u0000~\u0001\u00fdq\u0000~\u0001\u00f6q\u0000~\u0001\u00efq\u0000~\u0001\u00e8q\u0000~\u0001\u00e1q\u0000~\u0001\u00daq\u0000~\u0001\u00d3q\u0000~\u0001\u00ccq\u0000~\u0001"
+"\u00c5q\u0000~\u0001\u00beq\u0000~\u0001\u00b7q\u0000~\u0001\u00b0q\u0000~\u0001\u00a9q\u0000~\u0001\u00a2q\u0000~\u0001\u009bq\u0000~\u0001\u0094q\u0000~\u0001\u008dq\u0000~\u0001\u0086q\u0000~\u0001\u007fq\u0000~\u0001xq\u0000~\u0001"
+"qq\u0000~\u0001jq\u0000~\u0001\u0001q\u0000~\u0000\u00faq\u0000~\u0000\u00f3q\u0000~\u0000\u00ecq\u0000~\u0000\u00e5q\u0000~\u0000\u00b6q\u0000~\u0000\u00a9q\u0000~\u0000\u00a2q\u0000~\u0000\u009bq\u0000~\u0000\u0094q\u0000~\u0000"
+"\u008dq\u0000~\u0000\u0086q\u0000~\u0000\u007fq\u0000~\u0000xq\u0000~\u0000`q\u0000~\u0001\bq\u0000~\u0001\u000fq\u0000~\u0001\u0016q\u0000~\u0001\u001dq\u0000~\u0001$q\u0000~\u0001+q\u0000~\u00012q\u0000~\u0001"
+"9q\u0000~\u0001@q\u0000~\u0001Gq\u0000~\u0001Nq\u0000~\u0001Uq\u0000~\u0001\\q\u0000~\u0001cq\u0000~\u0000;q\u0000~\u0002-q\u0000~\u0002&q\u0000~\u0002\u001fq\u0000~\u0002\u0018q\u0000~\u0002"
+"\u0011q\u0000~\u0002\nq\u0000~\u0002\u0003q\u0000~\u0001\u00fcq\u0000~\u0001\u00f5q\u0000~\u0001\u00eeq\u0000~\u0001\u00e0q\u0000~\u0001\u00d9q\u0000~\u0001\u00d2q\u0000~\u0001\u00cbq\u0000~\u0001\u00c4q\u0000~\u0001\u00bdq\u0000~\u0001"
+"\u00b6q\u0000~\u0001\u00afq\u0000~\u0001\u00a8q\u0000~\u0001\u00a1q\u0000~\u0001\u009aq\u0000~\u0001\u0093q\u0000~\u0001\u008cq\u0000~\u0001\u0085q\u0000~\u0001~q\u0000~\u0001wq\u0000~\u0001pq\u0000~\u0001iq\u0000~\u0000"
+"~q\u0000~\u0000wq\u0000~\u0000Kq\u0000~\u0001\u0000q\u0000~\u0000\u00f9q\u0000~\u0000\u00f2q\u0000~\u0000\u00a8q\u0000~\u0000\u00a1q\u0000~\u0000\u009aq\u0000~\u0000\u0093q\u0000~\u0000\u008cq\u0000~\u0000\u0085q\u0000~\u0001"
+"\u0007q\u0000~\u0001\u000eq\u0000~\u0001\u0015q\u0000~\u0001\u001cq\u0000~\u0001#q\u0000~\u0001*q\u0000~\u00011q\u0000~\u0001?q\u0000~\u0001Fq\u0000~\u0001Mq\u0000~\u0001Tq\u0000~\u0001[q\u0000~\u0001"
+"bq\u0000~\u00004q\u0000~\u0000\u001eq\u0000~\u0000\nq\u0000~\u00025q\u0000~\u00024q\u0000~\u00022q\u0000~\u0002<q\u0000~\u0002;q\u0000~\u00029q\u0000~\u0000%q\u0000~\u0002Cq\u0000~\u0002"
+"Bq\u0000~\u0002@q\u0000~\u0002Jq\u0000~\u0002Iq\u0000~\u0002Gq\u0000~\u0002Qq\u0000~\u0002Pq\u0000~\u0002Nq\u0000~\u0000\u0005q\u0000~\u0000.q\u0000~\u0000\u0011q\u0000~\u0000\fq\u0000~\u0000"
+"<q\u0000~\u0000*q\u0000~\u0000\u001fq\u0000~\u0000\'q\u0000~\u0000\u0019x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------");
        }

        protected Unmarshaller(edu.mit.coeus.utils.xml.bean.subcontract.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return edu.mit.coeus.utils.xml.bean.subcontract.impl.PersonDetailsTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  27 :
                        if (("DateOfBirth" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  42 :
                        if (("EducationLevel" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 43;
                            return ;
                        }
                        state = 45;
                        continue outer;
                    case  165 :
                        if (("PostalCode" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 166;
                            return ;
                        }
                        state = 168;
                        continue outer;
                    case  48 :
                        if (("Major" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 49;
                            return ;
                        }
                        state = 51;
                        continue outer;
                    case  51 :
                        if (("IsHandicapped" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 52;
                            return ;
                        }
                        state = 54;
                        continue outer;
                    case  72 :
                        if (("OfficeLocation" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 73;
                            return ;
                        }
                        state = 75;
                        continue outer;
                    case  180 :
                        if (("EraCommonsUserName" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 181;
                            return ;
                        }
                        state = 183;
                        continue outer;
                    case  87 :
                        if (("YearGraduated" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 88;
                            return ;
                        }
                        state = 90;
                        continue outer;
                    case  111 :
                        if (("IsGraduateStudentStaff" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 112;
                            return ;
                        }
                        state = 114;
                        continue outer;
                    case  3 :
                        if (("SSN" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  114 :
                        if (("IsResearchStaff" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 115;
                            return ;
                        }
                        state = 117;
                        continue outer;
                    case  183 :
                        if (("Status" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 184;
                            return ;
                        }
                        state = 186;
                        continue outer;
                    case  108 :
                        if (("IsFaculty" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 109;
                            return ;
                        }
                        state = 111;
                        continue outer;
                    case  18 :
                        if (("PriorName" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  84 :
                        if (("School" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 85;
                            return ;
                        }
                        state = 87;
                        continue outer;
                    case  39 :
                        if (("Race" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 40;
                            return ;
                        }
                        state = 42;
                        continue outer;
                    case  24 :
                        if (("EmailAddress" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  9 :
                        if (("FirstName" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  12 :
                        if (("MiddleName" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  6 :
                        if (("LastName" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  90 :
                        if (("DirectoryDepartment" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 91;
                            return ;
                        }
                        state = 93;
                        continue outer;
                    case  186 :
                        if (("DepartmentName" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 187;
                            return ;
                        }
                        state = 189;
                        continue outer;
                    case  66 :
                        if (("VisaRenewalDate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 67;
                            return ;
                        }
                        state = 69;
                        continue outer;
                    case  147 :
                        if (("AddressLine1" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 148;
                            return ;
                        }
                        state = 150;
                        continue outer;
                    case  120 :
                        if (("IsSupportStaff" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 121;
                            return ;
                        }
                        state = 123;
                        continue outer;
                    case  132 :
                        if (("IsOnSabbatical" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 133;
                            return ;
                        }
                        state = 135;
                        continue outer;
                    case  30 :
                        if (("Age" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        state = 33;
                        continue outer;
                    case  63 :
                        if (("VisaType" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 64;
                            return ;
                        }
                        state = 66;
                        continue outer;
                    case  96 :
                        if (("CountryOfCitizenship" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 97;
                            return ;
                        }
                        state = 99;
                        continue outer;
                    case  189 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  177 :
                        if (("MobilePhoneNumber" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 178;
                            return ;
                        }
                        state = 180;
                        continue outer;
                    case  78 :
                        if (("SecondryOfficeLocation" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 79;
                            return ;
                        }
                        state = 81;
                        continue outer;
                    case  36 :
                        if (("Gender" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 37;
                            return ;
                        }
                        state = 39;
                        continue outer;
                    case  150 :
                        if (("AddressLine2" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 151;
                            return ;
                        }
                        state = 153;
                        continue outer;
                    case  162 :
                        if (("State" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 163;
                            return ;
                        }
                        state = 165;
                        continue outer;
                    case  129 :
                        if (("VacationAccural" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 130;
                            return ;
                        }
                        state = 132;
                        continue outer;
                    case  105 :
                        if (("HomeUnit" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 106;
                            return ;
                        }
                        state = 108;
                        continue outer;
                    case  45 :
                        if (("Degree" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 46;
                            return ;
                        }
                        state = 48;
                        continue outer;
                    case  171 :
                        if (("FaxNumber" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 172;
                            return ;
                        }
                        state = 174;
                        continue outer;
                    case  174 :
                        if (("PagerNumber" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 175;
                            return ;
                        }
                        state = 177;
                        continue outer;
                    case  153 :
                        if (("AddressLine3" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 154;
                            return ;
                        }
                        state = 156;
                        continue outer;
                    case  102 :
                        if (("DirectoryTitle" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 103;
                            return ;
                        }
                        state = 105;
                        continue outer;
                    case  21 :
                        if (("UserName" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  60 :
                        if (("VeteranType" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 61;
                            return ;
                        }
                        state = 63;
                        continue outer;
                    case  69 :
                        if (("HasVisa" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 70;
                            return ;
                        }
                        state = 72;
                        continue outer;
                    case  93 :
                        if (("Salutation" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 94;
                            return ;
                        }
                        state = 96;
                        continue outer;
                    case  135 :
                        if (("IdProvided" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 136;
                            return ;
                        }
                        state = 138;
                        continue outer;
                    case  141 :
                        if (("UpdateTimestamp" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 142;
                            return ;
                        }
                        state = 144;
                        continue outer;
                    case  0 :
                        if (("PersonId" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  126 :
                        if (("IsMedicalStaff" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 127;
                            return ;
                        }
                        state = 129;
                        continue outer;
                    case  117 :
                        if (("IsServiceStaff" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 118;
                            return ;
                        }
                        state = 120;
                        continue outer;
                    case  75 :
                        if (("OfficePhone" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 76;
                            return ;
                        }
                        state = 78;
                        continue outer;
                    case  138 :
                        if (("IdVerified" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 139;
                            return ;
                        }
                        state = 141;
                        continue outer;
                    case  168 :
                        if (("CountryCode" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 169;
                            return ;
                        }
                        state = 171;
                        continue outer;
                    case  81 :
                        if (("SecondryOfficePhone" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 82;
                            return ;
                        }
                        state = 84;
                        continue outer;
                    case  57 :
                        if (("IsVeteran" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 58;
                            return ;
                        }
                        state = 60;
                        continue outer;
                    case  33 :
                        if (("AgeByFiscalYear" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 34;
                            return ;
                        }
                        state = 36;
                        continue outer;
                    case  156 :
                        if (("City" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 157;
                            return ;
                        }
                        state = 159;
                        continue outer;
                    case  54 :
                        if (("HandicapType" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 55;
                            return ;
                        }
                        state = 57;
                        continue outer;
                    case  123 :
                        if (("IsOtherAccademicGroup" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 124;
                            return ;
                        }
                        state = 126;
                        continue outer;
                    case  159 :
                        if (("County" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 160;
                            return ;
                        }
                        state = 162;
                        continue outer;
                    case  15 :
                        if (("FullName" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  99 :
                        if (("PrimaryTitle" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 100;
                            return ;
                        }
                        state = 102;
                        continue outer;
                    case  144 :
                        if (("UpdateUser" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 145;
                            return ;
                        }
                        state = 147;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  27 :
                        state = 30;
                        continue outer;
                    case  56 :
                        if (("HandicapType" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 57;
                            return ;
                        }
                        break;
                    case  59 :
                        if (("IsVeteran" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 60;
                            return ;
                        }
                        break;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  77 :
                        if (("OfficePhone" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 78;
                            return ;
                        }
                        break;
                    case  152 :
                        if (("AddressLine2" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 153;
                            return ;
                        }
                        break;
                    case  119 :
                        if (("IsServiceStaff" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 120;
                            return ;
                        }
                        break;
                    case  165 :
                        state = 168;
                        continue outer;
                    case  53 :
                        if (("IsHandicapped" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 54;
                            return ;
                        }
                        break;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  51 :
                        state = 54;
                        continue outer;
                    case  158 :
                        if (("City" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 159;
                            return ;
                        }
                        break;
                    case  149 :
                        if (("AddressLine1" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 150;
                            return ;
                        }
                        break;
                    case  72 :
                        state = 75;
                        continue outer;
                    case  180 :
                        state = 183;
                        continue outer;
                    case  17 :
                        if (("FullName" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  87 :
                        state = 90;
                        continue outer;
                    case  41 :
                        if (("Race" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 42;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("MiddleName" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  111 :
                        state = 114;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  114 :
                        state = 117;
                        continue outer;
                    case  183 :
                        state = 186;
                        continue outer;
                    case  170 :
                        if (("CountryCode" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 171;
                            return ;
                        }
                        break;
                    case  128 :
                        if (("IsMedicalStaff" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 129;
                            return ;
                        }
                        break;
                    case  108 :
                        state = 111;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  84 :
                        state = 87;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  38 :
                        if (("Gender" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 39;
                            return ;
                        }
                        break;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  50 :
                        if (("Major" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 51;
                            return ;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  90 :
                        state = 93;
                        continue outer;
                    case  186 :
                        state = 189;
                        continue outer;
                    case  66 :
                        state = 69;
                        continue outer;
                    case  71 :
                        if (("HasVisa" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 72;
                            return ;
                        }
                        break;
                    case  176 :
                        if (("PagerNumber" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 177;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("LastName" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  23 :
                        if (("UserName" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  147 :
                        state = 150;
                        continue outer;
                    case  120 :
                        state = 123;
                        continue outer;
                    case  116 :
                        if (("IsResearchStaff" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 117;
                            return ;
                        }
                        break;
                    case  80 :
                        if (("SecondryOfficeLocation" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 81;
                            return ;
                        }
                        break;
                    case  132 :
                        state = 135;
                        continue outer;
                    case  95 :
                        if (("Salutation" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 96;
                            return ;
                        }
                        break;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  63 :
                        state = 66;
                        continue outer;
                    case  11 :
                        if (("FirstName" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  113 :
                        if (("IsGraduateStudentStaff" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 114;
                            return ;
                        }
                        break;
                    case  96 :
                        state = 99;
                        continue outer;
                    case  83 :
                        if (("SecondryOfficePhone" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 84;
                            return ;
                        }
                        break;
                    case  29 :
                        if (("DateOfBirth" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  179 :
                        if (("MobilePhoneNumber" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 180;
                            return ;
                        }
                        break;
                    case  189 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  177 :
                        state = 180;
                        continue outer;
                    case  2 :
                        if (("PersonId" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  107 :
                        if (("HomeUnit" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 108;
                            return ;
                        }
                        break;
                    case  78 :
                        state = 81;
                        continue outer;
                    case  35 :
                        if (("AgeByFiscalYear" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 36;
                            return ;
                        }
                        break;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  89 :
                        if (("YearGraduated" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 90;
                            return ;
                        }
                        break;
                    case  143 :
                        if (("UpdateTimestamp" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 144;
                            return ;
                        }
                        break;
                    case  150 :
                        state = 153;
                        continue outer;
                    case  65 :
                        if (("VisaType" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 66;
                            return ;
                        }
                        break;
                    case  162 :
                        state = 165;
                        continue outer;
                    case  129 :
                        state = 132;
                        continue outer;
                    case  105 :
                        state = 108;
                        continue outer;
                    case  104 :
                        if (("DirectoryTitle" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 105;
                            return ;
                        }
                        break;
                    case  167 :
                        if (("PostalCode" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 168;
                            return ;
                        }
                        break;
                    case  185 :
                        if (("Status" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 186;
                            return ;
                        }
                        break;
                    case  164 :
                        if (("State" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 165;
                            return ;
                        }
                        break;
                    case  125 :
                        if (("IsOtherAccademicGroup" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 126;
                            return ;
                        }
                        break;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  171 :
                        state = 174;
                        continue outer;
                    case  174 :
                        state = 177;
                        continue outer;
                    case  153 :
                        state = 156;
                        continue outer;
                    case  102 :
                        state = 105;
                        continue outer;
                    case  26 :
                        if (("EmailAddress" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  74 :
                        if (("OfficeLocation" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 75;
                            return ;
                        }
                        break;
                    case  140 :
                        if (("IdVerified" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 141;
                            return ;
                        }
                        break;
                    case  182 :
                        if (("EraCommonsUserName" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 183;
                            return ;
                        }
                        break;
                    case  137 :
                        if (("IdProvided" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 138;
                            return ;
                        }
                        break;
                    case  101 :
                        if (("PrimaryTitle" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 102;
                            return ;
                        }
                        break;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  161 :
                        if (("County" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 162;
                            return ;
                        }
                        break;
                    case  60 :
                        state = 63;
                        continue outer;
                    case  69 :
                        state = 72;
                        continue outer;
                    case  93 :
                        state = 96;
                        continue outer;
                    case  122 :
                        if (("IsSupportStaff" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 123;
                            return ;
                        }
                        break;
                    case  92 :
                        if (("DirectoryDepartment" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 93;
                            return ;
                        }
                        break;
                    case  135 :
                        state = 138;
                        continue outer;
                    case  32 :
                        if (("Age" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                    case  62 :
                        if (("VeteranType" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 63;
                            return ;
                        }
                        break;
                    case  146 :
                        if (("UpdateUser" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 147;
                            return ;
                        }
                        break;
                    case  141 :
                        state = 144;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  126 :
                        state = 129;
                        continue outer;
                    case  131 :
                        if (("VacationAccural" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 132;
                            return ;
                        }
                        break;
                    case  117 :
                        state = 120;
                        continue outer;
                    case  75 :
                        state = 78;
                        continue outer;
                    case  138 :
                        state = 141;
                        continue outer;
                    case  86 :
                        if (("School" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 87;
                            return ;
                        }
                        break;
                    case  110 :
                        if (("IsFaculty" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 111;
                            return ;
                        }
                        break;
                    case  168 :
                        state = 171;
                        continue outer;
                    case  155 :
                        if (("AddressLine3" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 156;
                            return ;
                        }
                        break;
                    case  81 :
                        state = 84;
                        continue outer;
                    case  57 :
                        state = 60;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  156 :
                        state = 159;
                        continue outer;
                    case  54 :
                        state = 57;
                        continue outer;
                    case  123 :
                        state = 126;
                        continue outer;
                    case  159 :
                        state = 162;
                        continue outer;
                    case  20 :
                        if (("PriorName" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  68 :
                        if (("VisaRenewalDate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 69;
                            return ;
                        }
                        break;
                    case  188 :
                        if (("DepartmentName" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 189;
                            return ;
                        }
                        break;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  99 :
                        state = 102;
                        continue outer;
                    case  173 :
                        if (("FaxNumber" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 174;
                            return ;
                        }
                        break;
                    case  144 :
                        state = 147;
                        continue outer;
                    case  98 :
                        if (("CountryOfCitizenship" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 99;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("SSN" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  47 :
                        if (("Degree" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 48;
                            return ;
                        }
                        break;
                    case  44 :
                        if (("EducationLevel" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 45;
                            return ;
                        }
                        break;
                    case  134 :
                        if (("IsOnSabbatical" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 135;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  27 :
                        state = 30;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  165 :
                        state = 168;
                        continue outer;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  51 :
                        state = 54;
                        continue outer;
                    case  72 :
                        state = 75;
                        continue outer;
                    case  180 :
                        state = 183;
                        continue outer;
                    case  87 :
                        state = 90;
                        continue outer;
                    case  111 :
                        state = 114;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  114 :
                        state = 117;
                        continue outer;
                    case  183 :
                        state = 186;
                        continue outer;
                    case  108 :
                        state = 111;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  84 :
                        state = 87;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  90 :
                        state = 93;
                        continue outer;
                    case  186 :
                        state = 189;
                        continue outer;
                    case  66 :
                        state = 69;
                        continue outer;
                    case  147 :
                        state = 150;
                        continue outer;
                    case  120 :
                        state = 123;
                        continue outer;
                    case  132 :
                        state = 135;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  63 :
                        state = 66;
                        continue outer;
                    case  96 :
                        state = 99;
                        continue outer;
                    case  189 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  177 :
                        state = 180;
                        continue outer;
                    case  78 :
                        state = 81;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  150 :
                        state = 153;
                        continue outer;
                    case  162 :
                        state = 165;
                        continue outer;
                    case  129 :
                        state = 132;
                        continue outer;
                    case  105 :
                        state = 108;
                        continue outer;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  171 :
                        state = 174;
                        continue outer;
                    case  174 :
                        state = 177;
                        continue outer;
                    case  153 :
                        state = 156;
                        continue outer;
                    case  102 :
                        state = 105;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  60 :
                        state = 63;
                        continue outer;
                    case  69 :
                        state = 72;
                        continue outer;
                    case  93 :
                        state = 96;
                        continue outer;
                    case  135 :
                        state = 138;
                        continue outer;
                    case  141 :
                        state = 144;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  126 :
                        state = 129;
                        continue outer;
                    case  117 :
                        state = 120;
                        continue outer;
                    case  75 :
                        state = 78;
                        continue outer;
                    case  138 :
                        state = 141;
                        continue outer;
                    case  168 :
                        state = 171;
                        continue outer;
                    case  81 :
                        state = 84;
                        continue outer;
                    case  57 :
                        state = 60;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  156 :
                        state = 159;
                        continue outer;
                    case  54 :
                        state = 57;
                        continue outer;
                    case  123 :
                        state = 126;
                        continue outer;
                    case  159 :
                        state = 162;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  99 :
                        state = 102;
                        continue outer;
                    case  144 :
                        state = 147;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  27 :
                        state = 30;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  165 :
                        state = 168;
                        continue outer;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  51 :
                        state = 54;
                        continue outer;
                    case  72 :
                        state = 75;
                        continue outer;
                    case  180 :
                        state = 183;
                        continue outer;
                    case  87 :
                        state = 90;
                        continue outer;
                    case  111 :
                        state = 114;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  114 :
                        state = 117;
                        continue outer;
                    case  183 :
                        state = 186;
                        continue outer;
                    case  108 :
                        state = 111;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  84 :
                        state = 87;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  90 :
                        state = 93;
                        continue outer;
                    case  186 :
                        state = 189;
                        continue outer;
                    case  66 :
                        state = 69;
                        continue outer;
                    case  147 :
                        state = 150;
                        continue outer;
                    case  120 :
                        state = 123;
                        continue outer;
                    case  132 :
                        state = 135;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  63 :
                        state = 66;
                        continue outer;
                    case  96 :
                        state = 99;
                        continue outer;
                    case  189 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  177 :
                        state = 180;
                        continue outer;
                    case  78 :
                        state = 81;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  150 :
                        state = 153;
                        continue outer;
                    case  162 :
                        state = 165;
                        continue outer;
                    case  129 :
                        state = 132;
                        continue outer;
                    case  105 :
                        state = 108;
                        continue outer;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  171 :
                        state = 174;
                        continue outer;
                    case  174 :
                        state = 177;
                        continue outer;
                    case  153 :
                        state = 156;
                        continue outer;
                    case  102 :
                        state = 105;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  60 :
                        state = 63;
                        continue outer;
                    case  69 :
                        state = 72;
                        continue outer;
                    case  93 :
                        state = 96;
                        continue outer;
                    case  135 :
                        state = 138;
                        continue outer;
                    case  141 :
                        state = 144;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  126 :
                        state = 129;
                        continue outer;
                    case  117 :
                        state = 120;
                        continue outer;
                    case  75 :
                        state = 78;
                        continue outer;
                    case  138 :
                        state = 141;
                        continue outer;
                    case  168 :
                        state = 171;
                        continue outer;
                    case  81 :
                        state = 84;
                        continue outer;
                    case  57 :
                        state = 60;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  156 :
                        state = 159;
                        continue outer;
                    case  54 :
                        state = 57;
                        continue outer;
                    case  123 :
                        state = 126;
                        continue outer;
                    case  159 :
                        state = 162;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  99 :
                        state = 102;
                        continue outer;
                    case  144 :
                        state = 147;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  27 :
                            state = 30;
                            continue outer;
                        case  142 :
                            state = 143;
                            eatText1(value);
                            return ;
                        case  40 :
                            state = 41;
                            eatText2(value);
                            return ;
                        case  42 :
                            state = 45;
                            continue outer;
                        case  85 :
                            state = 86;
                            eatText3(value);
                            return ;
                        case  165 :
                            state = 168;
                            continue outer;
                        case  31 :
                            state = 32;
                            eatText4(value);
                            return ;
                        case  48 :
                            state = 51;
                            continue outer;
                        case  51 :
                            state = 54;
                            continue outer;
                        case  72 :
                            state = 75;
                            continue outer;
                        case  28 :
                            state = 29;
                            eatText5(value);
                            return ;
                        case  180 :
                            state = 183;
                            continue outer;
                        case  130 :
                            state = 131;
                            eatText6(value);
                            return ;
                        case  7 :
                            state = 8;
                            eatText7(value);
                            return ;
                        case  87 :
                            state = 90;
                            continue outer;
                        case  1 :
                            state = 2;
                            eatText8(value);
                            return ;
                        case  184 :
                            state = 185;
                            eatText9(value);
                            return ;
                        case  175 :
                            state = 176;
                            eatText10(value);
                            return ;
                        case  111 :
                            state = 114;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  82 :
                            state = 83;
                            eatText11(value);
                            return ;
                        case  145 :
                            state = 146;
                            eatText12(value);
                            return ;
                        case  114 :
                            state = 117;
                            continue outer;
                        case  46 :
                            state = 47;
                            eatText13(value);
                            return ;
                        case  183 :
                            state = 186;
                            continue outer;
                        case  108 :
                            state = 111;
                            continue outer;
                        case  61 :
                            state = 62;
                            eatText14(value);
                            return ;
                        case  181 :
                            state = 182;
                            eatText15(value);
                            return ;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  84 :
                            state = 87;
                            continue outer;
                        case  39 :
                            state = 42;
                            continue outer;
                        case  37 :
                            state = 38;
                            eatText16(value);
                            return ;
                        case  88 :
                            state = 89;
                            eatText17(value);
                            return ;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  55 :
                            state = 56;
                            eatText18(value);
                            return ;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  90 :
                            state = 93;
                            continue outer;
                        case  186 :
                            state = 189;
                            continue outer;
                        case  66 :
                            state = 69;
                            continue outer;
                        case  13 :
                            state = 14;
                            eatText19(value);
                            return ;
                        case  4 :
                            state = 5;
                            eatText20(value);
                            return ;
                        case  94 :
                            state = 95;
                            eatText21(value);
                            return ;
                        case  147 :
                            state = 150;
                            continue outer;
                        case  120 :
                            state = 123;
                            continue outer;
                        case  115 :
                            state = 116;
                            eatText22(value);
                            return ;
                        case  132 :
                            state = 135;
                            continue outer;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  76 :
                            state = 77;
                            eatText23(value);
                            return ;
                        case  63 :
                            state = 66;
                            continue outer;
                        case  43 :
                            state = 44;
                            eatText24(value);
                            return ;
                        case  124 :
                            state = 125;
                            eatText25(value);
                            return ;
                        case  172 :
                            state = 173;
                            eatText26(value);
                            return ;
                        case  96 :
                            state = 99;
                            continue outer;
                        case  178 :
                            state = 179;
                            eatText27(value);
                            return ;
                        case  100 :
                            state = 101;
                            eatText28(value);
                            return ;
                        case  189 :
                            revertToParentFromText(value);
                            return ;
                        case  177 :
                            state = 180;
                            continue outer;
                        case  118 :
                            state = 119;
                            eatText29(value);
                            return ;
                        case  163 :
                            state = 164;
                            eatText30(value);
                            return ;
                        case  78 :
                            state = 81;
                            continue outer;
                        case  67 :
                            state = 68;
                            eatText31(value);
                            return ;
                        case  36 :
                            state = 39;
                            continue outer;
                        case  127 :
                            state = 128;
                            eatText32(value);
                            return ;
                        case  22 :
                            state = 23;
                            eatText33(value);
                            return ;
                        case  150 :
                            state = 153;
                            continue outer;
                        case  162 :
                            state = 165;
                            continue outer;
                        case  129 :
                            state = 132;
                            continue outer;
                        case  148 :
                            state = 149;
                            eatText34(value);
                            return ;
                        case  133 :
                            state = 134;
                            eatText35(value);
                            return ;
                        case  105 :
                            state = 108;
                            continue outer;
                        case  136 :
                            state = 137;
                            eatText36(value);
                            return ;
                        case  160 :
                            state = 161;
                            eatText37(value);
                            return ;
                        case  45 :
                            state = 48;
                            continue outer;
                        case  171 :
                            state = 174;
                            continue outer;
                        case  112 :
                            state = 113;
                            eatText38(value);
                            return ;
                        case  174 :
                            state = 177;
                            continue outer;
                        case  97 :
                            state = 98;
                            eatText39(value);
                            return ;
                        case  19 :
                            state = 20;
                            eatText40(value);
                            return ;
                        case  154 :
                            state = 155;
                            eatText41(value);
                            return ;
                        case  153 :
                            state = 156;
                            continue outer;
                        case  102 :
                            state = 105;
                            continue outer;
                        case  187 :
                            state = 188;
                            eatText42(value);
                            return ;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  60 :
                            state = 63;
                            continue outer;
                        case  69 :
                            state = 72;
                            continue outer;
                        case  93 :
                            state = 96;
                            continue outer;
                        case  121 :
                            state = 122;
                            eatText43(value);
                            return ;
                        case  64 :
                            state = 65;
                            eatText44(value);
                            return ;
                        case  73 :
                            state = 74;
                            eatText45(value);
                            return ;
                        case  135 :
                            state = 138;
                            continue outer;
                        case  106 :
                            state = 107;
                            eatText46(value);
                            return ;
                        case  141 :
                            state = 144;
                            continue outer;
                        case  10 :
                            state = 11;
                            eatText47(value);
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  126 :
                            state = 129;
                            continue outer;
                        case  117 :
                            state = 120;
                            continue outer;
                        case  75 :
                            state = 78;
                            continue outer;
                        case  138 :
                            state = 141;
                            continue outer;
                        case  79 :
                            state = 80;
                            eatText48(value);
                            return ;
                        case  139 :
                            state = 140;
                            eatText49(value);
                            return ;
                        case  91 :
                            state = 92;
                            eatText50(value);
                            return ;
                        case  109 :
                            state = 110;
                            eatText51(value);
                            return ;
                        case  168 :
                            state = 171;
                            continue outer;
                        case  81 :
                            state = 84;
                            continue outer;
                        case  57 :
                            state = 60;
                            continue outer;
                        case  33 :
                            state = 36;
                            continue outer;
                        case  156 :
                            state = 159;
                            continue outer;
                        case  103 :
                            state = 104;
                            eatText52(value);
                            return ;
                        case  54 :
                            state = 57;
                            continue outer;
                        case  123 :
                            state = 126;
                            continue outer;
                        case  159 :
                            state = 162;
                            continue outer;
                        case  169 :
                            state = 170;
                            eatText53(value);
                            return ;
                        case  52 :
                            state = 53;
                            eatText54(value);
                            return ;
                        case  58 :
                            state = 59;
                            eatText55(value);
                            return ;
                        case  151 :
                            state = 152;
                            eatText56(value);
                            return ;
                        case  157 :
                            state = 158;
                            eatText57(value);
                            return ;
                        case  34 :
                            state = 35;
                            eatText58(value);
                            return ;
                        case  70 :
                            state = 71;
                            eatText59(value);
                            return ;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  25 :
                            state = 26;
                            eatText60(value);
                            return ;
                        case  16 :
                            state = 17;
                            eatText61(value);
                            return ;
                        case  99 :
                            state = 102;
                            continue outer;
                        case  144 :
                            state = 147;
                            continue outer;
                        case  166 :
                            state = 167;
                            eatText62(value);
                            return ;
                        case  49 :
                            state = 50;
                            eatText63(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _UpdateTimestamp = javax.xml.bind.DatatypeConverter.parseDate(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Race = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _School = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Age = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Age = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DateOfBirth = javax.xml.bind.DatatypeConverter.parseDate(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _VacationAccural = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _LastName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PersonId = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Status = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PagerNumber = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SecondryOfficePhone = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _UpdateUser = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText13(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Degree = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText14(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _VeteranType = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText15(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _EraCommonsUserName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText16(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Gender = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText17(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _YearGraduated = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText18(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _HandicapType = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText19(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MiddleName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText20(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SSN = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText21(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Salutation = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText22(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IsResearchStaff = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText23(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _OfficePhone = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText24(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _EducationLevel = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText25(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IsOtherAccademicGroup = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText26(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _FaxNumber = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText27(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MobilePhoneNumber = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText28(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PrimaryTitle = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText29(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IsServiceStaff = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText30(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _State = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText31(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _VisaRenewalDate = javax.xml.bind.DatatypeConverter.parseDate(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText32(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IsMedicalStaff = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText33(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _UserName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText34(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AddressLine1 = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText35(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IsOnSabbatical = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText36(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IdProvided = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText37(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _County = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText38(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IsGraduateStudentStaff = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText39(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CountryOfCitizenship = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText40(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PriorName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText41(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AddressLine3 = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText42(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DepartmentName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText43(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IsSupportStaff = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText44(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _VisaType = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText45(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _OfficeLocation = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText46(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _HomeUnit = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText47(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _FirstName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText48(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SecondryOfficeLocation = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText49(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IdVerified = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText50(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DirectoryDepartment = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText51(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IsFaculty = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText52(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DirectoryTitle = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText53(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CountryCode = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText54(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IsHandicapped = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText55(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IsVeteran = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText56(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AddressLine2 = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText57(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _City = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText58(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AgeByFiscalYear = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_AgeByFiscalYear = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText59(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _HasVisa = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText60(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _EmailAddress = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText61(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _FullName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText62(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PostalCode = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText63(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Major = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
