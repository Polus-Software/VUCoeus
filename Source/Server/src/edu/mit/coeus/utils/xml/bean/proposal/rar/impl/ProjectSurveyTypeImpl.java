//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.3-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.07.12 at 01:32:44 EDT 
//


package edu.mit.coeus.utils.xml.bean.proposal.rar.impl;

public class ProjectSurveyTypeImpl implements edu.mit.coeus.utils.xml.bean.proposal.rar.ProjectSurveyType, com.sun.xml.bind.JAXBObject, edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.UnmarshallableObject, edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.XMLSerializable, edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.ValidatableObject
{

    protected java.lang.String _H1Text;
    protected boolean has_ClinicalTrialQuestion;
    protected boolean _ClinicalTrialQuestion;
    protected boolean has_EnvImpactQuestion;
    protected boolean _EnvImpactQuestion;
    protected java.lang.String _CBText;
    protected boolean has_G6Question;
    protected boolean _G6Question;
    protected boolean has_DisclosurePermissionQuestion;
    protected boolean _DisclosurePermissionQuestion;
    protected boolean has_StemCellQuestion;
    protected boolean _StemCellQuestion;
    protected java.lang.String _G3Text;
    protected boolean has_G4Question;
    protected boolean _G4Question;
    protected java.lang.String _G8Text;
    protected java.lang.String _EnvExemptionCBText;
    protected boolean has_H1Question;
    protected boolean _H1Question;
    protected boolean has_EnvExemptionQuestion;
    protected boolean _EnvExemptionQuestion;
    protected boolean has_SmallGrantQuestion;
    protected boolean _SmallGrantQuestion;
    protected java.lang.String _G4Text;
    protected java.lang.String _StemCellText;
    protected boolean has_CBQuestion;
    protected boolean _CBQuestion;
    protected boolean has_G8Question;
    protected boolean _G8Question;
    protected boolean has_G3Question;
    protected boolean _G3Question;
    protected boolean has_H4Question;
    protected boolean _H4Question;
    protected java.lang.String _G6Text;
    protected boolean has_NSFbeginningInvestQuestion;
    protected boolean _NSFbeginningInvestQuestion;
    protected java.lang.String _EnvImpactText;
    public final static java.lang.Class version = (edu.mit.coeus.utils.xml.bean.proposal.rar.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (edu.mit.coeus.utils.xml.bean.proposal.rar.ProjectSurveyType.class);
    }

    public java.lang.String getH1Text() {
        return _H1Text;
    }

    public void setH1Text(java.lang.String value) {
        _H1Text = value;
    }

    public boolean isClinicalTrialQuestion() {
        return _ClinicalTrialQuestion;
    }

    public void setClinicalTrialQuestion(boolean value) {
        _ClinicalTrialQuestion = value;
        has_ClinicalTrialQuestion = true;
    }

    public boolean isEnvImpactQuestion() {
        return _EnvImpactQuestion;
    }

    public void setEnvImpactQuestion(boolean value) {
        _EnvImpactQuestion = value;
        has_EnvImpactQuestion = true;
    }

    public java.lang.String getCBText() {
        return _CBText;
    }

    public void setCBText(java.lang.String value) {
        _CBText = value;
    }

    public boolean isG6Question() {
        return _G6Question;
    }

    public void setG6Question(boolean value) {
        _G6Question = value;
        has_G6Question = true;
    }

    public boolean isDisclosurePermissionQuestion() {
        return _DisclosurePermissionQuestion;
    }

    public void setDisclosurePermissionQuestion(boolean value) {
        _DisclosurePermissionQuestion = value;
        has_DisclosurePermissionQuestion = true;
    }

    public boolean isStemCellQuestion() {
        return _StemCellQuestion;
    }

    public void setStemCellQuestion(boolean value) {
        _StemCellQuestion = value;
        has_StemCellQuestion = true;
    }

    public java.lang.String getG3Text() {
        return _G3Text;
    }

    public void setG3Text(java.lang.String value) {
        _G3Text = value;
    }

    public boolean isG4Question() {
        return _G4Question;
    }

    public void setG4Question(boolean value) {
        _G4Question = value;
        has_G4Question = true;
    }

    public java.lang.String getG8Text() {
        return _G8Text;
    }

    public void setG8Text(java.lang.String value) {
        _G8Text = value;
    }

    public java.lang.String getEnvExemptionCBText() {
        return _EnvExemptionCBText;
    }

    public void setEnvExemptionCBText(java.lang.String value) {
        _EnvExemptionCBText = value;
    }

    public boolean isH1Question() {
        return _H1Question;
    }

    public void setH1Question(boolean value) {
        _H1Question = value;
        has_H1Question = true;
    }

    public boolean isEnvExemptionQuestion() {
        return _EnvExemptionQuestion;
    }

    public void setEnvExemptionQuestion(boolean value) {
        _EnvExemptionQuestion = value;
        has_EnvExemptionQuestion = true;
    }

    public boolean isSmallGrantQuestion() {
        return _SmallGrantQuestion;
    }

    public void setSmallGrantQuestion(boolean value) {
        _SmallGrantQuestion = value;
        has_SmallGrantQuestion = true;
    }

    public java.lang.String getG4Text() {
        return _G4Text;
    }

    public void setG4Text(java.lang.String value) {
        _G4Text = value;
    }

    public java.lang.String getStemCellText() {
        return _StemCellText;
    }

    public void setStemCellText(java.lang.String value) {
        _StemCellText = value;
    }

    public boolean isCBQuestion() {
        return _CBQuestion;
    }

    public void setCBQuestion(boolean value) {
        _CBQuestion = value;
        has_CBQuestion = true;
    }

    public boolean isG8Question() {
        return _G8Question;
    }

    public void setG8Question(boolean value) {
        _G8Question = value;
        has_G8Question = true;
    }

    public boolean isG3Question() {
        return _G3Question;
    }

    public void setG3Question(boolean value) {
        _G3Question = value;
        has_G3Question = true;
    }

    public boolean isH4Question() {
        return _H4Question;
    }

    public void setH4Question(boolean value) {
        _H4Question = value;
        has_H4Question = true;
    }

    public java.lang.String getG6Text() {
        return _G6Text;
    }

    public void setG6Text(java.lang.String value) {
        _G6Text = value;
    }

    public boolean isNSFbeginningInvestQuestion() {
        return _NSFbeginningInvestQuestion;
    }

    public void setNSFbeginningInvestQuestion(boolean value) {
        _NSFbeginningInvestQuestion = value;
        has_NSFbeginningInvestQuestion = true;
    }

    public java.lang.String getEnvImpactText() {
        return _EnvImpactText;
    }

    public void setEnvImpactText(java.lang.String value) {
        _EnvImpactText = value;
    }

    public edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.UnmarshallingEventHandler createUnmarshaller(edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.UnmarshallingContext context) {
        return new edu.mit.coeus.utils.xml.bean.proposal.rar.impl.ProjectSurveyTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (has_CBQuestion) {
            context.startElement("", "CBQuestion");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _CBQuestion)), "CBQuestion");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CBText!= null) {
            context.startElement("", "CBText");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _CBText), "CBText");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_G3Question) {
            context.startElement("", "G3Question");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _G3Question)), "G3Question");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_G3Text!= null) {
            context.startElement("", "G3Text");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _G3Text), "G3Text");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_G4Question) {
            context.startElement("", "G4Question");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _G4Question)), "G4Question");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_G4Text!= null) {
            context.startElement("", "G4Text");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _G4Text), "G4Text");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_G6Question) {
            context.startElement("", "G6Question");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _G6Question)), "G6Question");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_G6Text!= null) {
            context.startElement("", "G6Text");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _G6Text), "G6Text");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_G8Question) {
            context.startElement("", "G8Question");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _G8Question)), "G8Question");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_G8Text!= null) {
            context.startElement("", "G8Text");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _G8Text), "G8Text");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_EnvImpactQuestion) {
            context.startElement("", "EnvImpactQuestion");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _EnvImpactQuestion)), "EnvImpactQuestion");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_EnvImpactText!= null) {
            context.startElement("", "EnvImpactText");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _EnvImpactText), "EnvImpactText");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_EnvExemptionQuestion) {
            context.startElement("", "EnvExemptionQuestion");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _EnvExemptionQuestion)), "EnvExemptionQuestion");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_EnvExemptionCBText!= null) {
            context.startElement("", "EnvExemptionCBText");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _EnvExemptionCBText), "EnvExemptionCBText");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_H1Question) {
            context.startElement("", "H1Question");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _H1Question)), "H1Question");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_H1Text!= null) {
            context.startElement("", "H1Text");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _H1Text), "H1Text");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_H4Question) {
            context.startElement("", "H4Question");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _H4Question)), "H4Question");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_SmallGrantQuestion) {
            context.startElement("", "SmallGrantQuestion");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _SmallGrantQuestion)), "SmallGrantQuestion");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_NSFbeginningInvestQuestion) {
            context.startElement("", "NSFbeginningInvestQuestion");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _NSFbeginningInvestQuestion)), "NSFbeginningInvestQuestion");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_StemCellQuestion) {
            context.startElement("", "StemCellQuestion");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _StemCellQuestion)), "StemCellQuestion");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_StemCellText!= null) {
            context.startElement("", "StemCellText");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _StemCellText), "StemCellText");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_ClinicalTrialQuestion) {
            context.startElement("", "ClinicalTrialQuestion");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _ClinicalTrialQuestion)), "ClinicalTrialQuestion");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_DisclosurePermissionQuestion) {
            context.startElement("", "DisclosurePermissionQuestion");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _DisclosurePermissionQuestion)), "DisclosurePermissionQuestion");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (edu.mit.coeus.utils.xml.bean.proposal.rar.ProjectSurveyType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001pp"
+"sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnam"
+"eClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gram"
+"mar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcon"
+"tentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005value"
+"xp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dt"
+"t\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLc"
+"om/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000$com.sun.msv.datatype."
+"xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Built"
+"inAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Concrete"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000"
+",L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcess"
+"or;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007booleansr\u00005com.su"
+"n.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xps"
+"r\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\"psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tl"
+"ocalNameq\u0000~\u0000,L\u0000\fnamespaceURIq\u0000~\u0000,xpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001bppsr\u0000 com"
+".sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameCl"
+"assq\u0000~\u0000\u001exq\u0000~\u0000\u0003q\u0000~\u0000\"psq\u0000~\u0000$ppsr\u0000\"com.sun.msv.datatype.xsd.Qna"
+"meType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000)q\u0000~\u0000/t\u0000\u0005QNameq\u0000~\u00003q\u0000~\u00005sq\u0000~\u00006q\u0000~\u0000>q\u0000~"
+"\u0000/sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocal"
+"Nameq\u0000~\u0000,L\u0000\fnamespaceURIq\u0000~\u0000,xr\u0000\u001dcom.sun.msv.grammar.NameCla"
+"ss\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-in"
+"stancesr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000!\u0001q\u0000~\u0000Fsq\u0000~\u0000@t\u0000\nCBQuestiont\u0000\u0000q\u0000~\u0000Fsq\u0000~\u0000\u001b"
+"ppsq\u0000~\u0000\u001dq\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000$ppsr\u0000\"com.sun.msv.datatype.xsd."
+"TokenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.StringType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000)q\u0000~\u0000/t\u0000\u0005tokenq\u0000~\u00003\u0001q\u0000~\u00005sq\u0000~"
+"\u00006q\u0000~\u0000Rq\u0000~\u0000/sq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000\"pq\u0000~\u0000;q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\u0006CBTe"
+"xtq\u0000~\u0000Jq\u0000~\u0000Fsq\u0000~\u0000\u001bppsq\u0000~\u0000\u001dq\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\'sq\u0000~\u0000\u001bppsq\u0000~\u00009"
+"q\u0000~\u0000\"pq\u0000~\u0000;q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\nG3Questionq\u0000~\u0000Jq\u0000~\u0000Fsq\u0000~\u0000\u001bppsq"
+"\u0000~\u0000\u001dq\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Nsq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000\"pq\u0000~\u0000;q\u0000~\u0000Bq\u0000~\u0000Fs"
+"q\u0000~\u0000@t\u0000\u0006G3Textq\u0000~\u0000Jq\u0000~\u0000Fsq\u0000~\u0000\u001bppsq\u0000~\u0000\u001dq\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\'sq"
+"\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000\"pq\u0000~\u0000;q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\nG4Questionq\u0000~\u0000Jq\u0000~"
+"\u0000Fsq\u0000~\u0000\u001bppsq\u0000~\u0000\u001dq\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Nsq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000\"pq\u0000~\u0000"
+";q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\u0006G4Textq\u0000~\u0000Jq\u0000~\u0000Fsq\u0000~\u0000\u001bppsq\u0000~\u0000\u001dq\u0000~\u0000\"p\u0000sq\u0000"
+"~\u0000\u0000ppq\u0000~\u0000\'sq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000\"pq\u0000~\u0000;q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\nG6Ques"
+"tionq\u0000~\u0000Jq\u0000~\u0000Fsq\u0000~\u0000\u001bppsq\u0000~\u0000\u001dq\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Nsq\u0000~\u0000\u001bppsq\u0000~"
+"\u00009q\u0000~\u0000\"pq\u0000~\u0000;q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\u0006G6Textq\u0000~\u0000Jq\u0000~\u0000Fsq\u0000~\u0000\u001bppsq\u0000~"
+"\u0000\u001dq\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\'sq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000\"pq\u0000~\u0000;q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000"
+"~\u0000@t\u0000\nG8Questionq\u0000~\u0000Jq\u0000~\u0000Fsq\u0000~\u0000\u001bppsq\u0000~\u0000\u001dq\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000N"
+"sq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000\"pq\u0000~\u0000;q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\u0006G8Textq\u0000~\u0000Jq\u0000~\u0000F"
+"sq\u0000~\u0000\u001bppsq\u0000~\u0000\u001dq\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\'sq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000\"pq\u0000~\u0000;q"
+"\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\u0011EnvImpactQuestionq\u0000~\u0000Jq\u0000~\u0000Fsq\u0000~\u0000\u001bppsq\u0000~\u0000\u001dq"
+"\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Nsq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000\"pq\u0000~\u0000;q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@"
+"t\u0000\rEnvImpactTextq\u0000~\u0000Jq\u0000~\u0000Fsq\u0000~\u0000\u001bppsq\u0000~\u0000\u001dq\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\'"
+"sq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000\"pq\u0000~\u0000;q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\u0014EnvExemptionQues"
+"tionq\u0000~\u0000Jq\u0000~\u0000Fsq\u0000~\u0000\u001bppsq\u0000~\u0000\u001dq\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Nsq\u0000~\u0000\u001bppsq\u0000~"
+"\u00009q\u0000~\u0000\"pq\u0000~\u0000;q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\u0012EnvExemptionCBTextq\u0000~\u0000Jq\u0000~\u0000F"
+"sq\u0000~\u0000\u001bppsq\u0000~\u0000\u001dq\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\'sq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000\"pq\u0000~\u0000;q"
+"\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\nH1Questionq\u0000~\u0000Jq\u0000~\u0000Fsq\u0000~\u0000\u001bppsq\u0000~\u0000\u001dq\u0000~\u0000\"p\u0000s"
+"q\u0000~\u0000\u0000ppq\u0000~\u0000Nsq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000\"pq\u0000~\u0000;q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\u0006H1Te"
+"xtq\u0000~\u0000Jq\u0000~\u0000Fsq\u0000~\u0000\u001bppsq\u0000~\u0000\u001dq\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\'sq\u0000~\u0000\u001bppsq\u0000~\u00009"
+"q\u0000~\u0000\"pq\u0000~\u0000;q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\nH4Questionq\u0000~\u0000Jq\u0000~\u0000Fsq\u0000~\u0000\u001bppsq"
+"\u0000~\u0000\u001dq\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\'sq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000\"pq\u0000~\u0000;q\u0000~\u0000Bq\u0000~\u0000Fs"
+"q\u0000~\u0000@t\u0000\u0012SmallGrantQuestionq\u0000~\u0000Jq\u0000~\u0000Fsq\u0000~\u0000\u001bppsq\u0000~\u0000\u001dq\u0000~\u0000\"p\u0000sq\u0000"
+"~\u0000\u0000ppq\u0000~\u0000\'sq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000\"pq\u0000~\u0000;q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\u001aNSFbeg"
+"inningInvestQuestionq\u0000~\u0000Jq\u0000~\u0000Fsq\u0000~\u0000\u001bppsq\u0000~\u0000\u001dq\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq"
+"\u0000~\u0000\'sq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000\"pq\u0000~\u0000;q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\u0010StemCellQues"
+"tionq\u0000~\u0000Jq\u0000~\u0000Fsq\u0000~\u0000\u001bppsq\u0000~\u0000\u001dq\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Nsq\u0000~\u0000\u001bppsq\u0000~"
+"\u00009q\u0000~\u0000\"pq\u0000~\u0000;q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000\fStemCellTextq\u0000~\u0000Jq\u0000~\u0000Fsq\u0000~\u0000\u001b"
+"ppsq\u0000~\u0000\u001dq\u0000~\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\'sq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000\"pq\u0000~\u0000;q\u0000~\u0000Bq\u0000"
+"~\u0000Fsq\u0000~\u0000@t\u0000\u0015ClinicalTrialQuestionq\u0000~\u0000Jq\u0000~\u0000Fsq\u0000~\u0000\u001bppsq\u0000~\u0000\u001dq\u0000~"
+"\u0000\"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\'sq\u0000~\u0000\u001bppsq\u0000~\u00009q\u0000~\u0000\"pq\u0000~\u0000;q\u0000~\u0000Bq\u0000~\u0000Fsq\u0000~\u0000@t\u0000"
+"\u001cDisclosurePermissionQuestionq\u0000~\u0000Jq\u0000~\u0000Fsr\u0000\"com.sun.msv.gramm"
+"ar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gramm"
+"ar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expre"
+"ssionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006pa"
+"rentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000[\u0001pq\u0000~\u0000\u000eq\u0000~\u0000"
+"\u00aeq\u0000~\u0000\u00a0q\u0000~\u0000\u0092q\u0000~\u0000\u0084q\u0000~\u0000vq\u0000~\u0000hq\u0000~\u0000Zq\u0000~\u0000#q\u0000~\u0000\u00bcq\u0000~\u0000\u00c3q\u0000~\u0000\u00caq\u0000~\u0000\u00d1q\u0000~\u0000"
+"\u00dfq\u0000~\u0000\u00e6q\u0000~\u0000\u0010q\u0000~\u0000\nq\u0000~\u0000\bq\u0000~\u0000\u00a7q\u0000~\u0000\u0099q\u0000~\u0000\u008bq\u0000~\u0000}q\u0000~\u0000oq\u0000~\u0000aq\u0000~\u0000Mq\u0000~\u0000"
+"\u00b5q\u0000~\u0000\u00d8q\u0000~\u0000\rq\u0000~\u0000\u000fq\u0000~\u0000\u0012q\u0000~\u0000\u0011q\u0000~\u0000\u0014q\u0000~\u0000\u001aq\u0000~\u0000\tq\u0000~\u0000\u0016q\u0000~\u0000\u0019q\u0000~\u0000\u0005q\u0000~\u0000"
+"\u0018q\u0000~\u0000\u0015q\u0000~\u0000\u0017q\u0000~\u0000\u00afq\u0000~\u0000\u00a8q\u0000~\u0000\u00a1q\u0000~\u0000\u009aq\u0000~\u0000\u0093q\u0000~\u0000\u008cq\u0000~\u0000\u0085q\u0000~\u0000~q\u0000~\u0000wq\u0000~\u0000"
+"pq\u0000~\u0000iq\u0000~\u0000bq\u0000~\u0000[q\u0000~\u0000Tq\u0000~\u00008q\u0000~\u0000\u00a5q\u0000~\u0000\u0097q\u0000~\u0000\u0089q\u0000~\u0000{q\u0000~\u0000mq\u0000~\u0000_q\u0000~\u0000"
+"Kq\u0000~\u0000\u009eq\u0000~\u0000\u0090q\u0000~\u0000\u0082q\u0000~\u0000tq\u0000~\u0000fq\u0000~\u0000Xq\u0000~\u0000\u001cq\u0000~\u0000\u00acq\u0000~\u0000\u00b6q\u0000~\u0000\u00b3q\u0000~\u0000\u00bdq\u0000~\u0000"
+"\u00baq\u0000~\u0000\u00c4q\u0000~\u0000\u000bq\u0000~\u0000\u00c1q\u0000~\u0000\u00cbq\u0000~\u0000\u00c8q\u0000~\u0000\u00d2q\u0000~\u0000\u00cfq\u0000~\u0000\u00d9q\u0000~\u0000\u00d6q\u0000~\u0000\u00e0q\u0000~\u0000\u00ddq\u0000~\u0000"
+"\u00e7q\u0000~\u0000\u00e4q\u0000~\u0000\u0013q\u0000~\u0000\u0007q\u0000~\u0000\fq\u0000~\u0000\u0006x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------------------------------------------------------------");
        }

        protected Unmarshaller(edu.mit.coeus.utils.xml.bean.proposal.common.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return edu.mit.coeus.utils.xml.bean.proposal.rar.impl.ProjectSurveyTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  54 :
                        if (("NSFbeginningInvestQuestion" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 55;
                            return ;
                        }
                        state = 57;
                        continue outer;
                    case  42 :
                        if (("H1Question" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 43;
                            return ;
                        }
                        state = 45;
                        continue outer;
                    case  21 :
                        if (("G6Text" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  18 :
                        if (("G6Question" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  12 :
                        if (("G4Question" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  9 :
                        if (("G3Text" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  36 :
                        if (("EnvExemptionQuestion" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 37;
                            return ;
                        }
                        state = 39;
                        continue outer;
                    case  45 :
                        if (("H1Text" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 46;
                            return ;
                        }
                        state = 48;
                        continue outer;
                    case  0 :
                        if (("CBQuestion" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  39 :
                        if (("EnvExemptionCBText" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 40;
                            return ;
                        }
                        state = 42;
                        continue outer;
                    case  69 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  51 :
                        if (("SmallGrantQuestion" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 52;
                            return ;
                        }
                        state = 54;
                        continue outer;
                    case  30 :
                        if (("EnvImpactQuestion" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        state = 33;
                        continue outer;
                    case  6 :
                        if (("G3Question" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  66 :
                        if (("DisclosurePermissionQuestion" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 67;
                            return ;
                        }
                        state = 69;
                        continue outer;
                    case  27 :
                        if (("G8Text" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  57 :
                        if (("StemCellQuestion" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 58;
                            return ;
                        }
                        state = 60;
                        continue outer;
                    case  48 :
                        if (("H4Question" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 49;
                            return ;
                        }
                        state = 51;
                        continue outer;
                    case  3 :
                        if (("CBText" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  60 :
                        if (("StemCellText" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 61;
                            return ;
                        }
                        state = 63;
                        continue outer;
                    case  24 :
                        if (("G8Question" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  33 :
                        if (("EnvImpactText" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 34;
                            return ;
                        }
                        state = 36;
                        continue outer;
                    case  15 :
                        if (("G4Text" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  63 :
                        if (("ClinicalTrialQuestion" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 64;
                            return ;
                        }
                        state = 66;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  20 :
                        if (("G6Question" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  54 :
                        state = 57;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  8 :
                        if (("G3Question" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  47 :
                        if (("H1Text" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 48;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  50 :
                        if (("H4Question" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 51;
                            return ;
                        }
                        break;
                    case  53 :
                        if (("SmallGrantQuestion" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 54;
                            return ;
                        }
                        break;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  2 :
                        if (("CBQuestion" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  44 :
                        if (("H1Question" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 45;
                            return ;
                        }
                        break;
                    case  38 :
                        if (("EnvExemptionQuestion" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 39;
                            return ;
                        }
                        break;
                    case  62 :
                        if (("StemCellText" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 63;
                            return ;
                        }
                        break;
                    case  69 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  11 :
                        if (("G3Text" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  59 :
                        if (("StemCellQuestion" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 60;
                            return ;
                        }
                        break;
                    case  56 :
                        if (("NSFbeginningInvestQuestion" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 57;
                            return ;
                        }
                        break;
                    case  51 :
                        state = 54;
                        continue outer;
                    case  68 :
                        if (("DisclosurePermissionQuestion" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 69;
                            return ;
                        }
                        break;
                    case  17 :
                        if (("G4Text" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  66 :
                        state = 69;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  57 :
                        state = 60;
                        continue outer;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  26 :
                        if (("G8Question" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  60 :
                        state = 63;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  5 :
                        if (("CBText" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  29 :
                        if (("G8Text" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  65 :
                        if (("ClinicalTrialQuestion" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 66;
                            return ;
                        }
                        break;
                    case  32 :
                        if (("EnvImpactQuestion" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                    case  63 :
                        state = 66;
                        continue outer;
                    case  23 :
                        if (("G6Text" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  41 :
                        if (("EnvExemptionCBText" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 42;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("G4Question" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  35 :
                        if (("EnvImpactText" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 36;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  54 :
                        state = 57;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  69 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  51 :
                        state = 54;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  66 :
                        state = 69;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  57 :
                        state = 60;
                        continue outer;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  60 :
                        state = 63;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  63 :
                        state = 66;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  54 :
                        state = 57;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  69 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  51 :
                        state = 54;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  66 :
                        state = 69;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  57 :
                        state = 60;
                        continue outer;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  60 :
                        state = 63;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  63 :
                        state = 66;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  7 :
                            eatText1(value);
                            state = 8;
                            return ;
                        case  54 :
                            state = 57;
                            continue outer;
                        case  1 :
                            eatText2(value);
                            state = 2;
                            return ;
                        case  42 :
                            state = 45;
                            continue outer;
                        case  19 :
                            eatText3(value);
                            state = 20;
                            return ;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  40 :
                            eatText4(value);
                            state = 41;
                            return ;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  4 :
                            eatText5(value);
                            state = 5;
                            return ;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  16 :
                            eatText6(value);
                            state = 17;
                            return ;
                        case  64 :
                            eatText7(value);
                            state = 65;
                            return ;
                        case  13 :
                            eatText8(value);
                            state = 14;
                            return ;
                        case  61 :
                            eatText9(value);
                            state = 62;
                            return ;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  25 :
                            eatText10(value);
                            state = 26;
                            return ;
                        case  36 :
                            state = 39;
                            continue outer;
                        case  22 :
                            eatText11(value);
                            state = 23;
                            return ;
                        case  45 :
                            state = 48;
                            continue outer;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  58 :
                            eatText12(value);
                            state = 59;
                            return ;
                        case  39 :
                            state = 42;
                            continue outer;
                        case  69 :
                            revertToParentFromText(value);
                            return ;
                        case  51 :
                            state = 54;
                            continue outer;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  66 :
                            state = 69;
                            continue outer;
                        case  43 :
                            eatText13(value);
                            state = 44;
                            return ;
                        case  67 :
                            eatText14(value);
                            state = 68;
                            return ;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  57 :
                            state = 60;
                            continue outer;
                        case  48 :
                            state = 51;
                            continue outer;
                        case  52 :
                            eatText15(value);
                            state = 53;
                            return ;
                        case  34 :
                            eatText16(value);
                            state = 35;
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  60 :
                            state = 63;
                            continue outer;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  49 :
                            eatText17(value);
                            state = 50;
                            return ;
                        case  33 :
                            state = 36;
                            continue outer;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  28 :
                            eatText18(value);
                            state = 29;
                            return ;
                        case  46 :
                            eatText19(value);
                            state = 47;
                            return ;
                        case  10 :
                            eatText20(value);
                            state = 11;
                            return ;
                        case  37 :
                            eatText21(value);
                            state = 38;
                            return ;
                        case  55 :
                            eatText22(value);
                            state = 56;
                            return ;
                        case  63 :
                            state = 66;
                            continue outer;
                        case  31 :
                            eatText23(value);
                            state = 32;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _G3Question = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_G3Question = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CBQuestion = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_CBQuestion = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _G6Question = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_G6Question = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _EnvExemptionCBText = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CBText = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _G4Text = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ClinicalTrialQuestion = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_ClinicalTrialQuestion = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _G4Question = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_G4Question = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _StemCellText = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _G8Question = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_G8Question = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _G6Text = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _StemCellQuestion = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_StemCellQuestion = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText13(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _H1Question = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_H1Question = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText14(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DisclosurePermissionQuestion = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_DisclosurePermissionQuestion = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText15(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SmallGrantQuestion = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_SmallGrantQuestion = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText16(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _EnvImpactText = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText17(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _H4Question = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_H4Question = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText18(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _G8Text = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText19(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _H1Text = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText20(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _G3Text = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText21(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _EnvExemptionQuestion = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_EnvExemptionQuestion = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText22(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _NSFbeginningInvestQuestion = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_NSFbeginningInvestQuestion = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText23(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _EnvImpactQuestion = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_EnvImpactQuestion = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
