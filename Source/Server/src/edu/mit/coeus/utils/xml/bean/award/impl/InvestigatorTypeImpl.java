//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.12.13 at 02:14:23 EST 
//


package edu.mit.coeus.utils.xml.bean.award.impl;

public class InvestigatorTypeImpl implements edu.mit.coeus.utils.xml.bean.award.InvestigatorType, com.sun.xml.bind.JAXBObject, edu.mit.coeus.utils.xml.bean.award.impl.runtime.UnmarshallableObject, edu.mit.coeus.utils.xml.bean.award.impl.runtime.XMLSerializable, edu.mit.coeus.utils.xml.bean.award.impl.runtime.ValidatableObject
{

    protected boolean has_FEDRDEBRFlag;
    protected boolean _FEDRDEBRFlag;
    protected boolean has_COIFlag;
    protected boolean _COIFlag;
    protected java.lang.String _PersonName;
    protected boolean has_Faculty;
    protected boolean _Faculty;
    protected boolean has_SequenceNumber;
    protected int _SequenceNumber;
    protected com.sun.xml.bind.util.ListImpl _InvestigatorUnit;
    protected boolean has_NonEmployee;
    protected boolean _NonEmployee;
    protected java.lang.String _AwardNumber;
    protected java.math.BigDecimal _PercentEffort;
    protected boolean has_FEDRDELQFlag;
    protected boolean _FEDRDELQFlag;
    protected java.lang.String _PersonAddress;
    protected java.lang.String _PersonId;
    protected boolean has_PrincipalInvestigator;
    protected boolean _PrincipalInvestigator;
    public final static java.lang.Class version = (edu.mit.coeus.utils.xml.bean.award.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (edu.mit.coeus.utils.xml.bean.award.InvestigatorType.class);
    }

    public boolean isFEDRDEBRFlag() {
        return _FEDRDEBRFlag;
    }

    public void setFEDRDEBRFlag(boolean value) {
        _FEDRDEBRFlag = value;
        has_FEDRDEBRFlag = true;
    }

    public boolean isCOIFlag() {
        return _COIFlag;
    }

    public void setCOIFlag(boolean value) {
        _COIFlag = value;
        has_COIFlag = true;
    }

    public java.lang.String getPersonName() {
        return _PersonName;
    }

    public void setPersonName(java.lang.String value) {
        _PersonName = value;
    }

    public boolean isFaculty() {
        return _Faculty;
    }

    public void setFaculty(boolean value) {
        _Faculty = value;
        has_Faculty = true;
    }

    public int getSequenceNumber() {
        return _SequenceNumber;
    }

    public void setSequenceNumber(int value) {
        _SequenceNumber = value;
        has_SequenceNumber = true;
    }

    protected com.sun.xml.bind.util.ListImpl _getInvestigatorUnit() {
        if (_InvestigatorUnit == null) {
            _InvestigatorUnit = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _InvestigatorUnit;
    }

    public java.util.List getInvestigatorUnit() {
        return _getInvestigatorUnit();
    }

    public boolean isNonEmployee() {
        return _NonEmployee;
    }

    public void setNonEmployee(boolean value) {
        _NonEmployee = value;
        has_NonEmployee = true;
    }

    public java.lang.String getAwardNumber() {
        return _AwardNumber;
    }

    public void setAwardNumber(java.lang.String value) {
        _AwardNumber = value;
    }

    public java.math.BigDecimal getPercentEffort() {
        return _PercentEffort;
    }

    public void setPercentEffort(java.math.BigDecimal value) {
        _PercentEffort = value;
    }

    public boolean isFEDRDELQFlag() {
        return _FEDRDELQFlag;
    }

    public void setFEDRDELQFlag(boolean value) {
        _FEDRDELQFlag = value;
        has_FEDRDELQFlag = true;
    }

    public java.lang.String getPersonAddress() {
        return _PersonAddress;
    }

    public void setPersonAddress(java.lang.String value) {
        _PersonAddress = value;
    }

    public java.lang.String getPersonId() {
        return _PersonId;
    }

    public void setPersonId(java.lang.String value) {
        _PersonId = value;
    }

    public boolean isPrincipalInvestigator() {
        return _PrincipalInvestigator;
    }

    public void setPrincipalInvestigator(boolean value) {
        _PrincipalInvestigator = value;
        has_PrincipalInvestigator = true;
    }

    public edu.mit.coeus.utils.xml.bean.award.impl.runtime.UnmarshallingEventHandler createUnmarshaller(edu.mit.coeus.utils.xml.bean.award.impl.runtime.UnmarshallingContext context) {
        return new edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(edu.mit.coeus.utils.xml.bean.award.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx6 = 0;
        final int len6 = ((_InvestigatorUnit == null)? 0 :_InvestigatorUnit.size());
        if (_AwardNumber!= null) {
            context.startElement("", "AwardNumber");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _AwardNumber), "AwardNumber");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_SequenceNumber) {
            context.startElement("", "SequenceNumber");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _SequenceNumber)), "SequenceNumber");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PersonId!= null) {
            context.startElement("", "PersonId");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PersonId), "PersonId");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PersonName!= null) {
            context.startElement("", "PersonName");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PersonName), "PersonName");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_PrincipalInvestigator) {
            context.startElement("", "PrincipalInvestigator");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _PrincipalInvestigator)), "PrincipalInvestigator");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PersonAddress!= null) {
            context.startElement("", "PersonAddress");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PersonAddress), "PersonAddress");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_NonEmployee) {
            context.startElement("", "NonEmployee");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _NonEmployee)), "NonEmployee");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_Faculty) {
            context.startElement("", "Faculty");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Faculty)), "Faculty");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_COIFlag) {
            context.startElement("", "COI_Flag");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _COIFlag)), "COIFlag");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PercentEffort!= null) {
            context.startElement("", "PercentEffort");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _PercentEffort)), "PercentEffort");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_FEDRDEBRFlag) {
            context.startElement("", "FEDR_DEBR_Flag");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _FEDRDEBRFlag)), "FEDRDEBRFlag");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_FEDRDELQFlag) {
            context.startElement("", "FEDR_DELQ_Flag");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _FEDRDELQFlag)), "FEDRDELQFlag");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.award.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        while (idx6 != len6) {
            context.startElement("", "InvestigatorUnit");
            int idx_24 = idx6;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _InvestigatorUnit.get(idx_24 ++)), "InvestigatorUnit");
            context.endNamespaceDecls();
            int idx_25 = idx6;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _InvestigatorUnit.get(idx_25 ++)), "InvestigatorUnit");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _InvestigatorUnit.get(idx6 ++)), "InvestigatorUnit");
            context.endElement();
        }
    }

    public void serializeAttributes(edu.mit.coeus.utils.xml.bean.award.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx6 = 0;
        final int len6 = ((_InvestigatorUnit == null)? 0 :_InvestigatorUnit.size());
        while (idx6 != len6) {
            idx6 += 1;
        }
    }

    public void serializeURIs(edu.mit.coeus.utils.xml.bean.award.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx6 = 0;
        final int len6 = ((_InvestigatorUnit == null)? 0 :_InvestigatorUnit.size());
        while (idx6 != len6) {
            idx6 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (edu.mit.coeus.utils.xml.bean.award.InvestigatorType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun."
+"msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.gram"
+"mar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/ms"
+"v/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003"
+"sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom"
+".sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/data"
+"type/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/Stri"
+"ngPair;xq\u0000~\u0000\u0003q\u0000~\u0000\u0018psr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.Builti"
+"nAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\""
+"L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcesso"
+"r;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun."
+"msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,"
+"com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr"
+"\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalN"
+"ameq\u0000~\u0000\"L\u0000\fnamespaceURIq\u0000~\u0000\"xpq\u0000~\u0000&q\u0000~\u0000%sq\u0000~\u0000\u0011ppsr\u0000 com.sun."
+"msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000"
+"~\u0000\u0014xq\u0000~\u0000\u0003q\u0000~\u0000\u0018psq\u0000~\u0000\u001appsr\u0000\"com.sun.msv.datatype.xsd.QnameTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001fq\u0000~\u0000%t\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd."
+"WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000(q\u0000~\u0000+sq\u0000~\u0000,q\u0000~\u0000"
+"4q\u0000~\u0000%sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tl"
+"ocalNameq\u0000~\u0000\"L\u0000\fnamespaceURIq\u0000~\u0000\"xr\u0000\u001dcom.sun.msv.grammar.Nam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchem"
+"a-instancesr\u00000com.sun.msv.grammar.Expression$EpsilonExpressi"
+"on\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0017\u0001psq\u0000~\u00008t\u0000\u000bAwardNumbert\u0000\u0000q\u0000~\u0000>sq\u0000~\u0000"
+"\u0011ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0018p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001aq\u0000~\u0000\u0018psr\u0000 com.sun.msv.datatype"
+".xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerD"
+"erivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/x"
+"sd/XSDatatypeImpl;xq\u0000~\u0000\u001fq\u0000~\u0000%t\u0000\u0003intq\u0000~\u00006sr\u0000*com.sun.msv.data"
+"type.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatyp"
+"e.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object"
+";xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraintFac"
+"et\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~"
+"\u0000IL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L"
+"\u0000\tfacetNameq\u0000~\u0000\"xq\u0000~\u0000!ppq\u0000~\u00006\u0000\u0001sr\u0000*com.sun.msv.datatype.xsd."
+"MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Mppq\u0000~\u00006\u0000\u0000sr\u0000!com.sun.msv.d"
+"atatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Hq\u0000~\u0000%t\u0000\u0004longq\u0000~\u00006sq\u0000~\u0000L"
+"ppq\u0000~\u00006\u0000\u0001sq\u0000~\u0000Sppq\u0000~\u00006\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.Integer"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Hq\u0000~\u0000%t\u0000\u0007integerq\u0000~\u00006sr\u0000,com.sun.msv.dat"
+"atype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun."
+"msv.datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002"
+"\u0000\u0000xq\u0000~\u0000Pppq\u0000~\u00006\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001fq\u0000~\u0000%t\u0000\u0007decimalq\u0000~\u00006q\u0000~\u0000at\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q"
+"\u0000~\u0000[t\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010"
+"java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000[t\u0000\fmaxInclusivesq\u0000"
+"~\u0000e\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000Vq\u0000~\u0000dsr\u0000\u0011java.lang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valu"
+"exq\u0000~\u0000f\u0080\u0000\u0000\u0000q\u0000~\u0000Vq\u0000~\u0000hsq\u0000~\u0000j\u007f\u00ff\u00ff\u00ffq\u0000~\u0000+sq\u0000~\u0000,q\u0000~\u0000Kq\u0000~\u0000%sq\u0000~\u0000\u0011pp"
+"sq\u0000~\u0000/q\u0000~\u0000\u0018pq\u0000~\u00001q\u0000~\u0000:q\u0000~\u0000>sq\u0000~\u00008t\u0000\u000eSequenceNumberq\u0000~\u0000Bq\u0000~\u0000>"
+"sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0018p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001dsq\u0000~\u0000\u0011ppsq\u0000~\u0000/q\u0000~\u0000\u0018pq\u0000~\u00001q"
+"\u0000~\u0000:q\u0000~\u0000>sq\u0000~\u00008t\u0000\bPersonIdq\u0000~\u0000Bq\u0000~\u0000>sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0018p\u0000sq\u0000"
+"~\u0000\u0000ppq\u0000~\u0000\u001dsq\u0000~\u0000\u0011ppsq\u0000~\u0000/q\u0000~\u0000\u0018pq\u0000~\u00001q\u0000~\u0000:q\u0000~\u0000>sq\u0000~\u00008t\u0000\nPerson"
+"Nameq\u0000~\u0000Bq\u0000~\u0000>sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0018p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001appsr\u0000$com.s"
+"un.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001fq\u0000~\u0000%t\u0000\u0007bool"
+"eanq\u0000~\u00006q\u0000~\u0000+sq\u0000~\u0000,q\u0000~\u0000\u0086q\u0000~\u0000%sq\u0000~\u0000\u0011ppsq\u0000~\u0000/q\u0000~\u0000\u0018pq\u0000~\u00001q\u0000~\u0000:q"
+"\u0000~\u0000>sq\u0000~\u00008t\u0000\u0015PrincipalInvestigatorq\u0000~\u0000Bq\u0000~\u0000>sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0013q\u0000"
+"~\u0000\u0018p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u001dsq\u0000~\u0000\u0011ppsq\u0000~\u0000/q\u0000~\u0000\u0018pq\u0000~\u00001q\u0000~\u0000:q\u0000~\u0000>sq\u0000~\u00008t"
+"\u0000\rPersonAddressq\u0000~\u0000Bq\u0000~\u0000>sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0018p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0083s"
+"q\u0000~\u0000\u0011ppsq\u0000~\u0000/q\u0000~\u0000\u0018pq\u0000~\u00001q\u0000~\u0000:q\u0000~\u0000>sq\u0000~\u00008t\u0000\u000bNonEmployeeq\u0000~\u0000Bq"
+"\u0000~\u0000>sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0018p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0083sq\u0000~\u0000\u0011ppsq\u0000~\u0000/q\u0000~\u0000\u0018pq\u0000"
+"~\u00001q\u0000~\u0000:q\u0000~\u0000>sq\u0000~\u00008t\u0000\u0007Facultyq\u0000~\u0000Bq\u0000~\u0000>sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0018p\u0000"
+"sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0083sq\u0000~\u0000\u0011ppsq\u0000~\u0000/q\u0000~\u0000\u0018pq\u0000~\u00001q\u0000~\u0000:q\u0000~\u0000>sq\u0000~\u00008t\u0000\bCOI"
+"_Flagq\u0000~\u0000Bq\u0000~\u0000>sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0018p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u001appq\u0000~\u0000aq\u0000~"
+"\u0000+sq\u0000~\u0000,q\u0000~\u0000bq\u0000~\u0000%sq\u0000~\u0000\u0011ppsq\u0000~\u0000/q\u0000~\u0000\u0018pq\u0000~\u00001q\u0000~\u0000:q\u0000~\u0000>sq\u0000~\u00008t"
+"\u0000\rPercentEffortq\u0000~\u0000Bq\u0000~\u0000>sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0018p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0083s"
+"q\u0000~\u0000\u0011ppsq\u0000~\u0000/q\u0000~\u0000\u0018pq\u0000~\u00001q\u0000~\u0000:q\u0000~\u0000>sq\u0000~\u00008t\u0000\u000eFEDR_DEBR_Flagq\u0000~"
+"\u0000Bq\u0000~\u0000>sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u0013q\u0000~\u0000\u0018p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0083sq\u0000~\u0000\u0011ppsq\u0000~\u0000/q\u0000~\u0000\u0018"
+"pq\u0000~\u00001q\u0000~\u0000:q\u0000~\u0000>sq\u0000~\u00008t\u0000\u000eFEDR_DELQ_Flagq\u0000~\u0000Bq\u0000~\u0000>sq\u0000~\u0000\u0011ppsr\u0000"
+" com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv."
+"grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0018psq\u0000~\u0000\u0013q\u0000~\u0000"
+"\u0018p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0013pp\u0000sq\u0000~\u0000\u0011ppsq\u0000~\u0000\u00c0q\u0000~\u0000\u0018psq\u0000~\u0000/q\u0000~\u0000\u0018psr\u00002com."
+"sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0003q\u0000~\u0000?psr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u00009q\u0000~\u0000>sq\u0000~\u00008t\u00008edu.mit.coeus.utils.xml.bean.award.Investiga"
+"torUnitsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq"
+"\u0000~\u0000\u0011ppsq\u0000~\u0000/q\u0000~\u0000\u0018pq\u0000~\u00001q\u0000~\u0000:q\u0000~\u0000>sq\u0000~\u00008t\u0000\u0010InvestigatorUnitq\u0000"
+"~\u0000Bq\u0000~\u0000>sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\b"
+"expTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xp"
+"sr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003"
+"I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Exp"
+"ressionPool;xp\u0000\u0000\u00006\u0001pq\u0000~\u0000\u0012q\u0000~\u0000rq\u0000~\u0000yq\u0000~\u0000\u008cq\u0000~\u0000\u0007q\u0000~\u0000\u00a8q\u0000~\u0000\u0019q\u0000~\u0000t"
+"q\u0000~\u0000{q\u0000~\u0000\u008eq\u0000~\u0000\u0006q\u0000~\u0000\u00c6q\u0000~\u0000\u0082q\u0000~\u0000\u0095q\u0000~\u0000\u009cq\u0000~\u0000\u00a3q\u0000~\u0000\u00b3q\u0000~\u0000\u00baq\u0000~\u0000\u00bfq\u0000~\u0000\u00aa"
+"q\u0000~\u0000\u0005q\u0000~\u0000\u0010q\u0000~\u0000\fq\u0000~\u0000\u000bq\u0000~\u0000Eq\u0000~\u0000\u00c4q\u0000~\u0000\nq\u0000~\u0000Cq\u0000~\u0000.q\u0000~\u0000nq\u0000~\u0000uq\u0000~\u0000|"
+"q\u0000~\u0000\u0088q\u0000~\u0000\u0080q\u0000~\u0000\u008fq\u0000~\u0000\u0096q\u0000~\u0000\u0093q\u0000~\u0000\u009dq\u0000~\u0000\u009aq\u0000~\u0000\u00a4q\u0000~\u0000\u00a1q\u0000~\u0000\u00adq\u0000~\u0000\bq\u0000~\u0000\u00b4"
+"q\u0000~\u0000\u00b1q\u0000~\u0000\u00bbq\u0000~\u0000\u00b8q\u0000~\u0000\u00d0q\u0000~\u0000\u00c2q\u0000~\u0000\u000eq\u0000~\u0000\u00c7q\u0000~\u0000\u000fq\u0000~\u0000\rq\u0000~\u0000\tx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends edu.mit.coeus.utils.xml.bean.award.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(edu.mit.coeus.utils.xml.bean.award.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------------------------------");
        }

        protected Unmarshaller(edu.mit.coeus.utils.xml.bean.award.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  36 :
                        if (("InvestigatorUnit" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 37;
                            return ;
                        }
                        state = 39;
                        continue outer;
                    case  15 :
                        if (("PersonAddress" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  39 :
                        if (("InvestigatorUnit" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 37;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  37 :
                        if (("AwardNumber" == ___local)&&("" == ___uri)) {
                            _getInvestigatorUnit().add(((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl.class), 38, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SequenceNumber" == ___local)&&("" == ___uri)) {
                            _getInvestigatorUnit().add(((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl.class), 38, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PersonId" == ___local)&&("" == ___uri)) {
                            _getInvestigatorUnit().add(((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl.class), 38, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("UnitNumber" == ___local)&&("" == ___uri)) {
                            _getInvestigatorUnit().add(((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl.class), 38, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("UnitName" == ___local)&&("" == ___uri)) {
                            _getInvestigatorUnit().add(((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl.class), 38, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LeadUnit" == ___local)&&("" == ___uri)) {
                            _getInvestigatorUnit().add(((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl.class), 38, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OSPAdminName" == ___local)&&("" == ___uri)) {
                            _getInvestigatorUnit().add(((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl.class), 38, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AdministrativeOfficer" == ___local)&&("" == ___uri)) {
                            _getInvestigatorUnit().add(((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl.class), 38, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AdministrativeOfficerName" == ___local)&&("" == ___uri)) {
                            _getInvestigatorUnit().add(((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl.class), 38, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("UnitHead" == ___local)&&("" == ___uri)) {
                            _getInvestigatorUnit().add(((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl.class), 38, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("UnitHeadName" == ___local)&&("" == ___uri)) {
                            _getInvestigatorUnit().add(((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl.class), 38, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("DeanVp" == ___local)&&("" == ___uri)) {
                            _getInvestigatorUnit().add(((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl.class), 38, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("DeanVpName" == ___local)&&("" == ___uri)) {
                            _getInvestigatorUnit().add(((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl.class), 38, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OtherIndividualToNotify" == ___local)&&("" == ___uri)) {
                            _getInvestigatorUnit().add(((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl.class), 38, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OtherIndividualToNotifyName" == ___local)&&("" == ___uri)) {
                            _getInvestigatorUnit().add(((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl.class), 38, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("UnitAdministrator" == ___local)&&("" == ___uri)) {
                            _getInvestigatorUnit().add(((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl.class), 38, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getInvestigatorUnit().add(((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl) spawnChildFromEnterElement((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl.class), 38, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  27 :
                        if (("PercentEffort" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  24 :
                        if (("COI_Flag" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  21 :
                        if (("Faculty" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  18 :
                        if (("NonEmployee" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  6 :
                        if (("PersonId" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  3 :
                        if (("SequenceNumber" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  30 :
                        if (("FEDR_DEBR_Flag" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        state = 33;
                        continue outer;
                    case  9 :
                        if (("PersonName" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  0 :
                        if (("AwardNumber" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  33 :
                        if (("FEDR_DELQ_Flag" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 34;
                            return ;
                        }
                        state = 36;
                        continue outer;
                    case  12 :
                        if (("PrincipalInvestigator" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  36 :
                        state = 39;
                        continue outer;
                    case  20 :
                        if (("NonEmployee" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  23 :
                        if (("Faculty" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  26 :
                        if (("COI_Flag" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("PrincipalInvestigator" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  39 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  32 :
                        if (("FEDR_DEBR_Flag" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                    case  37 :
                        _getInvestigatorUnit().add(((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl) spawnChildFromLeaveElement((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl.class), 38, ___uri, ___local, ___qname)));
                        return ;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  5 :
                        if (("SequenceNumber" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  11 :
                        if (("PersonName" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  2 :
                        if (("AwardNumber" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  17 :
                        if (("PersonAddress" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  29 :
                        if (("PercentEffort" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  35 :
                        if (("FEDR_DELQ_Flag" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 36;
                            return ;
                        }
                        break;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  38 :
                        if (("InvestigatorUnit" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 39;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("PersonId" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  36 :
                        state = 39;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  39 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  37 :
                        _getInvestigatorUnit().add(((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl) spawnChildFromEnterAttribute((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl.class), 38, ___uri, ___local, ___qname)));
                        return ;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  36 :
                        state = 39;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  39 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  37 :
                        _getInvestigatorUnit().add(((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl) spawnChildFromLeaveAttribute((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl.class), 38, ___uri, ___local, ___qname)));
                        return ;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  36 :
                            state = 39;
                            continue outer;
                        case  34 :
                            eatText1(value);
                            state = 35;
                            return ;
                        case  28 :
                            eatText2(value);
                            state = 29;
                            return ;
                        case  16 :
                            eatText3(value);
                            state = 17;
                            return ;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  39 :
                            revertToParentFromText(value);
                            return ;
                        case  37 :
                            _getInvestigatorUnit().add(((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl) spawnChildFromText((edu.mit.coeus.utils.xml.bean.award.impl.InvestigatorUnitsTypeImpl.class), 38, value)));
                            return ;
                        case  25 :
                            eatText4(value);
                            state = 26;
                            return ;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  19 :
                            eatText5(value);
                            state = 20;
                            return ;
                        case  22 :
                            eatText6(value);
                            state = 23;
                            return ;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  1 :
                            eatText7(value);
                            state = 2;
                            return ;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  13 :
                            eatText8(value);
                            state = 14;
                            return ;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  31 :
                            eatText9(value);
                            state = 32;
                            return ;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  33 :
                            state = 36;
                            continue outer;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  10 :
                            eatText10(value);
                            state = 11;
                            return ;
                        case  7 :
                            eatText11(value);
                            state = 8;
                            return ;
                        case  4 :
                            eatText12(value);
                            state = 5;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _FEDRDELQFlag = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_FEDRDELQFlag = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PercentEffort = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PersonAddress = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _COIFlag = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_COIFlag = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _NonEmployee = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_NonEmployee = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Faculty = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Faculty = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AwardNumber = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PrincipalInvestigator = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_PrincipalInvestigator = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _FEDRDEBRFlag = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_FEDRDEBRFlag = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PersonName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PersonId = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SequenceNumber = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_SequenceNumber = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
