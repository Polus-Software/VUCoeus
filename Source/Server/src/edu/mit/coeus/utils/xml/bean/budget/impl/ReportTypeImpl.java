//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.02.03 at 04:29:59 PM GMT+05:30 
//


package edu.mit.coeus.utils.xml.bean.budget.impl;

public class ReportTypeImpl implements edu.mit.coeus.utils.xml.bean.budget.ReportType, com.sun.xml.bind.JAXBObject, edu.mit.coeus.utils.xml.bean.budget.impl.runtime.UnmarshallableObject, edu.mit.coeus.utils.xml.bean.budget.impl.runtime.XMLSerializable, edu.mit.coeus.utils.xml.bean.budget.impl.runtime.ValidatableObject
{

    protected boolean has_BudgetCategoryCode;
    protected int _BudgetCategoryCode;
    protected boolean has_OnOffCampus;
    protected boolean _OnOffCampus;
    protected java.lang.String _PersonName;
    protected boolean has_PercentEffort;
    protected double _PercentEffort;
    protected java.lang.String _RateTypeDesc;
    protected boolean has_InvestigatorFlag;
    protected int _InvestigatorFlag;
    protected boolean has_PercentCharged;
    protected double _PercentCharged;
    protected java.lang.String _CostElementDescription;
    protected java.math.BigDecimal _CalculatedCost;
    protected java.math.BigDecimal _SalaryRequested;
    protected java.lang.String _RateClassDesc;
    protected java.math.BigDecimal _Fringe;
    protected java.math.BigDecimal _CostSharingAmount;
    protected java.lang.String _EndDate;
    protected boolean has_SortId;
    protected int _SortId;
    protected java.lang.String _StartDate;
    protected java.lang.String _BudgetCategoryDescription;
    protected boolean has_AppliedRate;
    protected double _AppliedRate;
    protected java.lang.String _EmployeeBenefitRate;
    protected java.lang.String _VacationRate;
    public final static java.lang.Class version = (edu.mit.coeus.utils.xml.bean.budget.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (edu.mit.coeus.utils.xml.bean.budget.ReportType.class);
    }

    public int getBudgetCategoryCode() {
        return _BudgetCategoryCode;
    }

    public void setBudgetCategoryCode(int value) {
        _BudgetCategoryCode = value;
        has_BudgetCategoryCode = true;
    }

    public boolean isOnOffCampus() {
        return _OnOffCampus;
    }

    public void setOnOffCampus(boolean value) {
        _OnOffCampus = value;
        has_OnOffCampus = true;
    }

    public java.lang.String getPersonName() {
        return _PersonName;
    }

    public void setPersonName(java.lang.String value) {
        _PersonName = value;
    }

    public double getPercentEffort() {
        return _PercentEffort;
    }

    public void setPercentEffort(double value) {
        _PercentEffort = value;
        has_PercentEffort = true;
    }

    public java.lang.String getRateTypeDesc() {
        return _RateTypeDesc;
    }

    public void setRateTypeDesc(java.lang.String value) {
        _RateTypeDesc = value;
    }

    public int getInvestigatorFlag() {
        return _InvestigatorFlag;
    }

    public void setInvestigatorFlag(int value) {
        _InvestigatorFlag = value;
        has_InvestigatorFlag = true;
    }

    public double getPercentCharged() {
        return _PercentCharged;
    }

    public void setPercentCharged(double value) {
        _PercentCharged = value;
        has_PercentCharged = true;
    }

    public java.lang.String getCostElementDescription() {
        return _CostElementDescription;
    }

    public void setCostElementDescription(java.lang.String value) {
        _CostElementDescription = value;
    }

    public java.math.BigDecimal getCalculatedCost() {
        return _CalculatedCost;
    }

    public void setCalculatedCost(java.math.BigDecimal value) {
        _CalculatedCost = value;
    }

    public java.math.BigDecimal getSalaryRequested() {
        return _SalaryRequested;
    }

    public void setSalaryRequested(java.math.BigDecimal value) {
        _SalaryRequested = value;
    }

    public java.lang.String getRateClassDesc() {
        return _RateClassDesc;
    }

    public void setRateClassDesc(java.lang.String value) {
        _RateClassDesc = value;
    }

    public java.math.BigDecimal getFringe() {
        return _Fringe;
    }

    public void setFringe(java.math.BigDecimal value) {
        _Fringe = value;
    }

    public java.math.BigDecimal getCostSharingAmount() {
        return _CostSharingAmount;
    }

    public void setCostSharingAmount(java.math.BigDecimal value) {
        _CostSharingAmount = value;
    }

    public java.lang.String getEndDate() {
        return _EndDate;
    }

    public void setEndDate(java.lang.String value) {
        _EndDate = value;
    }

    public int getSortId() {
        return _SortId;
    }

    public void setSortId(int value) {
        _SortId = value;
        has_SortId = true;
    }

    public java.lang.String getStartDate() {
        return _StartDate;
    }

    public void setStartDate(java.lang.String value) {
        _StartDate = value;
    }

    public java.lang.String getBudgetCategoryDescription() {
        return _BudgetCategoryDescription;
    }

    public void setBudgetCategoryDescription(java.lang.String value) {
        _BudgetCategoryDescription = value;
    }

    public double getAppliedRate() {
        return _AppliedRate;
    }

    public void setAppliedRate(double value) {
        _AppliedRate = value;
        has_AppliedRate = true;
    }

    public java.lang.String getEmployeeBenefitRate() {
        return _EmployeeBenefitRate;
    }

    public void setEmployeeBenefitRate(java.lang.String value) {
        _EmployeeBenefitRate = value;
    }

    public java.lang.String getVacationRate() {
        return _VacationRate;
    }

    public void setVacationRate(java.lang.String value) {
        _VacationRate = value;
    }

    public edu.mit.coeus.utils.xml.bean.budget.impl.runtime.UnmarshallingEventHandler createUnmarshaller(edu.mit.coeus.utils.xml.bean.budget.impl.runtime.UnmarshallingContext context) {
        return new edu.mit.coeus.utils.xml.bean.budget.impl.ReportTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(edu.mit.coeus.utils.xml.bean.budget.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_StartDate!= null) {
            context.startElement("", "StartDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _StartDate), "StartDate");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.budget.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_EndDate!= null) {
            context.startElement("", "EndDate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _EndDate), "EndDate");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.budget.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_BudgetCategoryCode) {
            context.startElement("", "BudgetCategoryCode");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _BudgetCategoryCode)), "BudgetCategoryCode");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.budget.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_BudgetCategoryDescription!= null) {
            context.startElement("", "BudgetCategoryDescription");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _BudgetCategoryDescription), "BudgetCategoryDescription");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.budget.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_InvestigatorFlag) {
            context.startElement("", "InvestigatorFlag");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _InvestigatorFlag)), "InvestigatorFlag");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.budget.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_PersonName!= null) {
            context.startElement("", "PersonName");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _PersonName), "PersonName");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.budget.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_SalaryRequested!= null) {
            context.startElement("", "SalaryRequested");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _SalaryRequested)), "SalaryRequested");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.budget.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_PercentCharged) {
            context.startElement("", "PercentCharged");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDouble(((double) _PercentCharged)), "PercentCharged");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.budget.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_PercentEffort) {
            context.startElement("", "PercentEffort");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDouble(((double) _PercentEffort)), "PercentEffort");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.budget.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_EmployeeBenefitRate!= null) {
            context.startElement("", "EmployeeBenefitRate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _EmployeeBenefitRate), "EmployeeBenefitRate");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.budget.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_VacationRate!= null) {
            context.startElement("", "VacationRate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _VacationRate), "VacationRate");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.budget.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_Fringe!= null) {
            context.startElement("", "Fringe");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _Fringe)), "Fringe");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.budget.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_OnOffCampus) {
            context.startElement("", "OnOffCampus");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _OnOffCampus)), "OnOffCampus");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.budget.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CalculatedCost!= null) {
            context.startElement("", "CalculatedCost");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _CalculatedCost)), "CalculatedCost");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.budget.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_SortId) {
            context.startElement("", "SortId");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _SortId)), "SortId");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.budget.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CostElementDescription!= null) {
            context.startElement("", "CostElementDescription");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _CostElementDescription), "CostElementDescription");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.budget.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_AppliedRate) {
            context.startElement("", "AppliedRate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDouble(((double) _AppliedRate)), "AppliedRate");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.budget.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_RateTypeDesc!= null) {
            context.startElement("", "RateTypeDesc");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _RateTypeDesc), "RateTypeDesc");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.budget.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_RateClassDesc!= null) {
            context.startElement("", "RateClassDesc");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _RateClassDesc), "RateClassDesc");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.budget.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_CostSharingAmount!= null) {
            context.startElement("", "CostSharingAmount");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _CostSharingAmount)), "CostSharingAmount");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.utils.xml.bean.budget.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(edu.mit.coeus.utils.xml.bean.budget.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(edu.mit.coeus.utils.xml.bean.budget.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (edu.mit.coeus.utils.xml.bean.budget.ReportType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv."
+"grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar."
+"trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gr"
+"ammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011"
+"java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun"
+".msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype"
+"/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPa"
+"ir;xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003"
+"L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000)L\u0000\nwhite"
+"Spacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 h"
+"ttp://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.data"
+"type.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun."
+"msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.su"
+"n.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003p"
+"psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000)"
+"L\u0000\fnamespaceURIq\u0000~\u0000)xpq\u0000~\u0000-q\u0000~\u0000,sq\u0000~\u0000\u0018ppsr\u0000 com.sun.msv.gram"
+"mar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u001bxq\u0000~\u0000"
+"\u0003q\u0000~\u0000\u001fpsq\u0000~\u0000!ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000&q\u0000~\u0000,t\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpa"
+"ceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000/q\u0000~\u00002sq\u0000~\u00003q\u0000~\u0000;q\u0000~\u0000,sr"
+"\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalName"
+"q\u0000~\u0000)L\u0000\fnamespaceURIq\u0000~\u0000)xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instan"
+"cesr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u001e\u0001psq\u0000~\u0000?t\u0000\tStartDatet\u0000\u0000q\u0000~\u0000Esq\u0000~\u0000\u0018ppsq\u0000~\u0000\u001aq"
+"\u0000~\u0000\u001fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000$sq\u0000~\u0000\u0018ppsq\u0000~\u00006q\u0000~\u0000\u001fpq\u0000~\u00008q\u0000~\u0000Aq\u0000~\u0000Esq\u0000~\u0000?"
+"t\u0000\u0007EndDateq\u0000~\u0000Iq\u0000~\u0000Esq\u0000~\u0000\u0018ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000!ppsr\u0000"
+" com.sun.msv.datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv."
+"datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lc"
+"om/sun/msv/datatype/xsd/XSDatatypeImpl;xq\u0000~\u0000&q\u0000~\u0000,t\u0000\u0003intq\u0000~\u0000"
+"=sr\u0000*com.sun.msv.datatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000#com.sun.msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValu"
+"et\u0000\u0012Ljava/lang/Object;xr\u00009com.sun.msv.datatype.xsd.DataTypeW"
+"ithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.x"
+"sd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCh"
+"eckFlagL\u0000\bbaseTypeq\u0000~\u0000WL\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/dataty"
+"pe/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000)xq\u0000~\u0000(ppq\u0000~\u0000=\u0000\u0001sr\u0000*com."
+"sun.msv.datatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000[ppq\u0000~"
+"\u0000=\u0000\u0000sr\u0000!com.sun.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Vq\u0000"
+"~\u0000,t\u0000\u0004longq\u0000~\u0000=sq\u0000~\u0000Zppq\u0000~\u0000=\u0000\u0001sq\u0000~\u0000appq\u0000~\u0000=\u0000\u0000sr\u0000$com.sun.msv"
+".datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Vq\u0000~\u0000,t\u0000\u0007integerq\u0000~"
+"\u0000=sr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalCon"
+"straintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000^ppq\u0000~\u0000=\u0001\u0000sr\u0000#com.sun.msv.dataty"
+"pe.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000&q\u0000~\u0000,t\u0000\u0007decimalq\u0000~\u0000=q\u0000~\u0000ot"
+"\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000it\u0000\fminInclusivesr\u0000\u000ejava.lang.Long;\u008b"
+"\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000"
+"~\u0000it\u0000\fmaxInclusivesq\u0000~\u0000s\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000dq\u0000~\u0000rsr\u0000\u0011java.lang.Inte"
+"ger\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u0000t\u0080\u0000\u0000\u0000q\u0000~\u0000dq\u0000~\u0000vsq\u0000~\u0000x\u007f\u00ff\u00ff\u00ffq\u0000~\u00002sq\u0000"
+"~\u00003q\u0000~\u0000Yq\u0000~\u0000,sq\u0000~\u0000\u0018ppsq\u0000~\u00006q\u0000~\u0000\u001fpq\u0000~\u00008q\u0000~\u0000Aq\u0000~\u0000Esq\u0000~\u0000?t\u0000\u0012Bud"
+"getCategoryCodeq\u0000~\u0000Iq\u0000~\u0000Esq\u0000~\u0000\u0018ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000$s"
+"q\u0000~\u0000\u0018ppsq\u0000~\u00006q\u0000~\u0000\u001fpq\u0000~\u00008q\u0000~\u0000Aq\u0000~\u0000Esq\u0000~\u0000?t\u0000\u0019BudgetCategoryDes"
+"criptionq\u0000~\u0000Iq\u0000~\u0000Esq\u0000~\u0000\u0018ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Tsq\u0000~\u0000\u0018pp"
+"sq\u0000~\u00006q\u0000~\u0000\u001fpq\u0000~\u00008q\u0000~\u0000Aq\u0000~\u0000Esq\u0000~\u0000?t\u0000\u0010InvestigatorFlagq\u0000~\u0000Iq\u0000~"
+"\u0000Esq\u0000~\u0000\u0018ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000$sq\u0000~\u0000\u0018ppsq\u0000~\u00006q\u0000~\u0000\u001fpq\u0000~\u0000"
+"8q\u0000~\u0000Aq\u0000~\u0000Esq\u0000~\u0000?t\u0000\nPersonNameq\u0000~\u0000Iq\u0000~\u0000Esq\u0000~\u0000\u0018ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001fp"
+"\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000!ppq\u0000~\u0000oq\u0000~\u00002sq\u0000~\u00003q\u0000~\u0000pq\u0000~\u0000,sq\u0000~\u0000\u0018ppsq\u0000~\u00006q\u0000~"
+"\u0000\u001fpq\u0000~\u00008q\u0000~\u0000Aq\u0000~\u0000Esq\u0000~\u0000?t\u0000\u000fSalaryRequestedq\u0000~\u0000Iq\u0000~\u0000Esq\u0000~\u0000\u0018pp"
+"sq\u0000~\u0000\u001aq\u0000~\u0000\u001fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000!ppsr\u0000#com.sun.msv.datatype.xsd.Do"
+"ubleType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.FloatingNumb"
+"erType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u0000&q\u0000~\u0000,t\u0000\u0006doubleq\u0000~\u0000=q\u0000~\u00002sq\u0000~\u00003q\u0000~\u0000\u00a5q\u0000"
+"~\u0000,sq\u0000~\u0000\u0018ppsq\u0000~\u00006q\u0000~\u0000\u001fpq\u0000~\u00008q\u0000~\u0000Aq\u0000~\u0000Esq\u0000~\u0000?t\u0000\u000ePercentCharge"
+"dq\u0000~\u0000Iq\u0000~\u0000Esq\u0000~\u0000\u0018ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00a1sq\u0000~\u0000\u0018ppsq\u0000~\u00006q"
+"\u0000~\u0000\u001fpq\u0000~\u00008q\u0000~\u0000Aq\u0000~\u0000Esq\u0000~\u0000?t\u0000\rPercentEffortq\u0000~\u0000Iq\u0000~\u0000Esq\u0000~\u0000\u0018pp"
+"sq\u0000~\u0000\u001aq\u0000~\u0000\u001fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000$sq\u0000~\u0000\u0018ppsq\u0000~\u00006q\u0000~\u0000\u001fpq\u0000~\u00008q\u0000~\u0000Aq\u0000~\u0000"
+"Esq\u0000~\u0000?t\u0000\u0013EmployeeBenefitRateq\u0000~\u0000Iq\u0000~\u0000Esq\u0000~\u0000\u0018ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001fp\u0000"
+"sq\u0000~\u0000\u0000ppq\u0000~\u0000$sq\u0000~\u0000\u0018ppsq\u0000~\u00006q\u0000~\u0000\u001fpq\u0000~\u00008q\u0000~\u0000Aq\u0000~\u0000Esq\u0000~\u0000?t\u0000\fVac"
+"ationRateq\u0000~\u0000Iq\u0000~\u0000Esq\u0000~\u0000\u0018ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0098sq\u0000~\u0000\u0018p"
+"psq\u0000~\u00006q\u0000~\u0000\u001fpq\u0000~\u00008q\u0000~\u0000Aq\u0000~\u0000Esq\u0000~\u0000?t\u0000\u0006Fringeq\u0000~\u0000Iq\u0000~\u0000Esq\u0000~\u0000\u0018p"
+"psq\u0000~\u0000\u001aq\u0000~\u0000\u001fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000!ppsr\u0000$com.sun.msv.datatype.xsd.B"
+"ooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000&q\u0000~\u0000,t\u0000\u0007booleanq\u0000~\u0000=q\u0000~\u00002sq\u0000~\u00003q\u0000"
+"~\u0000\u00cdq\u0000~\u0000,sq\u0000~\u0000\u0018ppsq\u0000~\u00006q\u0000~\u0000\u001fpq\u0000~\u00008q\u0000~\u0000Aq\u0000~\u0000Esq\u0000~\u0000?t\u0000\u000bOnOffCam"
+"pusq\u0000~\u0000Iq\u0000~\u0000Esq\u0000~\u0000\u0018ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0098sq\u0000~\u0000\u0018ppsq\u0000~\u0000"
+"6q\u0000~\u0000\u001fpq\u0000~\u00008q\u0000~\u0000Aq\u0000~\u0000Esq\u0000~\u0000?t\u0000\u000eCalculatedCostq\u0000~\u0000Iq\u0000~\u0000Esq\u0000~\u0000"
+"\u0018ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Tsq\u0000~\u0000\u0018ppsq\u0000~\u00006q\u0000~\u0000\u001fpq\u0000~\u00008q\u0000~\u0000Aq"
+"\u0000~\u0000Esq\u0000~\u0000?t\u0000\u0006SortIdq\u0000~\u0000Iq\u0000~\u0000Esq\u0000~\u0000\u0018ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001fp\u0000sq\u0000~\u0000\u0000ppq\u0000"
+"~\u0000$sq\u0000~\u0000\u0018ppsq\u0000~\u00006q\u0000~\u0000\u001fpq\u0000~\u00008q\u0000~\u0000Aq\u0000~\u0000Esq\u0000~\u0000?t\u0000\u0016CostElementDe"
+"scriptionq\u0000~\u0000Iq\u0000~\u0000Esq\u0000~\u0000\u0018ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u00a1sq\u0000~\u0000\u0018p"
+"psq\u0000~\u00006q\u0000~\u0000\u001fpq\u0000~\u00008q\u0000~\u0000Aq\u0000~\u0000Esq\u0000~\u0000?t\u0000\u000bAppliedRateq\u0000~\u0000Iq\u0000~\u0000Esq"
+"\u0000~\u0000\u0018ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000$sq\u0000~\u0000\u0018ppsq\u0000~\u00006q\u0000~\u0000\u001fpq\u0000~\u00008q\u0000~"
+"\u0000Aq\u0000~\u0000Esq\u0000~\u0000?t\u0000\fRateTypeDescq\u0000~\u0000Iq\u0000~\u0000Esq\u0000~\u0000\u0018ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001fp\u0000s"
+"q\u0000~\u0000\u0000ppq\u0000~\u0000$sq\u0000~\u0000\u0018ppsq\u0000~\u00006q\u0000~\u0000\u001fpq\u0000~\u00008q\u0000~\u0000Aq\u0000~\u0000Esq\u0000~\u0000?t\u0000\rRate"
+"ClassDescq\u0000~\u0000Iq\u0000~\u0000Esq\u0000~\u0000\u0018ppsq\u0000~\u0000\u001aq\u0000~\u0000\u001fp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0098sq\u0000~\u0000\u0018p"
+"psq\u0000~\u00006q\u0000~\u0000\u001fpq\u0000~\u00008q\u0000~\u0000Aq\u0000~\u0000Esq\u0000~\u0000?t\u0000\u0011CostSharingAmountq\u0000~\u0000Iq"
+"\u0000~\u0000Esr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpT"
+"ablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-"
+"com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005c"
+"ountB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Express"
+"ionPool;xp\u0000\u0000\u0000O\u0001pq\u0000~\u0000\u0097q\u0000~\u0000\u00ffq\u0000~\u0000\tq\u0000~\u0000\u0013q\u0000~\u0000\u000bq\u0000~\u0000\u00adq\u0000~\u0000\u00a0q\u0000~\u0000\u00eaq\u0000~\u0000"
+"\u0010q\u0000~\u0000\u0011q\u0000~\u0000\u00c9q\u0000~\u0000\u0087q\u0000~\u0000Qq\u0000~\u0000\u00daq\u0000~\u0000\u0012q\u0000~\u0000\u00abq\u0000~\u0000\u009eq\u0000~\u0000\u00e8q\u0000~\u0000\fq\u0000~\u0000\u0015q\u0000~\u0000"
+"\rq\u0000~\u0000\u0007q\u0000~\u0000\bq\u0000~\u0000\u00dcq\u0000~\u0000\u0089q\u0000~\u0000Sq\u0000~\u0000\u0014q\u0000~\u0000\u0016q\u0000~\u0000\u0017q\u0000~\u0000\u0005q\u0000~\u0000\u00b9q\u0000~\u0000\u00b2q\u0000~\u0000"
+"\u008eq\u0000~\u0000\u0080q\u0000~\u0000Jq\u0000~\u0000\u0019q\u0000~\u0000\u00e1q\u0000~\u0000\u00efq\u0000~\u0000\u00f6q\u0000~\u0000\nq\u0000~\u0000\u0006q\u0000~\u0000\u000eq\u0000~\u0000\u00d6q\u0000~\u0000\u00cfq\u0000~\u0000"
+"\u00c3q\u0000~\u0000\u00bcq\u0000~\u0000\u00b5q\u0000~\u0000\u00aeq\u0000~\u0000\u00a7q\u0000~\u0000\u009aq\u0000~\u0000\u0091q\u0000~\u0000\u008aq\u0000~\u0000\u0083q\u0000~\u0000|q\u0000~\u0000Mq\u0000~\u00005q\u0000~\u0000"
+"\u000fq\u0000~\u0000\u00ddq\u0000~\u0000\u00e4q\u0000~\u0000\u00ebq\u0000~\u0000\u00f2q\u0000~\u0000\u00f9q\u0000~\u0001\u0000q\u0000~\u0000\u00c7q\u0000~\u0000\u00d3q\u0000~\u0000\u00c0q\u0000~\u0000\u0095q\u0000~\u0000\u00fdq\u0000~\u0000"
+"\u00bbq\u0000~\u0000\u00b4q\u0000~\u0000\u0090q\u0000~\u0000\u0082q\u0000~\u0000Lq\u0000~\u0000 q\u0000~\u0000\u00e3q\u0000~\u0000\u00f1q\u0000~\u0000\u00f8q\u0000~\u0000\u00d5q\u0000~\u0000\u00c2x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends edu.mit.coeus.utils.xml.bean.budget.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(edu.mit.coeus.utils.xml.bean.budget.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------------------------------------------------");
        }

        protected Unmarshaller(edu.mit.coeus.utils.xml.bean.budget.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return edu.mit.coeus.utils.xml.bean.budget.impl.ReportTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        if (("BudgetCategoryCode" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  3 :
                        if (("EndDate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  42 :
                        if (("SortId" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 43;
                            return ;
                        }
                        state = 45;
                        continue outer;
                    case  48 :
                        if (("AppliedRate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 49;
                            return ;
                        }
                        state = 51;
                        continue outer;
                    case  30 :
                        if (("VacationRate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        state = 33;
                        continue outer;
                    case  0 :
                        if (("StartDate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  21 :
                        if (("PercentCharged" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  60 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  57 :
                        if (("CostSharingAmount" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 58;
                            return ;
                        }
                        state = 60;
                        continue outer;
                    case  24 :
                        if (("PercentEffort" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  18 :
                        if (("SalaryRequested" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  9 :
                        if (("BudgetCategoryDescription" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  33 :
                        if (("Fringe" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 34;
                            return ;
                        }
                        state = 36;
                        continue outer;
                    case  27 :
                        if (("EmployeeBenefitRate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  15 :
                        if (("PersonName" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  39 :
                        if (("CalculatedCost" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 40;
                            return ;
                        }
                        state = 42;
                        continue outer;
                    case  54 :
                        if (("RateClassDesc" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 55;
                            return ;
                        }
                        state = 57;
                        continue outer;
                    case  45 :
                        if (("CostElementDescription" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 46;
                            return ;
                        }
                        state = 48;
                        continue outer;
                    case  12 :
                        if (("InvestigatorFlag" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  36 :
                        if (("OnOffCampus" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 37;
                            return ;
                        }
                        state = 39;
                        continue outer;
                    case  51 :
                        if (("RateTypeDesc" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 52;
                            return ;
                        }
                        state = 54;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  56 :
                        if (("RateClassDesc" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 57;
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  35 :
                        if (("Fringe" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 36;
                            return ;
                        }
                        break;
                    case  29 :
                        if (("EmployeeBenefitRate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  38 :
                        if (("OnOffCampus" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 39;
                            return ;
                        }
                        break;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  14 :
                        if (("InvestigatorFlag" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  44 :
                        if (("SortId" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 45;
                            return ;
                        }
                        break;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  17 :
                        if (("PersonName" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("BudgetCategoryCode" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  50 :
                        if (("AppliedRate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 51;
                            return ;
                        }
                        break;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  32 :
                        if (("VacationRate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                    case  60 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  57 :
                        state = 60;
                        continue outer;
                    case  47 :
                        if (("CostElementDescription" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 48;
                            return ;
                        }
                        break;
                    case  59 :
                        if (("CostSharingAmount" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 60;
                            return ;
                        }
                        break;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  11 :
                        if (("BudgetCategoryDescription" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  26 :
                        if (("PercentEffort" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  2 :
                        if (("StartDate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  41 :
                        if (("CalculatedCost" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 42;
                            return ;
                        }
                        break;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  20 :
                        if (("SalaryRequested" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  54 :
                        state = 57;
                        continue outer;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  5 :
                        if (("EndDate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  53 :
                        if (("RateTypeDesc" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 54;
                            return ;
                        }
                        break;
                    case  51 :
                        state = 54;
                        continue outer;
                    case  23 :
                        if (("PercentCharged" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        state = 9;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  60 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  57 :
                        state = 60;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  54 :
                        state = 57;
                        continue outer;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  51 :
                        state = 54;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        state = 9;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  42 :
                        state = 45;
                        continue outer;
                    case  48 :
                        state = 51;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  60 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  57 :
                        state = 60;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  33 :
                        state = 36;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  54 :
                        state = 57;
                        continue outer;
                    case  45 :
                        state = 48;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  36 :
                        state = 39;
                        continue outer;
                    case  51 :
                        state = 54;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  4 :
                            state = 5;
                            eatText1(value);
                            return ;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  10 :
                            state = 11;
                            eatText2(value);
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  40 :
                            state = 41;
                            eatText3(value);
                            return ;
                        case  42 :
                            state = 45;
                            continue outer;
                        case  48 :
                            state = 51;
                            continue outer;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  52 :
                            state = 53;
                            eatText4(value);
                            return ;
                        case  13 :
                            state = 14;
                            eatText5(value);
                            return ;
                        case  1 :
                            state = 2;
                            eatText6(value);
                            return ;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  16 :
                            state = 17;
                            eatText7(value);
                            return ;
                        case  43 :
                            state = 44;
                            eatText8(value);
                            return ;
                        case  19 :
                            state = 20;
                            eatText9(value);
                            return ;
                        case  60 :
                            revertToParentFromText(value);
                            return ;
                        case  57 :
                            state = 60;
                            continue outer;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  31 :
                            state = 32;
                            eatText10(value);
                            return ;
                        case  33 :
                            state = 36;
                            continue outer;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  25 :
                            state = 26;
                            eatText11(value);
                            return ;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  39 :
                            state = 42;
                            continue outer;
                        case  54 :
                            state = 57;
                            continue outer;
                        case  34 :
                            state = 35;
                            eatText12(value);
                            return ;
                        case  45 :
                            state = 48;
                            continue outer;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  37 :
                            state = 38;
                            eatText13(value);
                            return ;
                        case  49 :
                            state = 50;
                            eatText14(value);
                            return ;
                        case  36 :
                            state = 39;
                            continue outer;
                        case  46 :
                            state = 47;
                            eatText15(value);
                            return ;
                        case  58 :
                            state = 59;
                            eatText16(value);
                            return ;
                        case  51 :
                            state = 54;
                            continue outer;
                        case  22 :
                            state = 23;
                            eatText17(value);
                            return ;
                        case  7 :
                            state = 8;
                            eatText18(value);
                            return ;
                        case  55 :
                            state = 56;
                            eatText19(value);
                            return ;
                        case  28 :
                            state = 29;
                            eatText20(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _EndDate = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _BudgetCategoryDescription = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CalculatedCost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RateTypeDesc = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _InvestigatorFlag = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_InvestigatorFlag = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _StartDate = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PersonName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SortId = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_SortId = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SalaryRequested = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _VacationRate = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PercentEffort = javax.xml.bind.DatatypeConverter.parseDouble(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_PercentEffort = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Fringe = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText13(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _OnOffCampus = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_OnOffCampus = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText14(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AppliedRate = javax.xml.bind.DatatypeConverter.parseDouble(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_AppliedRate = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText15(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CostElementDescription = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText16(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CostSharingAmount = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText17(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PercentCharged = javax.xml.bind.DatatypeConverter.parseDouble(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_PercentCharged = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText18(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _BudgetCategoryCode = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_BudgetCategoryCode = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText19(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RateClassDesc = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText20(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _EmployeeBenefitRate = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
