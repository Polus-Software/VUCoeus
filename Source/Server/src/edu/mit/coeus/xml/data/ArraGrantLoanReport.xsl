<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2008 rel. 2 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:fips_5-2="http://niem.gov/niem/fips_5-2/2.0" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:i="http://niem.gov/niem/appinfo/2.0" xmlns:iso_3166="http://niem.gov/niem/iso_3166/2.0" xmlns:iso_4217="http://niem.gov/niem/iso_4217/2.0" xmlns:iso_639-3="http://niem.gov/niem/iso_639-3/2.0" xmlns:nc="http://niem.gov/niem/niem-core/2.0" xmlns:niem-xsd="http://niem.gov/niem/proxy/xsd/2.0" xmlns:recoveryrr="urn:us:gov:recoveryrr" xmlns:recoveryrr-ext="urn:us:gov:recoveryrr-ext" xmlns:recoveryrr-facet="urn:us:gov:recoveryrr-facet" xmlns:s="http://niem.gov/niem/structures/2.0" xmlns:twpdes="http://niem.gov/niem/twpdes/2.0" xmlns:xdt="http://www.w3.org/2005/xpath-datatypes" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fo="http://www.w3.org/1999/XSL/Format">
	<xsl:output version="1.0" method="xml" encoding="UTF-8" indent="no"/>
	<xsl:param name="SV_OutputFormat" select="'PDF'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:variable name="fo:layout-master-set">
		<fo:layout-master-set>
			<fo:simple-page-master master-name="default-page" page-height="11in" page-width="8.5in" margin-left="0.2in" margin-right="0.1in">
				<fo:region-body margin-top="1.2in" margin-bottom="0.79in"/>
				<fo:region-before extent="1.2in"/>
				<fo:region-after extent="0.79in"/>
			</fo:simple-page-master>
		</fo:layout-master-set>
	</xsl:variable>
	<xsl:template match="/">
		<fo:root>
			<xsl:copy-of select="$fo:layout-master-set"/>
			<fo:page-sequence master-reference="default-page" initial-page-number="1" format="1">
				<xsl:call-template name="headerall"/>
				<xsl:call-template name="footerall"/>
				<fo:flow flow-name="xsl-region-body">
					<fo:block>
						<fo:block/>
						<xsl:for-each select="$XML">
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:block text-align="center" margin="0pt">
								<fo:block>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:block font-size="large" font-weight="bold" margin="0pt">
										<fo:block>
											<fo:inline>
												<!-- JM 11-8-2011 changed for StarMetrics -->
												<xsl:text>Grant Loan Report</xsl:text>
												<!-- JM END -->
											</fo:inline>
										</fo:block>
									</fo:block>
								</fo:block>
							</fo:block>
							<fo:inline-container>
								<fo:block>
									<xsl:text>&#x2029;</xsl:text>
								</fo:block>
							</fo:inline-container>
							<fo:block text-align="center" margin="0pt">
								<fo:block>
									<fo:block text-align="center">
										<fo:leader leader-pattern="rule" rule-thickness="2" leader-length="100%"/>
									</fo:block>
								</fo:block>
							</fo:block>
							<xsl:for-each select="recoveryrr:GrantLoanReport">
								<fo:block/>
								<xsl:for-each select="recoveryrr-ext:GrantLoanReportHeader">
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table font="12pt" font-weight="normal" table-layout="fixed" width="100%" border-spacing="2pt">
										<fo:table-column column-width="25%"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-body font="12pt" font-weight="normal" start-indent="0pt">
											<fo:table-row>
												<fo:table-cell font-family="Arial" font-size="10pt" font-weight="bold" padding="2pt" height="10px" display-align="center">
													<fo:block>
														<fo:inline font="12" font-family="Arial" font-weight="bold">
															<xsl:text>Award Number:</xsl:text>
														</fo:inline>
														<fo:inline font="12" font-family="Arial">
															<xsl:text>&#160;</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell font-weight="normal" number-columns-spanned="3" padding="2pt" display-align="center">
													<fo:block>
														<xsl:for-each select="recoveryrr-ext:AwardIdNumber">
															<xsl:variable name="value-of-template">
																<xsl:apply-templates/>
															</xsl:variable>
															<xsl:choose>
																<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																	<fo:block font-family="Arial" font-size="12pt" font-weight="normal">
																		<xsl:copy-of select="$value-of-template"/>
																	</fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<fo:inline font-family="Arial" font-size="12pt" font-weight="normal">
																		<xsl:copy-of select="$value-of-template"/>
																	</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row font="12pt" font-weight="normal">
												<fo:table-cell font-family="Arial" font-size="10pt" font-weight="bold" padding="2pt" height="10px" display-align="center">
													<fo:block>
														<fo:inline font="12" font-family="Arial" font-weight="bold">
															<xsl:text>Award Type:</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell font-weight="normal" number-columns-spanned="3" padding="2pt" display-align="center">
													<fo:block>
														<xsl:for-each select="recoveryrr-ext:GrantLoanAwardCategory">
															<xsl:variable name="value-of-template">
																<xsl:apply-templates/>
															</xsl:variable>
															<xsl:choose>
																<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																	<fo:block font-family="Arial" font-size="12pt">
																		<xsl:copy-of select="$value-of-template"/>
																	</fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<fo:inline font-family="Arial" font-size="12pt">
																		<xsl:copy-of select="$value-of-template"/>
																	</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell font-family="Arial" font-size="10pt" font-weight="bold" padding="2pt" height="10px" display-align="center">
													<fo:block>
														<fo:inline font="12" font-family="Arial" font-weight="bold">
															<xsl:text>Prime Recipient DUNS:</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell font-family="Arial" font-size="12pt" font-weight="normal" padding-right="20pt" number-columns-spanned="3" padding="2pt" display-align="center">
													<fo:block>
														<xsl:for-each select="recoveryrr-ext:PrimeRecipientDUNS">
															<xsl:variable name="value-of-template">
																<xsl:apply-templates/>
															</xsl:variable>
															<xsl:choose>
																<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																	<fo:block font-family="Arial" font-size="12pt">
																		<xsl:copy-of select="$value-of-template"/>
																	</fo:block>
																</xsl:when>
																<xsl:otherwise>
																	<fo:inline font-family="Arial" font-size="12pt">
																		<xsl:copy-of select="$value-of-template"/>
																	</fo:inline>
																</xsl:otherwise>
															</xsl:choose>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-body>
									</fo:table>
								</xsl:for-each>
								<fo:block/>
								<fo:block text-align="center">
									<fo:leader leader-pattern="rule" rule-thickness="2" leader-length="100%"/>
								</fo:block>
								<fo:block/>
								<xsl:for-each select="recoveryrr-ext:GrantLoanPrimeRecipientReport">
									<fo:block/>
									<fo:inline font-family="Arial" font-size="11pt" font-weight="bold">
										<xsl:text>Grant Loan Award Details</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:inline>
										<xsl:text>&#160;&#160;&#160; </xsl:text>
									</fo:inline>
									<xsl:for-each select="recoveryrr-ext:GrantLoanAwardDetail">
										<fo:block/>
										<fo:block/>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table table-layout="fixed" width="100%" border-spacing="2pt">
											<fo:table-column column-width="30%"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" height="25" display-align="center">
														<fo:block>
															<fo:inline font="12" font-family="Arial" font-weight="bold">
																<xsl:text>Award Amount:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" height="25" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:AwardAmount">
																<fo:inline font="12" font-family="Arial">
																	<xsl:text>$</xsl:text>
																</fo:inline>
																<fo:inline>
																	<xsl:value-of select="format-number(number(string(.)), '#,###,###,##0.00')"/>
																</fo:inline>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<!-- JM 11-8-2011 commented out for StarMetrics
												<fo:table-row>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" height="25" display-align="center">
														<fo:block>
															<fo:inline font="12" font-family="Arial" font-weight="bold">
																<xsl:text>Total Federal ARRA Funds Invoiced:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" height="25" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:TotalFederalARRAReceived">
																<fo:inline font="12" font-family="Arial">
																	<xsl:text>$</xsl:text>
																</fo:inline>
																<fo:inline>
																	<xsl:value-of select="format-number(number(string(.)), '#,###,###,##0.00')"/>
																</fo:inline>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" height="25" display-align="center">
														<fo:block>
															<fo:inline font="12" font-family="Arial" font-weight="bold">
																<xsl:text>Total Federal ARRA Expenditure:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" height="25" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:TotalFederalARRAExpenditure">
																<fo:inline font="12" font-family="Arial">
																	<xsl:text>$</xsl:text>
																</fo:inline>
																<fo:inline>
																	<xsl:value-of select="format-number(number(string(.)), '#,###,###,##0.00')"/>
																</fo:inline>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" height="25" display-align="center">
														<fo:block>
															<fo:inline font="12" font-family="Arial" font-weight="bold">
																<xsl:text>Total Federal ARRA Infra Expenditure:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" height="25" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:TotalFederalARRAInfraExpenditure">
																<fo:inline font="12" font-family="Arial">
																	<xsl:text>$</xsl:text>
																</fo:inline>
																<fo:inline>
																	<xsl:value-of select="format-number(number(string(.)), '#,###,###,##0.00')"/>
																</fo:inline>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												-->
												<fo:table-row>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" height="26" display-align="center">
														<fo:block>
															<fo:inline font="12" font-family="Arial" font-weight="bold">
																<xsl:text>Project Title:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" height="26" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:ProjectName">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" height="25" display-align="center">
														<fo:block>
															<fo:inline font="12" font-family="Arial" font-weight="bold">
																<xsl:text>Awarding Agency Code:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" height="25" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:AwardingAgencyCode">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" height="25" display-align="center">
														<fo:block>
															<fo:inline font="12" font-family="Arial" font-weight="bold">
																<xsl:text>CFDA Program Number:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" height="25" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:CFDAProgramNumber">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
										<fo:block/>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table table-layout="fixed" width="100%" border-spacing="2pt">
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" height="25" display-align="center">
														<fo:block>
															<fo:inline font="12" font-family="Arial" font-weight="bold">
																<xsl:text>Final Report Indicator:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" height="25" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:FinalReportIndicator">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" height="25" display-align="center">
														<fo:block>
															<fo:inline font="12" font-family="Arial" font-weight="bold">
																<xsl:text>Award Date:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" height="25" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:AwardDate">
																<fo:inline>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00')"/>
																	<xsl:text>/</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00')"/>
																	<xsl:text>/</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000')"/>
																</fo:inline>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" height="25" display-align="center">
														<fo:block>
															<fo:inline font="12" font-family="Arial" font-weight="bold">
																<xsl:text>Complete Treasury Account Symbol: </xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" height="25" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:CompleteTreasuryAccountSymbol">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" height="25" display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>Funding Agency Code :</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" height="25" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:FundingAgencyCode">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
										<fo:block/>
										<fo:block>
											<fo:leader leader-pattern="space"/>
										</fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:block margin="0pt">
											<fo:block/>
										</fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="-1pt">
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" border="solid 1pt gray" padding="0" height="26" display-align="center">
														<fo:block/>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" border="solid 1pt gray" padding="0" height="26" display-align="center">
														<fo:block>
															<fo:inline font="12" font-family="Arial" font-weight="bold">
																<xsl:text>Sub-awards to Individuals:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" border="solid 1pt gray" padding="0" height="26" display-align="center">
														<fo:block>
															<fo:inline font="12" font-family="Arial" font-weight="bold">
																<xsl:text>Vendors Less Than 25K:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" border="solid 1pt gray" padding="0" height="26" display-align="center">
														<fo:block>
															<fo:inline font="12" font-family="Arial" font-weight="bold">
																<xsl:text>Sub-awards Less Than 25K:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" border="solid 1pt gray" padding="0" height="26" display-align="center">
														<fo:block>
															<fo:inline font="12" font-family="Arial" font-weight="bold">
																<xsl:text>Number:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" border="solid 1pt gray" padding="0" height="26" text-align="right" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:TotalNumberSubawardsIndividuals">
																<fo:inline>
																	<xsl:value-of select="format-number(number(string(.)), '#,###,###,##0.00')"/>
																</fo:inline>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" border="solid 1pt gray" padding="0" height="26" text-align="right" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:TotalNumberVendorPayments">
																<fo:inline>
																	<xsl:value-of select="format-number(number(string(.)), '#,###,###,##0.00')"/>
																</fo:inline>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" border="solid 1pt gray" padding="0" height="26" text-align="right" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:TotalNumberSmallSubawards">
																<fo:inline>
																	<xsl:value-of select="format-number(number(string(.)), '#,###,###,##0.00')"/>
																</fo:inline>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" border="solid 1pt gray" padding="0" height="26" display-align="center">
														<fo:block>
															<fo:inline font="12" font-family="Arial" font-weight="bold">
																<xsl:text>Amount:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" border="solid 1pt gray" padding="0" height="26" text-align="right" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:TotalAmountSubawardsIndividuals">
																<fo:inline font="12" font-family="Arial">
																	<xsl:text>$</xsl:text>
																</fo:inline>
																<fo:inline>
																	<xsl:value-of select="format-number(number(string(.)), '#,###,###,##0.00')"/>
																</fo:inline>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" border="solid 1pt gray" padding="0" height="26" text-align="right" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:TotalAmountVendorPayments">
																<fo:inline font="12" font-family="Arial">
																	<xsl:text>$</xsl:text>
																</fo:inline>
																<fo:inline>
																	<xsl:value-of select="format-number(number(string(.)), '#,###,###,##0.00')"/>
																</fo:inline>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" border="solid 1pt gray" padding="0" height="26" text-align="right" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:TotalNumberSmallSubawards">
																<fo:inline font="12" font-family="Arial">
																	<xsl:text>$</xsl:text>
																</fo:inline>
																<fo:inline>
																	<xsl:value-of select="format-number(number(string(.)), '#,###,###,##0.00')"/>
																</fo:inline>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
										<fo:block/>
										<fo:block>
											<fo:leader leader-pattern="space"/>
										</fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:block margin="0pt">
											<fo:block/>
										</fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table table-layout="fixed" width="100%" border-spacing="2pt">
											<fo:table-column column-width="30%"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" height="25" display-align="center">
														<fo:block>
															<fo:inline font="12" font-family="Arial" font-weight="bold">
																<xsl:text>Project Status:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" height="25" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:ProjectStatus">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" height="26" display-align="center">
														<fo:block>
															<fo:inline font="12" font-family="Arial" font-weight="bold">
																<xsl:text>Activity Code:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" height="26" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:GrantLoanActivityCode">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" height="25" display-align="center">
														<fo:block>
															<fo:inline font="12" font-family="Arial" font-weight="bold">
																<xsl:text>Award Description:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" height="25" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:AwardDescription">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" height="25" display-align="center">
														<fo:block>
															<fo:inline font="12" font-family="Arial" font-weight="bold">
																<xsl:text>Quarterly Activities/ Project Description:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" height="25" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:ProjectDescription">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
										<fo:block/>
										<fo:block text-align="center">
											<fo:leader leader-pattern="rule" rule-thickness="2" leader-length="100%"/>
										</fo:block>
										<fo:block/>
										<fo:inline font-family="Arial" font-size="11pt" font-weight="bold">
											<xsl:text>Jobs Created</xsl:text>
										</fo:inline>
										<fo:block/>
										<fo:block>
											<fo:leader leader-pattern="space"/>
										</fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:block margin="0pt">
											<fo:block/>
										</fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table table-layout="fixed" width="100%" border-spacing="2pt">
											<fo:table-column column-width="30%"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" height="25" display-align="center">
														<fo:block>
															<fo:inline font="12" font-family="Arial" font-weight="bold">
																<xsl:text>Total No. of Jobs:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" height="25" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:JobCreationNumber">
																<fo:inline>
																	<xsl:value-of select="format-number(number(string(.)), '#,###,###,##0.00')"/>
																</fo:inline>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" height="27" display-align="center">
														<fo:block>
															<fo:inline font="12" font-family="Arial" font-weight="bold">
																<xsl:text>Description of Jobs Created:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" height="27" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:JobCreationNarrative">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
										<fo:block/>
										<fo:block/>
										<fo:block/>
										<fo:block text-align="center">
											<fo:leader leader-pattern="rule" rule-thickness="2" leader-length="100%"/>
										</fo:block>
										<fo:block/>
										<fo:inline font-family="Arial" font-size="11pt" font-weight="bold">
											<xsl:text>Infrastructure</xsl:text>
										</fo:inline>
										<fo:block/>
										<fo:block>
											<fo:leader leader-pattern="space"/>
										</fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:block margin="0pt">
											<fo:block/>
										</fo:block>
										<fo:block/>
										<xsl:for-each select="recoveryrr-ext:InfrastructureContact">
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:table table-layout="fixed" width="100%" border-spacing="2pt">
												<fo:table-column column-width="30%"/>
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" height="1" display-align="center">
															<fo:block>
																<fo:inline font-weight="bold">
																	<xsl:text>Contact Name:</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" height="1" display-align="center">
															<fo:block>
																<xsl:for-each select="recoveryrr-ext:ContactName">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell padding="2pt" display-align="center">
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
											<fo:block/>
											<xsl:for-each select="recoveryrr-ext:InfrastructureAddress">
												<fo:block/>
												<fo:block/>
												<fo:inline-container>
													<fo:block>
														<xsl:text>&#x2029;</xsl:text>
													</fo:block>
												</fo:inline-container>
												<fo:table table-layout="fixed" width="100%" border-spacing="2pt">
													<fo:table-column column-width="30%"/>
													<fo:table-column column-width="proportional-column-width(1)"/>
													<fo:table-column column-width="proportional-column-width(1)"/>
													<fo:table-column column-width="proportional-column-width(1)"/>
													<fo:table-column column-width="25%"/>
													<fo:table-body start-indent="0pt">
														<fo:table-row>
															<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" display-align="center">
																<fo:block>
																	<fo:inline font-weight="bold">
																		<xsl:text>Address Delivery Point:</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="nc:AddressDeliveryPointText">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell padding="2pt" display-align="center">
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" display-align="center">
																<fo:block>
																	<fo:inline>
																		<xsl:text>City:</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="nc:LocationCityName">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-family="Arial" font-size="9pt" padding-right="20pt" padding="2pt" display-align="center">
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" display-align="center">
																<fo:block>
																	<fo:inline>
																		<xsl:text>State:</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="recoveryrr-ext:LocationState">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-family="Arial" font-size="9pt" padding-right="20pt" padding="2pt" display-align="center">
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" display-align="center">
																<fo:block>
																	<fo:inline font-weight="bold">
																		<xsl:text>Postal Code:</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="nc:LocationPostalCode">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-family="Arial" font-size="9pt" padding-right="20pt" padding="2pt" display-align="center">
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" display-align="center">
																<fo:block>
																	<fo:inline font-weight="bold">
																		<xsl:text>Postal Extension Code:</xsl:text>
																	</fo:inline>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="nc:LocationPostalExtensionCode">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-family="Arial" font-size="9pt" padding-right="20pt" padding="2pt" display-align="center">
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
														<fo:table-row>
															<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" display-align="center">
																<fo:block/>
															</fo:table-cell>
															<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" display-align="center">
																<fo:block/>
															</fo:table-cell>
															<fo:table-cell font-family="Arial" font-size="9pt" padding-right="20pt" padding="2pt" display-align="center">
																<fo:block/>
															</fo:table-cell>
														</fo:table-row>
													</fo:table-body>
												</fo:table>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
									<fo:block>
										<fo:leader leader-pattern="space"/>
									</fo:block>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:block margin="0pt">
										<fo:block/>
									</fo:block>
									<fo:block text-align="center">
										<fo:leader leader-pattern="rule" rule-thickness="2" leader-length="100%"/>
									</fo:block>
									<fo:block/>
									<fo:inline font-family="Arial" font-size="11pt" font-weight="bold">
										<xsl:text>Prime Recipient</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:block>
										<fo:leader leader-pattern="space"/>
									</fo:block>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:block margin="0pt">
										<fo:block/>
									</fo:block>
									<fo:block/>
									<xsl:for-each select="recoveryrr-ext:PrimeRecipient">
										<fo:block/>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table table-layout="fixed" width="100%" border-spacing="2pt">
											<fo:table-column column-width="30%"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline font-weight="bold">
																<xsl:text>Congressional District: </xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:CongressionalDistrict">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell padding="2pt" display-align="center">
														<fo:block/>
													</fo:table-cell>
												</fo:table-row>
												<fo:table-row>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline font-weight="bold">
																<xsl:text>Account Number:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" number-columns-spanned="3" padding="2pt" height="1" display-align="center">
														<fo:block>
															<fo:inline>
																<xsl:text>&#160;</xsl:text>
															</fo:inline>
															<xsl:for-each select="recoveryrr-ext:AccountNumber">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block font-weight="normal">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline font-weight="normal">
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell padding="2pt" display-align="center">
														<fo:block/>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
										<fo:block text-align="center">
											<fo:leader leader-pattern="rule" rule-thickness="2" leader-length="100%"/>
										</fo:block>
										<fo:inline font-family="Arial" font-size="10pt" font-weight="bold">
											<xsl:text>5 Most Highly Compensated Individuals </xsl:text>
										</fo:inline>
										<fo:block>
											<fo:leader leader-pattern="space"/>
										</fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:block margin="0pt">
											<fo:block/>
										</fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<xsl:if test="recoveryrr-ext:CompensatedOfficer">
											<fo:table table-layout="fixed" width="80%" border="solid 1pt gray" border-spacing="-1pt">
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-header start-indent="0pt">
													<fo:table-row>
														<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" border="solid 1pt gray" padding="0" height="24" text-align="left" display-align="center">
															<fo:block>
																<fo:inline font-weight="bold">
																	<xsl:text> Person Name</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" border="solid 1pt gray" padding="0" height="24" text-align="left" display-align="center">
															<fo:block>
																<fo:inline>
																	<xsl:text>Office Compensation</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-header>
												<fo:table-body start-indent="0pt">
													<xsl:for-each select="recoveryrr-ext:CompensatedOfficer">
														<fo:table-row>
															<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" border="solid 1pt gray" padding="0" height="26" display-align="center">
																<fo:block>
																	<xsl:for-each select="nc:PersonFullName">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" border="solid 1pt gray" padding="0" height="26" display-align="center">
																<fo:block>
																	<xsl:for-each select="recoveryrr-ext:OfficerCompensation">
																		<fo:inline>
																			<xsl:text>$</xsl:text>
																		</fo:inline>
																		<fo:inline>
																			<xsl:value-of select="format-number(number(string(.)), '#,###,###,##0.00')"/>
																		</fo:inline>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
													</xsl:for-each>
												</fo:table-body>
											</fo:table>
										</xsl:if>
										<fo:block/>
									</xsl:for-each>
									<fo:block>
										<fo:leader leader-pattern="space"/>
									</fo:block>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:block margin="0pt">
										<fo:block/>
									</fo:block>
									<xsl:for-each select="recoveryrr-ext:PlaceOfPerformance">
										<fo:block/>
										<fo:block text-align="center">
											<fo:leader leader-pattern="rule" rule-thickness="2" leader-length="100%"/>
										</fo:block>
										<fo:block/>
										<fo:inline font-family="Arial" font-size="11pt" font-weight="bold">
											<xsl:text>Place Of Performance</xsl:text>
										</fo:inline>
										<fo:block>
											<fo:leader leader-pattern="space"/>
										</fo:block>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:block margin="0pt">
											<fo:block/>
										</fo:block>
										<xsl:for-each select="recoveryrr-ext:Address">
											<fo:block/>
											<fo:block/>
											<fo:inline-container>
												<fo:block>
													<xsl:text>&#x2029;</xsl:text>
												</fo:block>
											</fo:inline-container>
											<fo:table table-layout="fixed" width="100%" border-spacing="2pt">
												<fo:table-column column-width="30%"/>
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-column column-width="25%"/>
												<fo:table-body start-indent="0pt">
													<fo:table-row>
														<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" display-align="center">
															<fo:block>
																<fo:inline font-weight="bold">
																	<xsl:text>Address Delivery Point:</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="nc:AddressDeliveryPointText">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell padding="2pt" display-align="center">
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" display-align="center">
															<fo:block>
																<fo:inline>
																	<xsl:text>City:</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="nc:LocationCityName">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-family="Arial" font-size="9pt" padding-right="20pt" padding="2pt" display-align="center">
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" display-align="center">
															<fo:block>
																<fo:inline>
																	<xsl:text>State:</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="recoveryrr-ext:LocationState">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-family="Arial" font-size="9pt" padding-right="20pt" padding="2pt" display-align="center">
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" display-align="center">
															<fo:block>
																<fo:inline font-weight="bold">
																	<xsl:text>Postal Code:</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="nc:LocationPostalCode">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-family="Arial" font-size="9pt" padding-right="20pt" padding="2pt" display-align="center">
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" display-align="center">
															<fo:block>
																<fo:inline font-weight="bold">
																	<xsl:text>Postal Extension Code:</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="nc:LocationPostalExtensionCode">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-family="Arial" font-size="9pt" padding-right="20pt" padding="2pt" display-align="center">
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
													<fo:table-row>
														<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" display-align="center">
															<fo:block>
																<fo:inline font-weight="bold">
																	<xsl:text>Postal Extension Code:</xsl:text>
																</fo:inline>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" display-align="center">
															<fo:block>
																<xsl:for-each select="recoveryrr-ext:LocationCountry">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</fo:block>
														</fo:table-cell>
														<fo:table-cell font-family="Arial" font-size="9pt" padding-right="20pt" padding="2pt" display-align="center">
															<fo:block/>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
										</xsl:for-each>
										<fo:block/>
										<fo:block/>
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table table-layout="fixed" width="100%" border-spacing="2pt">
											<fo:table-column column-width="30%"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="bold" padding="2pt" height="1" display-align="center">
														<fo:block>
															<fo:inline font-weight="bold">
																<xsl:text>Congressional District:</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell font-family="Arial" font-size="9pt" font-weight="normal" number-columns-spanned="3" padding="2pt" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:CongressionalDistrict">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell padding="2pt" display-align="center">
														<fo:block/>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
									</xsl:for-each>
									<fo:block/>
								</xsl:for-each>
								<fo:block/>
								<fo:block text-align="center">
									<fo:leader leader-pattern="rule" rule-thickness="2" leader-length="100%"/>
								</fo:block>
								<fo:inline font-family="Arial" font-size="11pt" font-weight="bold">
									<xsl:text>Vendors</xsl:text>
								</fo:inline>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block margin="0pt">
									<fo:block/>
								</fo:block>
								<fo:inline font-family="Arial" font-size="10pt" font-weight="bold">
									<xsl:text>List Of Vendors</xsl:text>
								</fo:inline>
								<fo:block/>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block margin="0pt">
									<fo:block/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table font-family="Arial" font-size="9pt" font-weight="bold" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="-1pt">
									<fo:table-column column-width="proportional-column-width(1)"/>
									<fo:table-column column-width="proportional-column-width(1)"/>
									<fo:table-column column-width="proportional-column-width(1)"/>
									<fo:table-column column-width="proportional-column-width(1)"/>
									<fo:table-column column-width="proportional-column-width(1)"/>
									<fo:table-body start-indent="0pt">
										<fo:table-row>
											<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
												<fo:block>
													<fo:inline>
														<xsl:text>Vendor Name</xsl:text>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
												<fo:block>
													<fo:inline>
														<xsl:text>Vendor DUNS</xsl:text>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
												<fo:block>
													<fo:inline>
														<xsl:text>Zip Code</xsl:text>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
												<fo:block>
													<fo:inline>
														<xsl:text>Payment Amount </xsl:text>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
												<fo:block>
													<fo:inline>
														<xsl:text>Service Description</xsl:text>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</fo:table-body>
								</fo:table>
								<xsl:for-each select="recoveryrr-ext:Vendor">
									<fo:block/>
									<xsl:if test="count(  recoveryrr-ext:SubAwardNumber )  = 0">
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="-1pt">
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
														<fo:block>
															<xsl:for-each select="nc:OrganizationName">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:VendorDUNS">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
														<fo:block>
															<xsl:for-each select="nc:LocationPostalCode">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
															<xsl:for-each select="nc:LocationPostalExtensionCode">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:PaymentAmount">
																<fo:inline>
																	<xsl:text>$</xsl:text>
																</fo:inline>
																<fo:inline>
																	<xsl:value-of select="format-number(number(string(.)), '#,###,###,##0.00')"/>
																</fo:inline>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:ProductServiceDescription">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
									</xsl:if>
								</xsl:for-each>
								<fo:block/>
								<fo:block/>
								<fo:block text-align="center">
									<fo:leader leader-pattern="rule" rule-thickness="2" leader-length="100%"/>
								</fo:block>
								<fo:inline font-family="Arial" font-size="11pt" font-weight="bold">
									<xsl:text>Subcontracts</xsl:text>
								</fo:inline>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block margin="0pt">
									<fo:block/>
								</fo:block>
								<fo:inline font-family="Arial" font-size="10pt" font-weight="bold">
									<xsl:text>List Of Subcontracts</xsl:text>
								</fo:inline>
								<fo:block/>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block margin="0pt">
									<fo:block/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<xsl:if test="recoveryrr-ext:GrantLoanSubRecipientReport">
									<fo:table font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="-1pt">
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-header start-indent="0pt">
											<fo:table-row>
												<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Award Date</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>AwardAmount</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Amount Disbursed</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-header>
										<fo:table-body start-indent="0pt">
											<xsl:for-each select="recoveryrr-ext:GrantLoanSubRecipientReport">
												<fo:table-row>
													<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:AwardDate">
																<fo:inline>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00')"/>
																	<xsl:text>/</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00')"/>
																	<xsl:text>/</xsl:text>
																	<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000')"/>
																</fo:inline>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:AwardAmount">
																<fo:inline>
																	<xsl:text>$</xsl:text>
																</fo:inline>
																<fo:inline>
																	<xsl:value-of select="format-number(number(string(.)), '#,###,###,##0.00')"/>
																</fo:inline>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:SubAwardAmountDisbursed">
																<fo:inline>
																	<xsl:text>$</xsl:text>
																</fo:inline>
																<fo:inline>
																	<xsl:value-of select="format-number(number(string(.)), '#,###,###,##0.00')"/>
																</fo:inline>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</xsl:for-each>
										</fo:table-body>
									</fo:table>
								</xsl:if>
								<fo:block/>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block margin="0pt">
									<fo:block/>
								</fo:block>
								<fo:block/>
								<xsl:for-each select="recoveryrr-ext:GrantLoanSubRecipientReport">
									<fo:block/>
									<fo:inline font-family="Arial" font-size="11pt" font-weight="bold">
										<xsl:text>Subcontract Details For Sub-award Number&#160; </xsl:text>
									</fo:inline>
									<xsl:for-each select="recoveryrr-ext:SubAwardNumber">
										<xsl:variable name="value-of-template">
											<xsl:apply-templates/>
										</xsl:variable>
										<xsl:choose>
											<xsl:when test="contains(string($value-of-template),'&#x2029;')">
												<fo:block font-family="Arial" font-size="11pt" font-weight="bold">
													<xsl:copy-of select="$value-of-template"/>
												</fo:block>
											</xsl:when>
											<xsl:otherwise>
												<fo:inline font-family="Arial" font-size="11pt" font-weight="bold">
													<xsl:copy-of select="$value-of-template"/>
												</fo:inline>
											</xsl:otherwise>
										</xsl:choose>
									</xsl:for-each>
									<fo:inline font-family="Arial" font-size="11pt" font-weight="bold">
										<xsl:text>&#160; </xsl:text>
									</fo:inline>
									<fo:block>
										<fo:leader leader-pattern="space"/>
									</fo:block>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:block margin="0pt">
										<fo:block/>
									</fo:block>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="2pt">
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-body start-indent="0pt">
											<fo:table-row>
												<fo:table-cell font-weight="bold" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline font-family="Arial" font-size="9pt">
															<xsl:text>Sub- Recipient DUNS:</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block>
														<xsl:for-each select="recoveryrr-ext:SubRecipient">
															<xsl:for-each select="recoveryrr-ext:SubRecipientDUNS">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block/>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell font-weight="bold" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Congressional District:</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block>
														<xsl:for-each select="recoveryrr-ext:SubRecipient">
															<xsl:for-each select="recoveryrr-ext:CongressionalDistrict">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block/>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell font-weight="bold" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Sub-award Date:</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block>
														<xsl:for-each select="recoveryrr-ext:AwardDate">
															<fo:inline>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 6, 2)), '00')"/>
																<xsl:text>/</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(.)), 9, 2)), '00')"/>
																<xsl:text>/</xsl:text>
																<xsl:value-of select="format-number(number(substring(string(string(string(.))), 1, 4)), '0000')"/>
															</fo:inline>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block/>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell font-weight="bold" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Sub-award Amount:</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block>
														<xsl:for-each select="recoveryrr-ext:AwardAmount">
															<fo:inline>
																<xsl:text>$</xsl:text>
															</fo:inline>
															<fo:inline>
																<xsl:value-of select="format-number(number(string(.)), '#,###,###,##0.00')"/>
															</fo:inline>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block/>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell font-weight="bold" padding="2pt" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Amount Disbursed:</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block>
														<xsl:for-each select="recoveryrr-ext:SubAwardAmountDisbursed">
															<fo:inline>
																<xsl:text>$</xsl:text>
															</fo:inline>
															<fo:inline>
																<xsl:value-of select="format-number(number(string(.)), '#,###,###,##0.00')"/>
															</fo:inline>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block/>
												</fo:table-cell>
												<fo:table-cell padding="2pt" display-align="center">
													<fo:block/>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-body>
									</fo:table>
									<fo:block>
										<fo:leader leader-pattern="space"/>
									</fo:block>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:block margin="0pt">
										<fo:block/>
									</fo:block>
									<fo:block/>
									<fo:inline font-family="Arial" font-size="10pt" font-weight="bold">
										<xsl:text>5 Most Highly Compensated Individuals </xsl:text>
									</fo:inline>
									<fo:block>
										<fo:leader leader-pattern="space"/>
									</fo:block>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:block margin="0pt">
										<fo:block/>
									</fo:block>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<xsl:if test="recoveryrr-ext:SubRecipient/recoveryrr-ext:CompensatedOfficer">
										<fo:table font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="2pt">
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-header start-indent="0pt">
												<fo:table-row>
													<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline font-weight="bold">
																<xsl:text>Name</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
														<fo:block>
															<fo:inline font-weight="bold">
																<xsl:text>Compensation Amount</xsl:text>
															</fo:inline>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-header>
											<fo:table-body start-indent="0pt">
												<xsl:for-each select="recoveryrr-ext:SubRecipient">
													<xsl:for-each select="recoveryrr-ext:CompensatedOfficer">
														<fo:table-row>
															<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="nc:PersonFullName">
																		<xsl:variable name="value-of-template">
																			<xsl:apply-templates/>
																		</xsl:variable>
																		<xsl:choose>
																			<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																				<fo:block>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:block>
																			</xsl:when>
																			<xsl:otherwise>
																				<fo:inline>
																					<xsl:copy-of select="$value-of-template"/>
																				</fo:inline>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
															<fo:table-cell border="solid 1pt gray" padding="2pt" display-align="center">
																<fo:block>
																	<xsl:for-each select="recoveryrr-ext:OfficerCompensation">
																		<fo:inline>
																			<xsl:text>$</xsl:text>
																		</fo:inline>
																		<fo:inline>
																			<xsl:value-of select="format-number(number(string(.)), '#,###,###,##0.00')"/>
																		</fo:inline>
																	</xsl:for-each>
																</fo:block>
															</fo:table-cell>
														</fo:table-row>
													</xsl:for-each>
												</xsl:for-each>
											</fo:table-body>
										</fo:table>
									</xsl:if>
									<fo:block>
										<fo:leader leader-pattern="space"/>
									</fo:block>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:block margin="0pt">
										<fo:block/>
									</fo:block>
									<fo:inline font-family="Arial" font-size="10pt" font-weight="bold">
										<xsl:text>Primary Place Of Research Activity</xsl:text>
									</fo:inline>
									<fo:block/>
									<fo:block>
										<fo:leader leader-pattern="space"/>
									</fo:block>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:block margin="0pt">
										<fo:block/>
									</fo:block>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:table font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border-spacing="0">
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-column column-width="proportional-column-width(1)"/>
										<fo:table-body start-indent="0pt">
											<fo:table-row>
												<fo:table-cell font-weight="bold" padding="0" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text>Address:</xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell number-columns-spanned="3" padding="0" display-align="center">
													<fo:block>
														<xsl:for-each select="recoveryrr-ext:PlaceOfPerformance">
															<xsl:for-each select="recoveryrr-ext:Address">
																<xsl:for-each select="nc:AddressDeliveryPointText">
																	<xsl:variable name="value-of-template">
																		<xsl:apply-templates/>
																	</xsl:variable>
																	<xsl:choose>
																		<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																			<fo:block>
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:block>
																		</xsl:when>
																		<xsl:otherwise>
																			<fo:inline>
																				<xsl:copy-of select="$value-of-template"/>
																			</fo:inline>
																		</xsl:otherwise>
																	</xsl:choose>
																</xsl:for-each>
															</xsl:for-each>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
											<fo:table-row>
												<fo:table-cell font-weight="bold" padding="0" display-align="center">
													<fo:block>
														<fo:inline>
															<xsl:text> Congressional District:&#160; </xsl:text>
														</fo:inline>
													</fo:block>
												</fo:table-cell>
												<fo:table-cell number-columns-spanned="3" padding="0" display-align="center">
													<fo:block>
														<xsl:for-each select="recoveryrr-ext:PlaceOfPerformance">
															<xsl:for-each select="recoveryrr-ext:CongressionalDistrict">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</xsl:for-each>
													</fo:block>
												</fo:table-cell>
											</fo:table-row>
										</fo:table-body>
									</fo:table>
									<fo:block>
										<fo:leader leader-pattern="space"/>
									</fo:block>
									<fo:inline-container>
										<fo:block>
											<xsl:text>&#x2029;</xsl:text>
										</fo:block>
									</fo:inline-container>
									<fo:block margin="0pt">
										<fo:block/>
									</fo:block>
								</xsl:for-each>
								<fo:block/>
								<fo:inline font-family="Arial" font-size="10pt" font-weight="bold">
									<xsl:text>Vendor Details Of Subcontracts</xsl:text>
								</fo:inline>
								<fo:block/>
								<fo:block>
									<fo:leader leader-pattern="space"/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:block margin="0pt">
									<fo:block/>
								</fo:block>
								<fo:inline-container>
									<fo:block>
										<xsl:text>&#x2029;</xsl:text>
									</fo:block>
								</fo:inline-container>
								<fo:table font-family="Arial" font-size="9pt" font-weight="bold" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="-1pt">
									<fo:table-column column-width="proportional-column-width(1)"/>
									<fo:table-column column-width="proportional-column-width(1)"/>
									<fo:table-column column-width="proportional-column-width(1)"/>
									<fo:table-column column-width="proportional-column-width(1)"/>
									<fo:table-column column-width="proportional-column-width(1)"/>
									<fo:table-body start-indent="0pt">
										<fo:table-row>
											<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
												<fo:block>
													<fo:inline>
														<xsl:text>Vendor Name</xsl:text>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
												<fo:block>
													<fo:inline>
														<xsl:text>Vendor DUNS</xsl:text>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
												<fo:block>
													<fo:inline>
														<xsl:text>Zip Code</xsl:text>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
												<fo:block>
													<fo:inline>
														<xsl:text>Payment Amount </xsl:text>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
											<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
												<fo:block>
													<fo:inline>
														<xsl:text>Service Description</xsl:text>
													</fo:inline>
												</fo:block>
											</fo:table-cell>
										</fo:table-row>
									</fo:table-body>
								</fo:table>
								<xsl:for-each select="recoveryrr-ext:Vendor">
									<fo:block/>
									<xsl:if test="count(  recoveryrr-ext:SubAwardNumber  ) &gt;0">
										<fo:inline-container>
											<fo:block>
												<xsl:text>&#x2029;</xsl:text>
											</fo:block>
										</fo:inline-container>
										<fo:table font-family="Arial" font-size="9pt" table-layout="fixed" width="100%" border="solid 1pt gray" border-spacing="-1pt">
											<fo:table-column column-width="10%"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
														<fo:block>
															<xsl:for-each select="nc:OrganizationName">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:VendorDUNS">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
														<fo:block>
															<xsl:for-each select="nc:LocationPostalCode">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
															<xsl:for-each select="nc:LocationPostalExtensionCode">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:PaymentAmount">
																<fo:inline>
																	<xsl:text>$</xsl:text>
																</fo:inline>
																<fo:inline>
																	<xsl:value-of select="format-number(number(string(.)), '#,###,###,##0.00')"/>
																</fo:inline>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell border="solid 1pt gray" padding="0" display-align="center">
														<fo:block>
															<xsl:for-each select="recoveryrr-ext:ProductServiceDescription">
																<xsl:variable name="value-of-template">
																	<xsl:apply-templates/>
																</xsl:variable>
																<xsl:choose>
																	<xsl:when test="contains(string($value-of-template),'&#x2029;')">
																		<fo:block>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:block>
																	</xsl:when>
																	<xsl:otherwise>
																		<fo:inline>
																			<xsl:copy-of select="$value-of-template"/>
																		</fo:inline>
																	</xsl:otherwise>
																</xsl:choose>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
									</xsl:if>
								</xsl:for-each>
								<fo:block/>
								<fo:block/>
							</xsl:for-each>
							<fo:block/>
							<fo:block/>
							<fo:block/>
							<fo:block/>
							<fo:block/>
						</xsl:for-each>
					</fo:block>
					<fo:block id="SV_RefID_PageTotal"/>
				</fo:flow>
			</fo:page-sequence>
		</fo:root>
	</xsl:template>
	<xsl:template name="headerall">
		<fo:static-content flow-name="xsl-region-before">
			<fo:block/>
		</fo:static-content>
	</xsl:template>
	<xsl:template name="footerall">
		<fo:static-content flow-name="xsl-region-after">
			<fo:block>
				<fo:inline-container>
					<fo:block>
						<xsl:text>&#x2029;</xsl:text>
					</fo:block>
				</fo:inline-container>
				<fo:table table-layout="fixed" width="100%" border-spacing="2pt">
					<fo:table-column column-width="proportional-column-width(1)"/>
					<fo:table-column column-width="150"/>
					<fo:table-body start-indent="0pt">
						<fo:table-row>
							<fo:table-cell padding="0" number-columns-spanned="2" height="30" display-align="center">
								<fo:block/>
							</fo:table-cell>
						</fo:table-row>
						<fo:table-row>
							<fo:table-cell padding="0" number-columns-spanned="2" display-align="center">
								<fo:block>
									<fo:block text-align="center">
										<fo:leader top="-37pt" leader-pattern="rule" rule-thickness="1" leader-length="100%" color="black"/>
									</fo:block>
								</fo:block>
							</fo:table-cell>
						</fo:table-row>
						<fo:table-row>
							<fo:table-cell font-size="10pt" padding="0" text-align="left" display-align="center">
								<fo:block/>
							</fo:table-cell>
							<fo:table-cell font-size="10pt" padding="0" text-align="right" display-align="center">
								<fo:block>
									<fo:inline font-weight="bold">
										<xsl:text>Page: </xsl:text>
									</fo:inline>
									<fo:page-number font-weight="bold"/>
								</fo:block>
							</fo:table-cell>
						</fo:table-row>
					</fo:table-body>
				</fo:table>
			</fo:block>
		</fo:static-content>
	</xsl:template>
	<xsl:template name="double-backslash">
		<xsl:param name="text"/>
		<xsl:param name="text-length"/>
		<xsl:variable name="text-after-bs" select="substring-after($text, '\')"/>
		<xsl:variable name="text-after-bs-length" select="string-length($text-after-bs)"/>
		<xsl:choose>
			<xsl:when test="$text-after-bs-length = 0">
				<xsl:choose>
					<xsl:when test="substring($text, $text-length) = '\'">
						<xsl:value-of select="concat(substring($text,1,$text-length - 1), '\\')"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$text"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(substring($text,1,$text-length - $text-after-bs-length - 1), '\\')"/>
				<xsl:call-template name="double-backslash">
					<xsl:with-param name="text" select="$text-after-bs"/>
					<xsl:with-param name="text-length" select="$text-after-bs-length"/>
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
</xsl:stylesheet>
