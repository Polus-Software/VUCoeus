//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.04.27 at 09:21:38 AM IST 
//


package edu.mit.coeus.xml.instprop.impl;

public class BudgetDataTypeImpl implements edu.mit.coeus.xml.instprop.BudgetDataType, com.sun.xml.bind.JAXBObject, edu.mit.coeus.xml.instprop.impl.runtime.UnmarshallableObject, edu.mit.coeus.xml.instprop.impl.runtime.XMLSerializable, edu.mit.coeus.xml.instprop.impl.runtime.ValidatableObject
{

    protected java.math.BigDecimal _TotalCostInitial;
    protected java.math.BigDecimal _TotalDirectCostTotal;
    protected java.math.BigDecimal _TotalCostTotal;
    protected java.math.BigDecimal _TotalIndirectCostTotal;
    protected java.util.Calendar _RequestedEndDateTotal;
    protected java.math.BigDecimal _TotalIndirectCostInitial;
    protected java.util.Calendar _RequestedEndDateInitial;
    protected java.util.Calendar _RequestedStartDateInitial;
    protected java.math.BigDecimal _TotalDirectCostInitial;
    protected java.util.Calendar _RequestedStartDateTotal;
    protected java.lang.String _AccountType;
    public final static java.lang.Class version = (edu.mit.coeus.xml.instprop.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (edu.mit.coeus.xml.instprop.BudgetDataType.class);
    }

    public java.math.BigDecimal getTotalCostInitial() {
        return _TotalCostInitial;
    }

    public void setTotalCostInitial(java.math.BigDecimal value) {
        _TotalCostInitial = value;
    }

    public java.math.BigDecimal getTotalDirectCostTotal() {
        return _TotalDirectCostTotal;
    }

    public void setTotalDirectCostTotal(java.math.BigDecimal value) {
        _TotalDirectCostTotal = value;
    }

    public java.math.BigDecimal getTotalCostTotal() {
        return _TotalCostTotal;
    }

    public void setTotalCostTotal(java.math.BigDecimal value) {
        _TotalCostTotal = value;
    }

    public java.math.BigDecimal getTotalIndirectCostTotal() {
        return _TotalIndirectCostTotal;
    }

    public void setTotalIndirectCostTotal(java.math.BigDecimal value) {
        _TotalIndirectCostTotal = value;
    }

    public java.util.Calendar getRequestedEndDateTotal() {
        return _RequestedEndDateTotal;
    }

    public void setRequestedEndDateTotal(java.util.Calendar value) {
        _RequestedEndDateTotal = value;
    }

    public java.math.BigDecimal getTotalIndirectCostInitial() {
        return _TotalIndirectCostInitial;
    }

    public void setTotalIndirectCostInitial(java.math.BigDecimal value) {
        _TotalIndirectCostInitial = value;
    }

    public java.util.Calendar getRequestedEndDateInitial() {
        return _RequestedEndDateInitial;
    }

    public void setRequestedEndDateInitial(java.util.Calendar value) {
        _RequestedEndDateInitial = value;
    }

    public java.util.Calendar getRequestedStartDateInitial() {
        return _RequestedStartDateInitial;
    }

    public void setRequestedStartDateInitial(java.util.Calendar value) {
        _RequestedStartDateInitial = value;
    }

    public java.math.BigDecimal getTotalDirectCostInitial() {
        return _TotalDirectCostInitial;
    }

    public void setTotalDirectCostInitial(java.math.BigDecimal value) {
        _TotalDirectCostInitial = value;
    }

    public java.util.Calendar getRequestedStartDateTotal() {
        return _RequestedStartDateTotal;
    }

    public void setRequestedStartDateTotal(java.util.Calendar value) {
        _RequestedStartDateTotal = value;
    }

    public java.lang.String getAccountType() {
        return _AccountType;
    }

    public void setAccountType(java.lang.String value) {
        _AccountType = value;
    }

    public edu.mit.coeus.xml.instprop.impl.runtime.UnmarshallingEventHandler createUnmarshaller(edu.mit.coeus.xml.instprop.impl.runtime.UnmarshallingContext context) {
        return new edu.mit.coeus.xml.instprop.impl.BudgetDataTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(edu.mit.coeus.xml.instprop.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_AccountType!= null) {
            context.startElement("", "AccountType");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _AccountType), "AccountType");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.xml.instprop.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_RequestedStartDateInitial!= null) {
            context.startElement("", "requestedStartDateInitial");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDate(((java.util.Calendar) _RequestedStartDateInitial)), "RequestedStartDateInitial");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.xml.instprop.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_RequestedEndDateInitial!= null) {
            context.startElement("", "requestedEndDateInitial");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDate(((java.util.Calendar) _RequestedEndDateInitial)), "RequestedEndDateInitial");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.xml.instprop.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_RequestedStartDateTotal!= null) {
            context.startElement("", "requestedStartDateTotal");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDate(((java.util.Calendar) _RequestedStartDateTotal)), "RequestedStartDateTotal");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.xml.instprop.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_RequestedEndDateTotal!= null) {
            context.startElement("", "requestedEndDateTotal");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDate(((java.util.Calendar) _RequestedEndDateTotal)), "RequestedEndDateTotal");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.xml.instprop.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_TotalDirectCostInitial!= null) {
            context.startElement("", "totalDirectCostInitial");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _TotalDirectCostInitial)), "TotalDirectCostInitial");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.xml.instprop.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_TotalDirectCostTotal!= null) {
            context.startElement("", "totalDirectCostTotal");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _TotalDirectCostTotal)), "TotalDirectCostTotal");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.xml.instprop.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_TotalCostInitial!= null) {
            context.startElement("", "totalCostInitial");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _TotalCostInitial)), "TotalCostInitial");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.xml.instprop.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_TotalCostTotal!= null) {
            context.startElement("", "totalCostTotal");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _TotalCostTotal)), "TotalCostTotal");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.xml.instprop.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_TotalIndirectCostInitial!= null) {
            context.startElement("", "totalIndirectCostInitial");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _TotalIndirectCostInitial)), "TotalIndirectCostInitial");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.xml.instprop.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_TotalIndirectCostTotal!= null) {
            context.startElement("", "totalIndirectCostTotal");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _TotalIndirectCostTotal)), "TotalIndirectCostTotal");
            } catch (java.lang.Exception e) {
                edu.mit.coeus.xml.instprop.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(edu.mit.coeus.xml.instprop.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(edu.mit.coeus.xml.instprop.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (edu.mit.coeus.xml.instprop.BudgetDataType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.Choi"
+"ceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.Element"
+"Pattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameCl"
+"ass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUn"
+"declaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Bo"
+"olean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar"
+".DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000"
+"\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003pps"
+"r\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlways"
+"Validxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'co"
+"m.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespace"
+"Urit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteSpacet\u0000.Lcom"
+"/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3"
+".org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.Whi"
+"teSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype"
+".xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.gramma"
+"r.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun"
+".msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000 L\u0000\fnamespace"
+"URIq\u0000~\u0000 xpq\u0000~\u0000$q\u0000~\u0000#sq\u0000~\u0000\u000fppsr\u0000 com.sun.msv.grammar.Attribut"
+"eExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0012xq\u0000~\u0000\u0003q\u0000~\u0000\u0016psq\u0000~\u0000"
+"\u0018ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001dq\u0000"
+"~\u0000#t\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$"
+"Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000&q\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u00002q\u0000~\u0000#sr\u0000#com.sun.ms"
+"v.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000 L\u0000\fname"
+"spaceURIq\u0000~\u0000 xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt"
+"\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u00000com.su"
+"n.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003s"
+"q\u0000~\u0000\u0015\u0001q\u0000~\u0000<sq\u0000~\u00006t\u0000\u000bAccountTypet\u0000\u0000q\u0000~\u0000<sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0011q\u0000~\u0000\u0016p\u0000"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0018ppsr\u0000!com.sun.msv.datatype.xsd.DateType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000"
+"xq\u0000~\u0000\u001dq\u0000~\u0000#t\u0000\u0004dateq\u0000~\u00004q\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u0000Hq\u0000~\u0000#sq\u0000~\u0000\u000fppsq\u0000~\u0000-q\u0000"
+"~\u0000\u0016pq\u0000~\u0000/q\u0000~\u00008q\u0000~\u0000<sq\u0000~\u00006t\u0000\u0019requestedStartDateInitialq\u0000~\u0000@q\u0000"
+"~\u0000<sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0011q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Dsq\u0000~\u0000\u000fppsq\u0000~\u0000-q\u0000~\u0000\u0016pq\u0000~"
+"\u0000/q\u0000~\u00008q\u0000~\u0000<sq\u0000~\u00006t\u0000\u0017requestedEndDateInitialq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000f"
+"ppsq\u0000~\u0000\u0011q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Dsq\u0000~\u0000\u000fppsq\u0000~\u0000-q\u0000~\u0000\u0016pq\u0000~\u0000/q\u0000~\u00008q\u0000"
+"~\u0000<sq\u0000~\u00006t\u0000\u0017requestedStartDateTotalq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0011q"
+"\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Dsq\u0000~\u0000\u000fppsq\u0000~\u0000-q\u0000~\u0000\u0016pq\u0000~\u0000/q\u0000~\u00008q\u0000~\u0000<sq\u0000~\u00006"
+"t\u0000\u0015requestedEndDateTotalq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0011q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000"
+"\u0000ppsq\u0000~\u0000\u0018ppsr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u001dq\u0000~\u0000#t\u0000\u0007decimalq\u0000~\u00004q\u0000~\u0000)sq\u0000~\u0000*q\u0000~\u0000iq\u0000~\u0000#sq\u0000~\u0000\u000fppsq\u0000~"
+"\u0000-q\u0000~\u0000\u0016pq\u0000~\u0000/q\u0000~\u00008q\u0000~\u0000<sq\u0000~\u00006t\u0000\u0016totalDirectCostInitialq\u0000~\u0000@q"
+"\u0000~\u0000<sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0011q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000fsq\u0000~\u0000\u000fppsq\u0000~\u0000-q\u0000~\u0000\u0016pq\u0000"
+"~\u0000/q\u0000~\u00008q\u0000~\u0000<sq\u0000~\u00006t\u0000\u0014totalDirectCostTotalq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000fpp"
+"sq\u0000~\u0000\u0011q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000fsq\u0000~\u0000\u000fppsq\u0000~\u0000-q\u0000~\u0000\u0016pq\u0000~\u0000/q\u0000~\u00008q\u0000~\u0000"
+"<sq\u0000~\u00006t\u0000\u0010totalCostInitialq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0011q\u0000~\u0000\u0016p\u0000sq\u0000"
+"~\u0000\u0000ppq\u0000~\u0000fsq\u0000~\u0000\u000fppsq\u0000~\u0000-q\u0000~\u0000\u0016pq\u0000~\u0000/q\u0000~\u00008q\u0000~\u0000<sq\u0000~\u00006t\u0000\u000etotalC"
+"ostTotalq\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0011q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000fsq\u0000~\u0000\u000fpp"
+"sq\u0000~\u0000-q\u0000~\u0000\u0016pq\u0000~\u0000/q\u0000~\u00008q\u0000~\u0000<sq\u0000~\u00006t\u0000\u0018totalIndirectCostInitial"
+"q\u0000~\u0000@q\u0000~\u0000<sq\u0000~\u0000\u000fppsq\u0000~\u0000\u0011q\u0000~\u0000\u0016p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000fsq\u0000~\u0000\u000fppsq\u0000~\u0000-q\u0000"
+"~\u0000\u0016pq\u0000~\u0000/q\u0000~\u00008q\u0000~\u0000<sq\u0000~\u00006t\u0000\u0016totalIndirectCostTotalq\u0000~\u0000@q\u0000~\u0000<"
+"sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTable"
+"t\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com."
+"sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005count"
+"B\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionP"
+"ool;xp\u0000\u0000\u0000+\u0001pq\u0000~\u0000\fq\u0000~\u0000\u000bq\u0000~\u0000Cq\u0000~\u0000Pq\u0000~\u0000Wq\u0000~\u0000^q\u0000~\u0000eq\u0000~\u0000qq\u0000~\u0000xq\u0000~"
+"\u0000\u0010q\u0000~\u0000\u007fq\u0000~\u0000\u0086q\u0000~\u0000\u008dq\u0000~\u0000\u0017q\u0000~\u0000\u0005q\u0000~\u0000,q\u0000~\u0000Jq\u0000~\u0000Qq\u0000~\u0000Xq\u0000~\u0000_q\u0000~\u0000kq\u0000~"
+"\u0000rq\u0000~\u0000yq\u0000~\u0000\u0080q\u0000~\u0000\u0087q\u0000~\u0000\u008eq\u0000~\u0000Aq\u0000~\u0000Nq\u0000~\u0000Uq\u0000~\u0000\\q\u0000~\u0000\u0007q\u0000~\u0000\nq\u0000~\u0000\bq\u0000~"
+"\u0000\rq\u0000~\u0000\u000eq\u0000~\u0000\tq\u0000~\u0000cq\u0000~\u0000oq\u0000~\u0000vq\u0000~\u0000}q\u0000~\u0000\u0084q\u0000~\u0000\u008bq\u0000~\u0000\u0006x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends edu.mit.coeus.xml.instprop.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(edu.mit.coeus.xml.instprop.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------------------------");
        }

        protected Unmarshaller(edu.mit.coeus.xml.instprop.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return edu.mit.coeus.xml.instprop.impl.BudgetDataTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("AccountType" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  21 :
                        if (("totalCostInitial" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  15 :
                        if (("totalDirectCostInitial" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  27 :
                        if (("totalIndirectCostInitial" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        state = 30;
                        continue outer;
                    case  24 :
                        if (("totalCostTotal" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  6 :
                        if (("requestedEndDateInitial" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  18 :
                        if (("totalDirectCostTotal" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  30 :
                        if (("totalIndirectCostTotal" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        state = 33;
                        continue outer;
                    case  9 :
                        if (("requestedStartDateTotal" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  33 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  3 :
                        if (("requestedStartDateInitial" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  12 :
                        if (("requestedEndDateTotal" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        state = 3;
                        continue outer;
                    case  2 :
                        if (("AccountType" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  20 :
                        if (("totalDirectCostTotal" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  17 :
                        if (("totalDirectCostInitial" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("requestedEndDateInitial" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  23 :
                        if (("totalCostInitial" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  32 :
                        if (("totalIndirectCostTotal" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  14 :
                        if (("requestedEndDateTotal" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  5 :
                        if (("requestedStartDateInitial" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  11 :
                        if (("requestedStartDateTotal" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  29 :
                        if (("totalIndirectCostInitial" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  33 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  26 :
                        if (("totalCostTotal" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  12 :
                        state = 15;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        state = 3;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  33 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        state = 3;
                        continue outer;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  27 :
                        state = 30;
                        continue outer;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  30 :
                        state = 33;
                        continue outer;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  33 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  0 :
                            state = 3;
                            continue outer;
                        case  19 :
                            state = 20;
                            eatText1(value);
                            return ;
                        case  1 :
                            state = 2;
                            eatText2(value);
                            return ;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  31 :
                            state = 32;
                            eatText3(value);
                            return ;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  22 :
                            state = 23;
                            eatText4(value);
                            return ;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  25 :
                            state = 26;
                            eatText5(value);
                            return ;
                        case  4 :
                            state = 5;
                            eatText6(value);
                            return ;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  16 :
                            state = 17;
                            eatText7(value);
                            return ;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  7 :
                            state = 8;
                            eatText8(value);
                            return ;
                        case  33 :
                            revertToParentFromText(value);
                            return ;
                        case  28 :
                            state = 29;
                            eatText9(value);
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  10 :
                            state = 11;
                            eatText10(value);
                            return ;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  13 :
                            state = 14;
                            eatText11(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _TotalDirectCostTotal = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _AccountType = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _TotalIndirectCostTotal = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _TotalCostInitial = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _TotalCostTotal = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RequestedStartDateInitial = javax.xml.bind.DatatypeConverter.parseDate(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _TotalDirectCostInitial = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RequestedEndDateInitial = javax.xml.bind.DatatypeConverter.parseDate(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _TotalIndirectCostInitial = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RequestedStartDateTotal = javax.xml.bind.DatatypeConverter.parseDate(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RequestedEndDateTotal = javax.xml.bind.DatatypeConverter.parseDate(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
